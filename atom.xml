<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BOHC!</title>
  
  <subtitle>blog of hechao!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hewanyue.com/"/>
  <updated>2019-12-09T02:47:35.873Z</updated>
  <id>https://hewanyue.com/</id>
  
  <author>
    <name>Hechao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker（五）——Docker镜像仓库</title>
    <link href="https://hewanyue.com//blog/6187894.html"/>
    <id>https://hewanyue.com//blog/6187894.html</id>
    <published>2019-12-07T14:30:04.000Z</published>
    <updated>2019-12-09T02:47:35.873Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;比较常见的docker镜像仓库，有docker官方仓库<a href="https://hub.docker.com/" rel="noopener" target="_blank">https://hub.docker.com/</a>，和阿里云镜像仓库<code>https://cr.console.aliyun.com/cn-hangzhou/instances/images</code>，可以比较方便的拉取镜像或储存容器镜像。而在企业生产中，绝对部分情况我们都是使用企业内部的镜像仓库，来分发部署我们的代码。本文将详细介绍阿里云仓库还有私有云仓库Registry、Harbor的搭建和使用的详细步骤方法。<br><a id="more"></a></p><h2 id="阿里云仓库"><a href="#阿里云仓库" class="headerlink" title="阿里云仓库"></a>阿里云仓库</h2><p>&emsp;&emsp;docker官方仓库配置比较简单，而且大部分是默认配置，且速度不如阿里云镜像仓库速度快，所以我这里就不介绍了，使用方式和阿里云容器镜像仓库差不多类似。</p><h3 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h3><p>&emsp;&emsp;使用阿里云仓库服务首先要注册阿里云账号，支付宝也可以登陆，比较快捷。点击上面的网址登陆即可。<br><img src="https://img-blog.csdnimg.cn/20191207213751920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><p>&emsp;&emsp;先创建一个命名空间，这相当于每个人独立的url，可以以代码类别或者性质命名创建（也可以凭个人喜好），每个账号只能创建5个命名空间，不过也够用了。<br>&emsp;&emsp;然后创建镜像仓库。<br><img src="https://img-blog.csdnimg.cn/2019120721442027.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;地域选择离自己比较近的地域，这样延迟会稍微低一些，选择已创建的命名空间，仓库名的命名一般是服务名或者软件名。公开或者私有看个人请款选择。</p><h3 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h3><p>&emsp;&emsp;有了仓库之后，我们就可以上传镜像了。</p><h4 id="打标签"><a href="#打标签" class="headerlink" title="打标签"></a>打标签</h4><p>&emsp;&emsp;要上传镜像，第一步，要先重新打标签，将阿里云的仓库源的地址，仓库名，以及版本号重新打标签，生成新镜像。例如对已有的haproxy镜像重新打标签，因为我选择的是北京节点，所以打标命令如下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag haproxy-base:v1 registry<span class="selector-class">.cn-beijing</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/【命名空间名称】/【仓库名】:【版本号】</span><br></pre></td></tr></table></figure></p><h4 id="登陆"><a href="#登陆" class="headerlink" title="登陆"></a>登陆</h4><p>&emsp;&emsp;想上传或者下载镜像一般都需要授权才可以，这就要求我们要用有权限的帐号登陆，才可以上传镜像或者下载镜像。<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@DockerUbuntu</span><span class="symbol">:/opt/dockerfile/web/haproxy/</span><span class="number">2.0</span>.<span class="number">5</span><span class="comment"># docker login --username=【账号名】 registry.cn-beijing.aliyuncs.com</span></span><br><span class="line"><span class="symbol">Password:</span> </span><br><span class="line">WARNING! Your password will be stored unencrypted <span class="keyword">in</span> /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line"><span class="symbol">https:</span>/<span class="regexp">/docs.docker.com/engine</span><span class="regexp">/reference/commandline</span><span class="regexp">/login/</span><span class="comment">#credentials-store</span></span><br><span class="line"></span><br><span class="line">Login Succeeded</span><br><span class="line">root<span class="variable">@DockerUbuntu</span><span class="symbol">:/opt/dockerfile/web/haproxy/</span><span class="number">2.0</span>.<span class="number">5</span><span class="comment">#</span></span><br></pre></td></tr></table></figure></p><h4 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h4><p>&emsp;&emsp;用<code>docker images</code>可以查看所有的镜像，选择已经打了阿里云网址的标签的镜像上传就可以了<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root<span class="meta">@DockerUbuntu</span>:<span class="regexp">/opt/</span>dockerfile<span class="regexp">/web/</span>haproxy<span class="regexp">/2.0.5# docker push registry.cn-beijing.aliyuncs.com/</span>【命名空间名称】/【仓库名】:【版本号】</span><br><span class="line">The push refers to repository [registry.cn-beijing.aliyuncs.com<span class="regexp">/命名空间名/</span>仓库名]</span><br><span class="line"><span class="number">0</span><span class="string">ec88a00d427:</span> Pushed </span><br><span class="line"><span class="number">6</span><span class="string">a6e6f03a1a5:</span> Pushed </span><br><span class="line"><span class="number">965</span><span class="string">bdb9c5299:</span> Pushed </span><br><span class="line"><span class="string">a1d450e33837:</span> Pushed </span><br><span class="line"><span class="number">837</span><span class="string">dac687863:</span> Pushed </span><br><span class="line"><span class="string">b39d6a9ec3e2:</span> Pushed </span><br><span class="line"><span class="number">1e7</span><span class="string">fbf47b8df:</span> Pushed </span><br><span class="line"><span class="string">dc298319f184:</span> Pushed </span><br><span class="line"><span class="string">e4809dffd3aa:</span> Pushed </span><br><span class="line"><span class="string">b3cdf76b6336:</span> Pushed </span><br><span class="line"><span class="number">2</span><span class="string">fc5c4732662:</span> Pushed </span><br><span class="line"><span class="number">2</span><span class="string">d03b9db6c3f:</span> Pushed </span><br><span class="line"><span class="number">89169</span><span class="string">d87dbe2:</span> Pushed </span><br><span class="line"><span class="string">haproxy:</span> <span class="string">digest:</span> <span class="string">sha256:</span>f0b4157cd18498e4bc373e333e4fb0b85a65d00e03de2d65015b0d0da9099af6 <span class="string">size:</span> <span class="number">3049</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;这时就上传成功了</p><h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><p>&emsp;&emsp;其他主机登陆成功之后，通过拉取命令就可以从阿里云端下载镜像了。<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@DockerCentOS ~]# docker pull registry.<span class="keyword">cn</span>-beijing.aliyuncs.<span class="keyword">com</span>/【命名空间名称】/【仓库名】:【版本号】</span><br><span class="line">haproxy: Pulling from xxxxxxxxxx/web</span><br><span class="line">ac9208207ad<span class="variable">a:</span> Already <span class="built_in">exists</span> </span><br><span class="line"><span class="number">75</span>c124fe932<span class="variable">b:</span> Pull <span class="built_in">complete</span> </span><br><span class="line"><span class="number">9</span>ef7eb04bb69: Pull <span class="built_in">complete</span> </span><br><span class="line">c5f97c472240: Pull <span class="built_in">complete</span> </span><br><span class="line"><span class="number">9</span>dc49af65399: Pull <span class="built_in">complete</span> </span><br><span class="line">a745615abdb<span class="variable">a:</span> Pull <span class="built_in">complete</span> </span><br><span class="line">ddcf37c0f462: Pull <span class="built_in">complete</span> </span><br><span class="line"><span class="number">0</span>c406d186167: Pull <span class="built_in">complete</span> </span><br><span class="line"><span class="number">246</span>fafa1cb32: Pull <span class="built_in">complete</span> </span><br><span class="line"><span class="number">057</span>e62247ad8: Pull <span class="built_in">complete</span> </span><br><span class="line"><span class="number">770</span>d7edff222: Pull <span class="built_in">complete</span> </span><br><span class="line">b4064e1ed3ec: Pull <span class="built_in">complete</span> </span><br><span class="line">d0a103ae1f19: Pull <span class="built_in">complete</span> </span><br><span class="line">Diges<span class="variable">t:</span> <span class="built_in">sha256</span>:f0b4157cd18498e4bc373e333e4fb0b85a65d00e03de2d65015b0d0da9099af6</span><br><span class="line">Statu<span class="variable">s:</span> Downloaded newer image <span class="keyword">for</span> registry.<span class="keyword">cn</span>-beijing.aliyuncs.<span class="keyword">com</span>/xxxxxxxxxx/we<span class="variable">b:haproxy</span></span><br><span class="line">registry.<span class="keyword">cn</span>-beijing.aliyuncs.<span class="keyword">com</span>/xxxxxxxxxx/we<span class="variable">b:haproxy</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;这时就可以在<code>docker images</code>的镜像列表中看到刚刚拉取的镜像了。</p><h2 id="搭建私有仓库"><a href="#搭建私有仓库" class="headerlink" title="搭建私有仓库"></a>搭建私有仓库</h2><p>&emsp;&emsp;阿里云镜像仓库虽然很方便，但是在生产环境中，每次都从云端拉取或者上传至云端仓库，太消耗企业带宽，有时候数据繁忙的时候，很有可能会堵塞业务，而且速度也较慢。所以企业中都会基于内部局域网搭建企业内部使用的私有仓库。一般搭建私有仓库有两种解决方案，一个是docker自带的Docker Registry，还有就是由vmware公司开源的harbor。</p><h3 id="Docker-Registry"><a href="#Docker-Registry" class="headerlink" title="Docker Registry"></a>Docker Registry</h3><p>&emsp;&emsp;Docker Registry 作为 Docker 的核心组件之一负责镜像内容的存储与分发， 客户端的 docker pull 以及 push 命令都将直接与 registry 进行交互,最初版本的 registry由Python实现,由于设计初期在安全性， 性能以及API的设计上有着诸多的缺陷，该版本在 0.9 之后停止了开发，由新的项目 distribution（新的 docker register 被称为 Distribution）来重新设计并开发下一代 registry，新的项目由 go 语言开发，所有的 API， 底层存储方式， 系统架构都进行了全面的重新设计已解决上一代registry 中存在的问题， 2016 年 4 月份 rgistry 2.0 正式发布， docker 1.6 版本开始支持 registry 2.0，而八月份随着 docker 1.8 发布， docker hub 正式启用 2.1 版本registry 全面替代之前版本 registry，新版 registry 对镜像存储格式进行了重新设计并和旧版不兼容， docker 1.5 和之前的版本无法读取 2.0 的镜像， 另外， Registry2.4 版本之后支持了回收站机制，也就是可以删除镜像了，在 2.4 版本之前是无法支持删除镜像的，所以如果你要使用最好是大于 Registry 2.4 版本的。<br>&emsp;&emsp;Docker Registry的优势就是比较小（25M），但是功能表比较简单。</p><h4 id="下载-docker-registry-镜像"><a href="#下载-docker-registry-镜像" class="headerlink" title="下载 docker registry 镜像"></a>下载 docker registry 镜像</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@DockerCentOS ~]# docker pull registry</span><br><span class="line">Using<span class="built_in"> default </span>tag: latest</span><br><span class="line">latest: Pulling <span class="keyword">from</span> library/registry</span><br><span class="line">c87736221ed0: Pull complete </span><br><span class="line">1cc8e0bb44df: Pull complete </span><br><span class="line">54d33bcb37f5: Pull complete </span><br><span class="line">e8afc091c171: Pull complete </span><br><span class="line">b4541f6d3db6: Pull complete </span><br><span class="line">Digest: sha256:8004747f1e8cd820a148fb7499d71a76d45ff66bac6a29129bfdbfdc0154d146</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> registry:latest</span><br><span class="line">docker.io/library/registry:latest</span><br></pre></td></tr></table></figure><h4 id="搭建单机仓库"><a href="#搭建单机仓库" class="headerlink" title="搭建单机仓库"></a>搭建单机仓库</h4><p>&emsp;&emsp;先创建授权使用目录<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -<span class="selector-tag">p</span> /docker/auth</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;创建一个用户并创建密码文件<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/docker</span></span><br><span class="line">docker run <span class="params">--entrypoint</span> htpasswd registry -Bbn Mice 123456 &gt; auth/htpasswd <span class="comment">#创建一个用户并生成密码</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;验证用户名密码<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@DockerCentOS</span> docker]<span class="meta"># cat auth/htpasswd</span></span><br><span class="line">Mice:$2y$05$XqNS4BH3gkxodR9MQyhnIuL19uT4wfa6MjUgXvJUYuo0T0o0J8Tzy</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;从registry镜像中启动 docker registry,指定容器名称为<code>registry1</code>，挂载本地/docker/auth目录至容器的/auth目录，传递账号密码变量至容器。<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 5000:5000 --restart=always \</span><br><span class="line">-<span class="ruby">-name registry1 \</span></span><br><span class="line"><span class="ruby">-v /docker/<span class="symbol">auth:</span>/auth \</span></span><br><span class="line"><span class="ruby">-e <span class="string">"REGISTRY_AUTH=htpasswd"</span> \</span></span><br><span class="line"><span class="ruby">-e <span class="string">"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm"</span> \</span></span><br><span class="line"><span class="ruby">-e REGISTRY_AUTH_HTPASSWD_PATH=<span class="regexp">/auth/htpasswd</span>\</span></span><br><span class="line"><span class="ruby"> registry</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;此时如果用我们创建的用户名密码尝试登陆了，记得IP或者域名后面要加<strong>5000端口</strong>，否则会报<strong>502</strong>错误。<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@DockerUbuntu19:~# docker login 192.168.32.20</span><br><span class="line">Username: Mice</span><br><span class="line">Password: </span><br><span class="line"><span class="keyword">Error </span>response from daemon: login attempt to http://192.168.32.20/v2/ failed with status: 502 Bad Gateway</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;不过很有可能当你加上5000端口，可能还会有报错。ヾ(≧O≦)〃嗷~<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@DockerUbuntu19:~# docker login 192.168.32.20:5000</span><br><span class="line">Username: Mice</span><br><span class="line">Password: </span><br><span class="line"><span class="keyword">Error </span>response from daemon: Get https://192.168.32.20:5000/v2/: http: server gave HTTP response to HTTPS client</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;这是因为我们每一个docker主机要设置允许<code>insecure-registries</code>，加上我们registry仓库的IP或者域名。<br>&emsp;&emsp;同样，可以修改<code>/lib/systemd/system/docker.service</code>启动脚本文件，或者<code>/etc/docker/daemon.json</code>文件，推荐修改<code>/etc/docker/daemon.json</code>文件。<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://360k4x9i.mirror.aliyuncs.com"</span>],</span><br><span class="line">  <span class="attr">"insecure-registries"</span>: [<span class="string">"192.168.32.19"</span>,<span class="string">"DockerCentOS20:5000"</span>],</span><br><span class="line">  <span class="attr">"bip"</span>: <span class="string">"10.20.0.1/24"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后重启docker服务,此时再尝试登陆，就回提示登陆成功。<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@DockerUbuntu19</span><span class="symbol">:~</span><span class="comment"># docker login DockerCentOS20:5000</span></span><br><span class="line"><span class="symbol">Username:</span> Mice</span><br><span class="line"><span class="symbol">Password:</span> </span><br><span class="line">WARNING! Your password will be stored unencrypted <span class="keyword">in</span> /root/.docker/config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line"><span class="symbol">https:</span>/<span class="regexp">/docs.docker.com/engine</span><span class="regexp">/reference/commandline</span><span class="regexp">/login/</span><span class="comment">#credentials-store</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;之后就与阿里云的镜像仓库使用方法相同了，不过速度上会快很多（毕竟内网），可以如果要上传镜像至regist仓库，先打好标签就可以了，下载写明下载仓库源，也就可以正常下载了。ヾ(=ﾟ･ﾟ=)ﾉ喵♪</p><h3 id="Harbor"><a href="#Harbor" class="headerlink" title="Harbor"></a>Harbor</h3><p>&emsp;&emsp;Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器， 由vmware开源，其通过添加一些企业必需的功能特性，例如安全、标识和管理等， 扩展了开源 Docker Distribution。作为一个企业级私有Registry服务器，Harbor 提供了更好的性能和安全。提升用户使用Registry构建和运行环境传输镜像的效率。Harbor支持安装在多个Registry节点的镜像资源复制， 镜像全部保存在私有Registry中，确保数据和知识产权在公司内部网络中管控， 另外，Harbor也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等 ，所以企业生产中，我们更多会选择Harbor。</p><h4 id="下载harbor安装包"><a href="#下载harbor安装包" class="headerlink" title="下载harbor安装包"></a>下载harbor安装包</h4><p>&emsp;&emsp;下载地址： <a href="https://github.com/vmware/harbor/releases" rel="noopener" target="_blank">https://github.com/vmware/harbor/releases</a><br>&emsp;&emsp;安装文档：<a href="https://github.com/vmware/harbor/blob/master/docs/installation_guide.md" rel="noopener" target="_blank">https://github.com/vmware/harbor/blob/master/docs/installation_guide.md</a><br>&emsp;&emsp;本次以harbor的1.75版本为例，演示harbor的安装过程。<br>&emsp;&emsp;下载离线包，并解压。<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src</span><br><span class="line">wget https://storage.googleapis.com/harbor-releases/release-<span class="number">1.7</span><span class="meta">.0</span>/harbor-offline-installer-v1<span class="meta">.7</span><span class="meta">.5</span>.tgz</span><br><span class="line">tar xvf harbor-offline-installer-v1<span class="meta">.7</span><span class="meta">.5</span>.tgz</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;也可以下载在线安装包，但里面没有镜像，之后还要去拉取镜像，不适合生产环境。</p><h4 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h4><p>&emsp;&emsp;Harbor是需要使用docker编排工具docker-compose安装，docker-compose我们之后会专门介绍。而且对docker-compose版本是有要求的，可以查看上面的官方文档链接查看确切版本。<br><img src="https://img-blog.csdnimg.cn/20191208220914881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="Harbor要求"><br>&emsp;&emsp;而如果使用包管理工具yum或者apt直接安装的docker-compose可能版本会比较低，我们这里采用python包管理工具<code>python-pip</code>来安装<code>docker-compose</code>。<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt <span class="keyword">install</span> python-pip -y</span><br><span class="line">pip <span class="keyword">install</span> docker-compose</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后可以通过命令<code>docker compose -v</code>看到docker-compose版本已经是最新稳定版1.25版本了。<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@DockerUbuntu19</span><span class="symbol">:/usr/local/src</span><span class="comment"># docker-compose -v</span></span><br><span class="line">docker-compose version <span class="number">1.25</span>.<span class="number">0</span>, build b42d419</span><br></pre></td></tr></table></figure></p><h4 id="安装Harbor"><a href="#安装Harbor" class="headerlink" title="安装Harbor"></a>安装Harbor</h4><p>&emsp;&emsp;我们习惯于将源码包放在<code>/usr/local/src</code>下，而将主程序放在<code>/usr/local/</code>目录中，所以我们可以将harbor目录的的路径改为<code>/usr/local/harbor</code>，可以通过<code>mv</code>命令，也可以通过软链接方式实现<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sv <span class="regexp">/usr/</span>local<span class="regexp">/src/</span>harbor <span class="regexp">/usr/</span>local<span class="regexp">/</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后修改配置文件<code>harbor.cfg</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/harbor</span><br><span class="line">vim harbor.cfg</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;修改其中主机名(改为IP或者域名)，管理员登录密码，及邮箱即可。<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hostname</span> = <span class="number">192.168</span>.<span class="number">32.19</span></span><br><span class="line"><span class="attr">email_identity</span> = harbor</span><br><span class="line"><span class="attr">email_server</span> = smtp.<span class="number">163</span>.com</span><br><span class="line"><span class="attr">email_server_port</span> = <span class="number">25</span></span><br><span class="line"><span class="attr">email_username</span> = XXXXXXXXX@<span class="number">163</span>.com</span><br><span class="line"><span class="attr">email_password</span> = XXXXXXXXXX</span><br><span class="line"><span class="attr">email_from</span> = admin &lt;XXXXXXXX@<span class="number">163</span>.com&gt;</span><br><span class="line"><span class="attr">harbor_admin_password</span> = XXXXXXXXXXXXX</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后更新配置文件中的环境变量到安装文件中,忘记更新环境变量会提示找不到环境变量文件<code>ERROR: Couldn&#39;t find env file: /usr/local/src/harbor/common/config/core/env</code>。<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="built_in">prepare</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;此时就可以执行命令,来创建并安装Harbor了。<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker-compose up -d</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;或者执行官方脚本（两个都可以）<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="keyword">install</span>.sh</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;这时候就可以通过浏览器访问我们刚刚搭建的harbor仓库了，至此企业私有仓库就算是搭建好了。<br><img src="https://img-blog.csdnimg.cn/2019120910105297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;管理员用户名为admin，密码为我们之前在配置文件中修改的<code>harbor_admin_password</code>。<br>&emsp;&emsp;后期如果需要修改配置文件信息，需要先停止harbor，然后修改信息后，更新配置文件信息至harbor服务，之后再试用<code>docker-compose up -d</code>启动harbor服务即可,流程如下。<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /usr/local/harbor</span><br><span class="line">docker-compose <span class="keyword">stop</span></span><br><span class="line"><span class="keyword">vim</span> harbor.cfg</span><br><span class="line">./prepare</span><br><span class="line">docker-compose <span class="keyword">up</span> -d</span><br></pre></td></tr></table></figure></p><p><img src="https://img-blog.csdnimg.cn/20191209101117514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">&emsp;&emsp;推送流程与使用其他云镜像仓库相同，先打标签,开头加上ip/仓库名，然后直接推送即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;比较常见的docker镜像仓库，有docker官方仓库&lt;a href=&quot;https://hub.docker.com/&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://hub.docker.com/&lt;/a&gt;，和阿里云镜像仓库&lt;code&gt;https://cr.console.aliyun.com/cn-hangzhou/instances/images&lt;/code&gt;，可以比较方便的拉取镜像或储存容器镜像。而在企业生产中，绝对部分情况我们都是使用企业内部的镜像仓库，来分发部署我们的代码。本文将详细介绍阿里云仓库还有私有云仓库Registry、Harbor的搭建和使用的详细步骤方法。&lt;br&gt;
    
    </summary>
    
      <category term="Cloud" scheme="https://hewanyue.com/categories/Cloud/"/>
    
    
      <category term="Docker" scheme="https://hewanyue.com/tags/Docker/"/>
    
      <category term="容器" scheme="https://hewanyue.com/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="镜像仓库" scheme="https://hewanyue.com/tags/%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Docker（四）——容器跨主机网络配置</title>
    <link href="https://hewanyue.com//blog/7e3785f.html"/>
    <id>https://hewanyue.com//blog/7e3785f.html</id>
    <published>2019-12-07T11:32:04.000Z</published>
    <updated>2019-12-09T02:47:35.879Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;跨主机互联是说 A 宿主机的容器可以访问 B 主机上的容器，但是前提是保证各宿主机之间的网络是可以相互通信的， 然后各容器才可以通过宿主机访问到对方的容器， 实现原理是在宿主机做一个网络路由就可以实现 A 宿主机的容器访问 B主机的容器的目的， 复杂的网络或者大型的网络可以使用 google 开源的 k8s 进行互联。本文之后将详细介绍docker网络配置，并演示容器跨主机通信的实现。<br><a id="more"></a></p><h2 id="docker网络基础"><a href="#docker网络基础" class="headerlink" title="docker网络基础"></a>docker网络基础</h2><p>&emsp;&emsp;之前我们说过，当我们安装完docker应用后，就会自动添加一块虚拟的docker0网卡，并基于docker0网卡，提供了3种可选网络类型供创建的容器使用，分别是bridge(桥接)，host(主机)，none(无外部网络)。其中默认是采用桥接模式，容器中的网卡桥接在docker的网桥上，且通过DHCP自动分配IP，与docker0在同一网段。<br>&emsp;&emsp;当我们每创建一个容器，宿主机上就会新建一个网卡与容器中的网卡相对应，如下图所示。<br><img src="https://img-blog.csdnimg.cn/20191207153539950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="网桥"><br>&emsp;&emsp;容器桥接模式跨网络访问的结构示意图如下图所示<br><img src="https://img-blog.csdnimg.cn/20191207155538522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="docker跨主机通信"><br>&emsp;&emsp;想实现不同宿主机上的容器跨主机肯定要经过宿主机来做网络转发，通过设置宿主机静态路由或者修改iptables规则来实现，可这时就面临一个问题：所有的容器服务默认的DHCP网段都是172.17.0.0/16网段，如果node1上的容器想直接访问node2宿主机上的容器，就会被直接当做docker0网桥的内部网段，数据报文根本都不会从node1主机的eth0网卡发出去，也根本到不了node2主机上。这种情况下，无论我们怎么修改iptables规则或者路由规则都无济于事的。所以我们想实现容器跨主机访问，首先要将不同宿主机上的容器分到不同的网段，然后才可以通过路由规则或者iptables进行跳转或转发。</p><h3 id="修改docker网络的网段"><a href="#修改docker网络的网段" class="headerlink" title="修改docker网络的网段"></a>修改docker网络的网段</h3><p>&emsp;&emsp;我们可以对每一个宿主机上的docker配置文件进行修改，实现每个宿主机的docker容器都在不同网段的目的,可以通过以下方式修改（未避免影响， 先在各服务器删除之前创建的所有容器，<code>docker rm -f `docker ps -a -q`</code>）。</p><ul><li>修改启动system脚本文件<code>docker.service</code><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">docker</span>.<span class="title">service</span></span></span><br></pre></td></tr></table></figure></li></ul><p>&emsp;&emsp;在<code>ExecStart=</code>选项结尾加上<code>--bip=10.1.0.1/24</code>，就指定了10.1.0.0/24网段，然后执行命令重新加载配置文件和重启服务。<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemctl</span> <span class="string">daemon-reload</span></span><br><span class="line"><span class="attr">systemctl</span> <span class="string">restart docker</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<strong>注意:<code>不能写10.1.0.0/24，会报错</code></strong>，虽然写网段结尾是0，如10.1.0.0/24更符合我们的习惯，不过确实会报错，报错信息如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Dec 07 16:27:58 DockerUbuntu dockerd[14794]: failed to <span class="keyword">start</span> daemon: <span class="keyword">Error</span> initializing network controller: <span class="keyword">Error</span> creating <span class="keyword">default</span> <span class="string">"bridge"</span> network: <span class="keyword">failed</span> <span class="keyword">to</span> <span class="keyword">allocate</span> gateway (<span class="number">10.10</span><span class="number">.0</span><span class="number">.0</span>): Address already <span class="keyword">in</span> <span class="keyword">use</span></span><br><span class="line"><span class="built_in">Dec</span> <span class="number">07</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">58</span> DockerUbuntu systemd[<span class="number">1</span>]: docker.service: <span class="keyword">Main</span> process exited, code=exited, <span class="keyword">status</span>=<span class="number">1</span>/<span class="keyword">FAILURE</span></span><br><span class="line"><span class="built_in">Dec</span> <span class="number">07</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">58</span> DockerUbuntu systemd[<span class="number">1</span>]: docker.service: <span class="keyword">Failed</span> <span class="keyword">with</span> <span class="keyword">result</span> <span class="string">'exit-code'</span>.</span><br><span class="line"><span class="built_in">Dec</span> <span class="number">07</span> <span class="number">16</span>:<span class="number">27</span>:<span class="number">58</span> DockerUbuntu systemd[<span class="number">1</span>]: <span class="keyword">Failed</span> <span class="keyword">to</span> <span class="keyword">start</span> Docker Application <span class="keyword">Container</span> Engine.</span><br><span class="line"><span class="comment">-- Subject: Unit docker.service has failed</span></span><br><span class="line"><span class="comment">-- Defined-By: systemd</span></span><br></pre></td></tr></table></figure></p><ul><li>也可以修改daemon.json文件，在里面添加<code>&quot;bip&quot;: &quot;10.2.0.1/24&quot;</code>，如下所示（上面那个是我的阿里云加速器链接，注册阿里账号免费获取，<a href="https://blog.csdn.net/MicePro/article/details/103411387#t0" rel="noopener" target="_blank">之前文章</a>有详细介绍，需改成自己的或者删掉）：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">        <span class="string">"registry-mirrors"</span>: [<span class="string">"https://xxxxxxxx.mirror.aliyuncs.com"</span>,<span class="string">"https://registry.docker-cn.com"</span>],</span><br><span class="line">        <span class="string">"bip"</span>: <span class="string">"10.1.0.1/24"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;&emsp;<strong>daemon.json文件是json数据格式，需要遵守json语法，换行记得要加<code>,</code>逗号。</strong><br>&emsp;&emsp;直接重启docker服务后生效<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">systemctl restart docker</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;此时看网卡的ip就已经变为了我们设置的网段，之后创建的容器服务器就会自动获取我们设置好的网段中的IP了。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root@</span>DockerUbuntu:~# ifconfig</span><br><span class="line">docker0: flags=<span class="number">4099</span>&lt;UP,BROADCAST,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        inet <span class="number">10.10</span><span class="number">.0</span><span class="number">.1</span>  netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>  broadcast <span class="number">10.10</span><span class="number">.0</span><span class="number">.255</span></span><br><span class="line">        inet6 fe80::<span class="number">42</span>:<span class="number">25f</span>f:fe2b:ecbc  prefixlen <span class="number">64</span>  scopeid <span class="number">0x20</span>&lt;link&gt;</span><br><span class="line">        ether <span class="number">02</span>:<span class="number">42</span>:<span class="number">25</span>:<span class="number">2</span>b:ec:bc  txqueuelen <span class="number">0</span>  (Ethernet)</span><br><span class="line">        RX packets <span class="number">0</span>  bytes <span class="number">0</span> (<span class="number">0.0</span> B)</span><br><span class="line">        RX errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        TX packets <span class="number">41</span>  bytes <span class="number">3526</span> (<span class="number">3.5</span> KB)</span><br><span class="line">        TX errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;同样的操作，将node2宿主机中的docker0网段设置为10.2.0.0/24</p><h3 id="修改静态路由"><a href="#修改静态路由" class="headerlink" title="修改静态路由"></a>修改静态路由</h3><p>&emsp;&emsp;我这里node1的eth0网卡ip为192.168.32.19，node2的eth0网卡ip为192.168.32.20，且两个宿主机之前网络是可以通过eth0网卡相互连接的。添加路由规则如下：<br>&emsp;&emsp;在node1上添加静态路由<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip r add <span class="number">10.2</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">24</span> via <span class="number">192.168</span><span class="number">.32</span><span class="number">.20</span> dev eth0</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;在node2上添加静态路由<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip r add <span class="number">10.1</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">24</span> via <span class="number">192.168</span><span class="number">.32</span><span class="number">.19</span> dev eth0</span><br></pre></td></tr></table></figure></p><h3 id="修改iptables规则"><a href="#修改iptables规则" class="headerlink" title="修改iptables规则"></a>修改iptables规则</h3><p>&emsp;&emsp;宿主机如果为centos7，则不需要修改iptables规则，而宿主机如果为ubuntu系统则需要添加forward规则来放行。我仔细看了下这两个系统的iptables规则，发现在centos系统docker创建的iptables规则中对<code>Chain FORWARD</code>是默认<code>ACCEPT</code>，而ubuntu系统中docker创建的iptables对<code>Chain FORWARD</code>是默认<code>DROP</code><br><img src="https://img-blog.csdnimg.cn/20191207185124292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="dockecentosiptables"><br><img src="https://img-blog.csdnimg.cn/20191207185139492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="dockerubuntuiptables"><br>&emsp;&emsp;之后两边各启动一个容器就可以实现相互通信或访问了。</p><h2 id="docker网络进阶"><a href="#docker网络进阶" class="headerlink" title="docker网络进阶"></a>docker网络进阶</h2><p>&emsp;&emsp;之前我们演示了通过docker0网卡的桥接方式实现了容器跨主机访问。我们通过修改docker0网卡的网段设置来实现，每个主机上容器的网段不同。<br>&emsp;&emsp;这种实现方式有个问题就是，但当每次我们修改了docker0网段之后，如果之后打算变更网段，之前的容器都将无法与docker0网桥桥接，导致网络不通，不能使用。<br>&emsp;&emsp;对此我们有一个更灵活的方案来实现容器的跨主机通信。那就是我们还可以通过创建一个或多个自定义网络，将新创建的每个容器指定连接到我们创建的这个网络中，这样他们的网段就是我们设置的这个网络的网段，实现每个主机上容器网段都不相同。</p><h3 id="创建自定义网络"><a href="#创建自定义网络" class="headerlink" title="创建自定义网络"></a>创建自定义网络</h3><p>&emsp;&emsp;可以将我们之前对docker0网卡的修改还原了的（当然，也可以不修改，出于控制变量方便观察考虑，建议修改回去）。<br>&emsp;&emsp;我们可以通过<code>docker network create</code>命令来创建一个自定义网络<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@DockerUbuntu:~<span class="comment"># docker network create --help</span></span><br><span class="line"></span><br><span class="line">Usage:docker network <span class="keyword">create</span> [OPTIONS] NETWORK</span><br><span class="line"></span><br><span class="line"><span class="keyword">Create</span> a network</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">      <span class="comment">--attachable           Enable manual container attachment</span></span><br><span class="line">      <span class="comment">--aux-address map      Auxiliary IPv4 or IPv6 addresses used by Network driver</span></span><br><span class="line">                             (<span class="keyword">default</span> <span class="keyword">map</span>[])</span><br><span class="line">      <span class="comment">--config-from string   The network from which copying the configuration</span></span><br><span class="line">      <span class="comment">--config-only          Create a configuration only network</span></span><br><span class="line">  -d, <span class="comment">--driver string        Driver to manage the Network (default "bridge")</span></span><br><span class="line">      <span class="comment">--gateway strings      IPv4 or IPv6 Gateway for the master subnet</span></span><br><span class="line">      <span class="comment">--ingress              Create swarm routing-mesh network</span></span><br><span class="line">      <span class="comment">--internal             Restrict external access to the network</span></span><br><span class="line">      <span class="comment">--ip-range strings     Allocate container ip from a sub-range</span></span><br><span class="line">      <span class="comment">--ipam-driver string   IP Address Management Driver (default "default")</span></span><br><span class="line">      <span class="comment">--ipam-opt map         Set IPAM driver specific options (default map[])</span></span><br><span class="line">      <span class="comment">--ipv6                 Enable IPv6 networking</span></span><br><span class="line">      <span class="comment">--label list           Set metadata on a network</span></span><br><span class="line">  -o, <span class="comment">--opt map              Set driver specific options (default map[])</span></span><br><span class="line">      <span class="comment">--scope string         Control the network's scope</span></span><br><span class="line">      <span class="comment">--subnet strings       Subnet in CIDR format that represents a network segment</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;例如我们在node1创建一个名为web1的桥接网络，网段为10.10.0.0/24,设置网关为10.10.0.1（可设置为此网段内任意ip）。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@DockerUbuntu:~# docker<span class="built_in"> network </span>create -d<span class="built_in"> bridge </span>--subnet 10.10.0.0/24 --gateway 10.10.0.1 web1</span><br><span class="line">a817cf36502eea3469e1cb4b9b7577044f8dce96f015ba57a47f6809c00d72c7</span><br><span class="line">root@DockerUbuntu:~# docker<span class="built_in"> network </span>ls</span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">afd91b2e1731       <span class="built_in"> bridge </span>            <span class="built_in"> bridge </span>             local</span><br><span class="line">241d3e94a6b3        host                host                local</span><br><span class="line">7cc9cf9eb69e        none                <span class="literal">null</span>                local</span><br><span class="line">a817cf36502e        web1               <span class="built_in"> bridge </span>             local</span><br><span class="line">root@DockerUbuntu:~#</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;可以用<code>docker network ls</code>(或<code>docker network list</code>)看到网络类型多了一种，也就是我们刚刚创建的web1类型。<br>而用<code>ifconfig</code>或者<code>ip a</code>命令也可以看到我们的网卡设备里多了一个<code>br-a817cf36502e</code>，ip也恰好是我们指定的<code>10.10.0.0/24</code>网段。<br><img src="https://img-blog.csdnimg.cn/20191207192708651.png" alt="自定义网络"><br>&emsp;&emsp;此时我们就可以通过<code>--net</code>选项指定我们刚刚创建的web1网络，来创建并启动容器了。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root@</span>DockerUbuntu:~# docker run -it -d -p <span class="number">8080</span>:<span class="number">8080</span> -p <span class="number">8009</span>:<span class="number">8009</span> --net=web1 tomcat-app1:v1</span><br><span class="line">afc1e3db8a6a670d30cdd0756af65da74895976ce5ebbf876329b04b452a3710</span><br><span class="line"><span class="symbol">root@</span>DockerUbuntu:~#</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;同样，在宿主机node2上也创建一个自定义网络web2，然后新创建的容器，也指定网络为web2，再设置静态路由和修改iptables规则放行，也可以实现容器间跨主机访问。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;跨主机互联是说 A 宿主机的容器可以访问 B 主机上的容器，但是前提是保证各宿主机之间的网络是可以相互通信的， 然后各容器才可以通过宿主机访问到对方的容器， 实现原理是在宿主机做一个网络路由就可以实现 A 宿主机的容器访问 B主机的容器的目的， 复杂的网络或者大型的网络可以使用 google 开源的 k8s 进行互联。本文之后将详细介绍docker网络配置，并演示容器跨主机通信的实现。&lt;br&gt;
    
    </summary>
    
      <category term="Cloud" scheme="https://hewanyue.com/categories/Cloud/"/>
    
    
      <category term="Docker" scheme="https://hewanyue.com/tags/Docker/"/>
    
      <category term="容器" scheme="https://hewanyue.com/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="跨主机通信" scheme="https://hewanyue.com/tags/%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E4%BF%A1/"/>
    
      <category term="容器网络" scheme="https://hewanyue.com/tags/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Docker（三）——镜像制作</title>
    <link href="https://hewanyue.com//blog/ddd838e7.html"/>
    <id>https://hewanyue.com//blog/ddd838e7.html</id>
    <published>2019-12-06T07:02:09.000Z</published>
    <updated>2019-12-09T02:47:35.882Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;在docker使用过程中，其实大部分时间都是花在了打镜像上，因为容器本身底层不可写，顶层可读写缺无法持久化性质，我们如果对容器进行了修改，想要进行横向扩容，快速部署时，一般需要重新制作镜像，在分发到其他主机或终端。（虽然也可以将数据储存在NFS和宿主机本地，而不是容器内部来方便的修改配置文件及保存数据等。）<br>&emsp;&emsp;docker中镜像的制作方式一般手工修改后导出和通过Dockerfile生成两种方式。<br><a id="more"></a></p><h2 id="手动制作镜像"><a href="#手动制作镜像" class="headerlink" title="手动制作镜像"></a>手动制作镜像</h2><p>&emsp;&emsp;因为镜像本身的不可修改性，有时候官方镜像中使用的工具的版本可能不是那么符合我们的生产环境，我们就需要自己制作镜像了。一般来说，我们都是基于官方镜像，作出修改来符合自身实际场景中使用，然后在导出保存为我们自己的镜像。<br>&emsp;&emsp;以一个tomcat容器为例，我们如果需要tomcat8的容器，可以直接从官网拉取tomcat8的镜像<code>docker pull tomcat:8.5.49-jdk8-openjdk</code>修改完成后，还可以使用命令<code>docker commit</code>将已有容器制作为镜像.<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@DockerUbuntu</span><span class="symbol">:/opt/dockerfile/web/tomcat/tomcat-apps/app1</span><span class="comment"># docker commit --help</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">Usage:</span>docker commit [OPTIONS] CONTAINER [REPOSITORY[<span class="symbol">:TAG</span>]]</span><br><span class="line"></span><br><span class="line">Create a new image from a container<span class="string">'s changes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Options:</span></span><br><span class="line"><span class="string">  -a, --author string    Author (e.g., "John Hannibal Smith &lt;hannibal@a-team.com&gt;")</span></span><br><span class="line"><span class="string">  -c, --change list      Apply Dockerfile instruction to the created image</span></span><br><span class="line"><span class="string">  -m, --message string   Commit message</span></span><br><span class="line"><span class="string">  -p, --pause            Pause container during commit (default true)</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<code>-a</code>添加镜像制作人信息，<code>-m</code>添加备注信息，<code>-p</code>选项是默认选项，在制作为镜像时暂停容器，<code>-c</code>使用Dockerfile指令来创建镜像，Dockerfile之后我们会详细讲解。例如<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -<span class="selector-tag">a</span> <span class="string">"example@163.com"</span> -m <span class="string">"tomcat app1 v1"</span> --change=<span class="string">"EXPOSE 8080 8009"</span> f5f8c13d0f9f centos-tomcat-app1:v1</span><br></pre></td></tr></table></figure></p><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><p>&emsp;&emsp;不过如果业务场景要求的配置场景要修改nginx的编译参数或者要求底层是centos7系统这就没法更改了（官方镜像一般都是debian系统），我们只能修改最上层的镜像。此时我们可以通过分层构建的方式来制作镜像(，毕竟docker镜像本来就是分层构建的)。<br>&emsp;&emsp;DockerfileDockerFile 可以说是一种可以被 Docker 程序解释的脚本， DockerFile 是由一条条的命令组成的，每条命令对应 linux 下面的一条命令， Docker 程序将这些 DockerFile 指令再翻译成真正的 linux 命令，其有自己的书写方式和支持的命令， Docker 程序读取 DockerFile 并根据指令生成 Docker 镜像，相比手动制作镜像的方式， DockerFile 更能直观的展示镜像是怎么产生的，有了写好的各种各样 DockerFile 文件，当后期某个镜像有额外的需求时，只要在之前的DockerFile 添加或者修改相应的操作即可重新生成新的 Docke 镜像，避免了重复手动制作镜像的麻烦。<br>&emsp;&emsp;Docker中常用到的命令令有<code>FROM</code>（指定基础镜像名称）,<code>MAINTAINER</code>（镜像作者署名及联系方式）,<code>USER</code>（切换用户身份，初始一般为root）,<code>WORKDIR</code>（指定或切换工作目录），<code>ADD</code>（将当前宿主机目录的文件拷贝至容器指定位置，tar包可以自动解压）,<code>RUN</code>(运行命令，其实就是shell命令，可执行多条，用&amp;&amp;符号连接),<code>ENV</code>（设置环境变量）,<code>CMD</code>（设置默认镜像启动命令，要可以占据前台，否则基于此镜像启动的容器会直接停止），之后我们结合实际例子一一说明。</p><p>&emsp;&emsp;例如我们使用Dockerfile来分层构建定制的tomcat镜像来运行app1服务（当然，也可以一步到位），步骤如下：</p><ol><li><p>构建目录架构<br>我们通常将Dockerfile文件都放置在<code>/opt/</code>目录下</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /opt/dockerfile/&#123;web/&#123;nginx,tomcat,jdk&#125;,<span class="built_in">system</span>/&#123;centos,ubuntu,redhat&#125;&#125; -<span class="built_in">pv</span></span><br></pre></td></tr></table></figure></li><li><p>构建系统镜像</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /<span class="keyword">opt</span>/dockerfile/<span class="built_in">system</span>/centos</span><br><span class="line"><span class="built_in">mkdir</span> <span class="number">7.6</span></span><br><span class="line"><span class="keyword">cd</span> <span class="number">7.6</span></span><br><span class="line">docker pull cento<span class="variable">s:7</span>.<span class="number">6.1810</span></span><br></pre></td></tr></table></figure></li></ol><p>&emsp;&emsp;创建Dockerfile文件,注意D要大写<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim Dockerfile</span><br><span class="line"><span class="comment">#CentOS 7.6 镜像</span></span><br><span class="line"><span class="keyword">FROM</span> centos:<span class="number">7.6</span>.<span class="number">1810</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> Mice example@<span class="number">163</span>.com</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> rpm -ivh http://mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum install -y vim wget tree lrzsz gcc gcc-c++ automake pcre pcre-devel zlib zlib-devel openssl openssl-devel iproute net-tools iotop</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"bash"</span>]</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;创建制作镜像脚本，来生成镜像。当然，也可以直接使用<code>docker build</code>命令配合<code>-t</code>参数（指定标签名）直接将当前目录的Dockerfile制作为镜像，使用脚本是为了日后修改不至于每次名称都不一样，可以保证每次打的镜像的名称和版本号统一，否则以后镜像多了会乱（脚本中也可以在标签中加上时间）。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim build_centos.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">docker build -t centos-base:v7.6.1810 .</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;当前目录结构为<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@DockerUbuntu</span><span class="symbol">:/opt/dockerfile/system/centos/</span><span class="number">7.6</span><span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── build_centos.sh</span><br><span class="line">└── Dockerfile</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> directories, <span class="number">2</span> files</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;执行命令<code>bash build_centos.sh</code>来创建第一层镜像<code>centos-base:v7.6.1810</code><br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root@</span>DockerUbuntu:/opt/dockerfile/system/centos/<span class="number">7.6</span># bash build_centos.sh </span><br><span class="line">Sending build context to Docker daemon  <span class="number">3.072</span>kB</span><br><span class="line">Step <span class="number">1</span>/<span class="number">5</span> : FROM centos:<span class="number">7.6</span><span class="number">.1810</span></span><br><span class="line"> ---&gt; f1cb7c7d58b7</span><br><span class="line">Step <span class="number">2</span>/<span class="number">5</span> : MAINTAINER Mice <span class="symbol">example@</span><span class="number">163.</span>com</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; <span class="number">3899</span>d2446806</span><br><span class="line">Step <span class="number">3</span>/<span class="number">5</span> : RUN rpm -ivh http:<span class="comment">//mirrors.aliyun.com/epel/epel-release-latest-7.noarch.rpm</span></span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; <span class="number">5</span>a72857ed63d</span><br><span class="line">Step <span class="number">4</span>/<span class="number">5</span> : RUN yum install -y vim wget tree lrzsz gcc gcc-c++ <span class="built_in">auto</span>make pcre pcre-devel zlib zlib-devel openssl openssl-devel iproute net-tools iotop</span><br><span class="line"> ---&gt; Using cache</span><br><span class="line"> ---&gt; <span class="number">705f</span>ed38cb94</span><br><span class="line">Step <span class="number">5</span>/<span class="number">5</span> : CMD [<span class="string">"bash"</span>]</span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> aea451be0461</span><br><span class="line">Removing <span class="built_in">int</span>ermediate container aea451be0461</span><br><span class="line"> ---&gt; <span class="number">160</span>b9544f121</span><br><span class="line">Successfully built <span class="number">160</span>b9544f121</span><br><span class="line">Successfully tagged centos-base:v7<span class="number">.6</span><span class="number">.1810</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;有时到yum那步会提示报错，无法解析IP。多执行几次脚本，多试几次就可以了。他会有缓存自动保存镜像，已经写好的层数会自动缓存的，如上面的<code>---&gt; Using cache</code>。</p><ol start="3"><li>构建适合版本的jdk镜像<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /<span class="keyword">opt</span>/dockerfile/web/jdk/</span><br><span class="line"><span class="built_in">mkdir</span> <span class="number">8</span>u212</span><br><span class="line"><span class="keyword">cd</span> <span class="number">8</span>u212</span><br></pre></td></tr></table></figure></li></ol><p>&emsp;&emsp;将准备好的jdk压缩包<code>jdk-8u212-linux-x64.tar.gz</code>放入此目录，然后还是编写<code>Dockerfile</code>以及<code>build_jdk.sh</code>脚本<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vim Dockerfile</span><br><span class="line"><span class="comment">#JDK 8u212</span></span><br><span class="line"><span class="keyword">FROM</span> centos-base:v7.6.1810</span><br><span class="line">MAINTAINER Mice example@163.com</span><br><span class="line"><span class="builtin-name">ADD</span> jdk-8u212-linux-x64.tar.gz /usr/local/src/</span><br><span class="line"><span class="builtin-name">ADD</span> env.sh /etc/profile.d/</span><br><span class="line"><span class="builtin-name">RUN</span> ln -sv /usr/local/src/jdk1.8.0_212 /usr/local/jdk &amp;&amp; groupadd www -g 2019 &amp;&amp; useradd www -u 2019 -g www</span><br><span class="line"></span><br><span class="line">ENV JAVA_HOME /usr/java/default</span><br><span class="line">ENV PATH <span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">ENV JRE_HOME <span class="variable">$JAVA_HOME</span>/jre</span><br><span class="line">ENV CLASSPATH <span class="variable">$JAVA_HOME</span>/lib/:<span class="variable">$JRE_HOME</span>/lib/</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">RUN</span> rm -rf /etc/localtime &amp;&amp; ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo <span class="string">"Asia/Shanghai"</span> &gt; /etc/timezone</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim build_jdk.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">docker build -t jdk-base:v1.8.0_212 .</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;需要注意的是，因为ENV环境变量是当前用户（当前终端）有效，也就是说对于容器本身来说，他运行的环境变量是已经通过ENV可以设置好，可是如果发生故障，我们需要连接进入容器时，这个ENV就对我们当前终端无效了，我们可能就无法使用那些ENV设置了的PATH变量了，所以我们需要添加一个<code>环境变量配置文件</code>至<code>/etc/profile.d目录</code>（也可直接替换profile文件），以便这些环境变量在我们连接至容器后也可以生效。<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim env.sh</span><br><span class="line">JAVA_HOME=<span class="regexp">/usr/local</span><span class="regexp">/jdk</span></span><br><span class="line"><span class="regexp">JRE_HOME=$JAVA_HOME/jre</span></span><br><span class="line">CLASSPATH=$JAVA_HOME/<span class="class"><span class="keyword">lib</span>/:$<span class="title">JRE_HOME</span>/<span class="title">lib</span>/</span></span><br><span class="line">PATH=$<span class="symbol">PATH:</span>$JAVA_HOME/bin</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;目录结构如下所示<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@DockerUbuntu</span><span class="symbol">:/opt/dockerfile/web/jdk/</span><span class="number">8</span>u212<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── build_jdk.sh</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── env.sh</span><br><span class="line">└── jdk-<span class="number">8</span>u212-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="number">0</span> directories, <span class="number">4</span> files</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;还是通过build脚本，构建jdk容器。</p><ol start="4"><li>构建适合版本的tomcat镜像<br>先创建版本目录(，为日后可能需要不同版本的tomcat弄好框架)。<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /<span class="keyword">opt</span>/dockerfile/web/tomcat/</span><br><span class="line"><span class="built_in">mkdir</span> <span class="number">8.5</span>.<span class="number">47</span></span><br><span class="line"><span class="keyword">cd</span> <span class="number">8</span></span><br></pre></td></tr></table></figure></li></ol><p>&emsp;&emsp;将准备好的tomcat源码包拷到这个目录，或者wget下载<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/apache/</span>tomcat<span class="regexp">/tomcat-8/</span>v8.<span class="number">5.47</span><span class="regexp">/bin/</span>apache-tomcat-<span class="number">8.5</span>.<span class="number">47</span>.tar.gz</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;制作Dockerfile<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim Dockerfile</span><br><span class="line"><span class="comment">#tomcat 8-jdk 1.8.0_212-centos 7.6</span></span><br><span class="line"><span class="keyword">FROM</span> jdk-base:v1.<span class="number">8.0</span>_212</span><br><span class="line"><span class="keyword">MAINTAINER</span> Mice example@<span class="number">163</span>.com</span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> TZ <span class="string">"Asia/Shanghai"</span></span><br><span class="line"><span class="keyword">ENV</span> LANG en_US.UTF-<span class="number">8</span></span><br><span class="line"><span class="keyword">ENV</span> TERM xterm</span><br><span class="line"><span class="keyword">ENV</span> TOMCAT_MAJOR_VERSION <span class="number">8</span></span><br><span class="line"><span class="keyword">ENV</span> TOMCAT_MINOR_VERSION <span class="number">8.5</span>.<span class="number">47</span></span><br><span class="line"><span class="keyword">ENV</span> CATALINA_HOME /apps/tomcat</span><br><span class="line"><span class="keyword">ENV</span> APP_DIR $&#123;CATALINA_HOME&#125;/webapps</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir /apps</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> apache-tomcat-8.5.47.tar.gz /apps/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> ln -sv /apps/apache-tomcat-8.5.47 /apps/tomcat</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;老规矩，创建build脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim build_tomcat.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">docker build -t tomcat-base:v8.5.47 .</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后执行脚本打镜像~</p><ol start="5"><li>放置项目app1至指定目录构建镜像<br>&emsp;&emsp;到现在，tomcat容器的环境都配置好了，不过里面还没有跑服务，所以可以针对不同的业务，创建不同的镜像，而他们底层都是共用的一个基础镜像<code>tomcat-base:v8.5.47</code>，所有底层镜像因为都是只读的，所以可以复用而互不干扰，也不会重复占用多余的空间。<br>还是先创建业务APP目录。<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -pv <span class="meta-keyword">/opt/</span>dockerfile<span class="meta-keyword">/web/</span>tomcat<span class="meta-keyword">/myapps/</span>app1/</span><br><span class="line">cd <span class="meta-keyword">/opt/</span>dockerfile<span class="meta-keyword">/web/</span>tomcat<span class="meta-keyword">/myapps/</span>app1/</span><br></pre></td></tr></table></figure></li></ol><p>&emsp;&emsp;因为当app1有变化时，tomcat服务可能会需要重启才会生效变化，而如果tomcat服务是容器的启动进程(即PID=1的进程)时，重启tomcat会导致容器终止，容器里面在运行的数据及session都会丢失。所以我们使用<code>tail -f</code>命令来作为这个容器的守护进程来启动容器。我们可以通过构建一个脚本<code>run_tomcat.sh</code>来实现，启动tomcat并让tail -f 最为前台进程。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim run_tomcat.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">su - www -c <span class="string">"/apps/tomcat/bin/catalina.sh start"</span></span><br><span class="line">su - www -c <span class="string">"tail -f /etc/hosts"</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;且为了安全考虑，我们打算让tomcat服务以www用户身份启动，所以在构建容器时，需要注意权限问题，Dockerfile如下：<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim Dockerfile</span><br><span class="line"><span class="comment"># tomcat-apps</span></span><br><span class="line"><span class="keyword">FROM</span> tomcat-base:v8.<span class="number">5.47</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> run_tomcat.sh /apps/tomcat/bin/run_tomcat.sh</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> app1/* /apps/tomcat/webapps/myapp/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chown www.www /apps/ -R</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span> <span class="number">8009</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"/apps/tomcat/bin/run_tomcat.sh"</span>]</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;而且我们把<code>run_tomcat.sh</code>传进去后，要以脚本启动的话，要对脚本加执行权限，这样传进去的时候也是有执行权限的。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">chmod</span> +<span class="selector-tag">x</span> <span class="selector-tag">run_tomcat</span><span class="selector-class">.sh</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后构建build脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim build_app1.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">docker build -t tomcat-app1:v1 .</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后将APP1的程序代码拷贝至当前目录，结构示意图如下：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@DockerUbuntu</span><span class="symbol">:/opt/dockerfile/web/tomcat/myapps/app1</span><span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── build_app1.sh</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── app1</span><br><span class="line">│   └── index.html</span><br><span class="line">└── run_tomcat.sh</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> directory, <span class="number">4</span> files</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;就可以执行build脚本打镜像啦。<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bash </span><span class="keyword">build_app1.sh</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;需要注意的是，启动镜像时记得加<code>端口映射</code>，命令如下<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d -p <span class="number">8080</span>:<span class="number">8080</span> -p <span class="number">8009</span>:<span class="number">8009</span> tomcat-app1:v1</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;此时通过<code>ss -tanl</code>命令就可以看到8080、80009端口已经被docker proxy监听了。说明服务启动成功。<br>如果宿主机为centos，或者redhat（ubuntu默认是开启的），可能会需要先打开内核参数ip_forward选项，否则会报错网络不可用:<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">WARNING: </span>IPv4 forwarding is disabled. Networking will not work.</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;那就开启IP转发。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.ip_forward</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后<code>sysctl -p</code>生效就可以正常使用容器网络了。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>&emsp;&emsp;需要注意的是，<code>RUN</code>命令是类似启动一个新的进程或者是shell，来执行每一次命令，执行完毕后此次<code>RUN</code>进程结束，下一次是一个全新的<code>RUN</code>进程了，相互之间不会联系。这么说可能大家无法理解，举个最简单的例子吧，就是当我们想要编译安装haproxy的时候，需要进入编译目录然后执行<code>make</code>命令，编译完后还要在编译目录执行<code>make install</code>命令。所以可以写成<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> /usr/localk/haproxy-2.0.5 &amp;&amp; make --xxx参数选项省略xxxx  &amp;&amp; make install</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;但是如果我们像写脚本那样，写成<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> /usr/localk/haproxy-2.0.5</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> make --xxx参数选项省略xxxx</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> make install</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;或者<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> /usr/localk/haproxy-2.0.5 &amp;&amp; make --xxx参数选项省略xxxx</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> make install</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;就会报错找不到路径，因为没一条命令都是一层独立的镜像，每层镜像开始都会在默认的初始目录，所以如果打算将<code>make</code>和<code>make install</code>分开写，则两次都加<code>cd /usr/local/haproxy-2.0.5</code>,或者直接切换工作目录，如下所示。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">WORKDIR /usr/local/src/haproxy-2.0.5</span><br><span class="line"><span class="builtin-name">RUN</span> make <span class="attribute">ARCH</span>=x86_64 \</span><br><span class="line"><span class="attribute">TARGET</span>=linux-glibc <span class="attribute">USE_PCRE</span>=1 \</span><br><span class="line"><span class="attribute">USE_OPENSSL</span>=1 \</span><br><span class="line"><span class="attribute">USE_ZLIB</span>=1 \</span><br><span class="line"><span class="attribute">USE_CPU_AFFINITY</span>=1 \</span><br><span class="line"><span class="attribute">USE_LUA</span>=1 \</span><br><span class="line"><span class="attribute">LUA_INC</span>=../lua-5.3.5/src/ \</span><br><span class="line"><span class="attribute">LUA_LIB</span>=../lua-5.3.5/src/ \</span><br><span class="line"><span class="attribute">PREFIX</span>=/apps/haproxy</span><br><span class="line"><span class="builtin-name">RUN</span> make install <span class="attribute">PREFIX</span>=/apps/haproxy</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<code>WORKDIR</code>和<code>USER</code>很类似，都是修改后，对后续Dockerfile指令有效。且<code>WORKDIR</code>还支持相对路径，例如<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /a</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> b</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> c</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;则最终的工作目录为<code>/a/b/c</code>。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;在docker使用过程中，其实大部分时间都是花在了打镜像上，因为容器本身底层不可写，顶层可读写缺无法持久化性质，我们如果对容器进行了修改，想要进行横向扩容，快速部署时，一般需要重新制作镜像，在分发到其他主机或终端。（虽然也可以将数据储存在NFS和宿主机本地，而不是容器内部来方便的修改配置文件及保存数据等。）&lt;br&gt;&amp;emsp;&amp;emsp;docker中镜像的制作方式一般手工修改后导出和通过Dockerfile生成两种方式。&lt;br&gt;
    
    </summary>
    
      <category term="Cloud" scheme="https://hewanyue.com/categories/Cloud/"/>
    
    
      <category term="Docker" scheme="https://hewanyue.com/tags/Docker/"/>
    
      <category term="容器" scheme="https://hewanyue.com/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="Dockerfile" scheme="https://hewanyue.com/tags/Dockerfile/"/>
    
  </entry>
  
  <entry>
    <title>Docker（二）——基础命令详解</title>
    <link href="https://hewanyue.com//blog/5c39f4ef.html"/>
    <id>https://hewanyue.com//blog/5c39f4ef.html</id>
    <published>2019-12-06T07:02:09.000Z</published>
    <updated>2019-12-09T02:47:35.870Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;安装完Docker的服务，我们就可以开始使用Docker了。<br><a id="more"></a></p><h2 id="Docker镜像"><a href="#Docker镜像" class="headerlink" title="Docker镜像"></a>Docker镜像</h2><p>&emsp;&emsp;之前我们提到，docker是一个运行容器的工具，可以单独隔离每个服务的运行环境，达到互不干扰和节约资源的目的。而docker运行的容器，是基于一层一层的镜像联合挂载构建而成。所以我们需要先有镜像。<br>&emsp;&emsp;所谓镜像，其实可以理解为，一个个的最简化的安装包，里面只集成了一些必备的程序和文件，且每一层和每一层镜像是可以相互一样的，大大的节约了空间，提高了资源利用率。举个最简单的例子，我们从官方下载一个centos系统的镜像包centos:apline，大小才5.55兆，而centos差不多至少200兆了，而centos安装的ISO镜像文件也都差不多1G左右。这是因为容器使用的镜像系统，需要依赖宿主机内核来运行，容器本身是没有内核的，只包含一些基础功能命令而已。可用<code>docker images</code>查看本地镜像，从大小来看，就知道容器确实很精简。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">root@</span>DockerUbuntu:~# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">alpine              latest              <span class="number">965</span>ea09ff2eb        <span class="number">6</span> weeks ago         <span class="number">5.55</span>MB</span><br><span class="line">centos              latest              <span class="number">0f</span>3e07c0138f        <span class="number">2</span> months ago        <span class="number">220</span>MB</span><br><span class="line">centos              <span class="number">7.6</span><span class="number">.1810</span>            f1cb7c7d58b7        <span class="number">8</span> months ago        <span class="number">202</span>MB</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;我们可以在docker官方镜像仓库<a href="https://hub.docker.com" rel="noopener" target="_blank">https://hub.docker.com</a>查看官方镜像,也可以通过命令直接搜索centos的可用容器<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker search centos</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;注意：官方仓库也有很多是个人的镜像，为避免未知风险，一定要采用官方镜像，千万别使用安全性未知或来源不明的的镜像。一般排在第一个是官方镜像。<br>&emsp;&emsp;使用命令<code>docker pull centos</code>就可以自动从docker官方镜像仓库docker.io，下载centos镜像了，因为我们没有指定版本标签，所以这条命令会默认下载<code>centos:latest</code>版本，也就是最新版。生产中我们出于稳定性和便于管理，都会推荐使用指定的稳定版本，而不会采用latest版本（，随着版本发型，之前的latest版本和几个月之后的latest版很有可能就不是一个版本，不利于规范化统一）。我们本次以CentOS7.6中的最新版<code>centos:7.6.1810</code>最为本次演示的版本。下载镜像命令如下：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos:<span class="number">7.6</span><span class="number">.1810</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;使用<code>docker image rm [ OPTION ] 容器ID</code>可以删除不要的镜像，如果已有容器基于此镜像启动，则会提示错误，无法删除，需先停止容器，或直接加<code>-f选项</code>强制删除镜像，此时容器也会被停止。注意，当容器被停止时，上面的数据也都会丢失，所以需要谨慎关闭容器和删除镜像。<br>&emsp;&emsp;此外，docker官方镜像站，因为在国外(美国，不过应该是有CDN或者国内镜像加速站点的，不过还是有点点慢)，肯定不如阿里的容器镜像仓库速度快。所以我们可以配置阿里的镜像加速器，需要注册阿里账号。<br>&emsp;&emsp;进入阿里网站<a href="http://cr.console.aliyun.com" rel="noopener" target="_blank">http://cr.console.aliyun.com</a>，登陆之后，可以看到阿里的镜像仓库(之后再细说)还有镜像加速器，点击镜像加速器，可看到如图所示界面：<br><img src="https://img-blog.csdnimg.cn/20191205220137716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="Docker镜像加速">&emsp;&emsp;执行将下面代码，便可实现镜像加速了。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -<span class="selector-tag">p</span> /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon<span class="selector-class">.json</span> &lt;&lt;-<span class="string">'EOF'</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://xxxxxxxx.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;之后使用<code>docker info</code>命令就可以看到已经添加镜像仓库成功<br><img src="https://img-blog.csdnimg.cn/20191205220652786.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="docker info"></p><h2 id="Docker容器"><a href="#Docker容器" class="headerlink" title="Docker容器"></a>Docker容器</h2><p>&emsp;&emsp;有了镜像之后我们就可以从中运行容器了。基础的命令有<code>docker pull</code>、<code>docker push</code>、<code>docker create</code>、<code>docker run</code>、<code>docker ps</code>、<code>docker rm</code>、<code>docker start</code>、<code>docker stop</code>、<code>docker images</code>、<code>docker exec</code>、<code>docker inspect</code>等等</p><h3 id="pull-push"><a href="#pull-push" class="headerlink" title="pull push"></a>pull push</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@DockerUbuntu:~<span class="comment"># docker pull --help</span></span><br><span class="line"></span><br><span class="line">Usage:docker pull [OPTIONS] NAME[:TAG|@DIGEST]</span><br><span class="line"></span><br><span class="line">Pull <span class="keyword">an</span> image <span class="keyword">or</span> <span class="keyword">a</span> repository <span class="built_in">from</span> <span class="keyword">a</span> registry</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -<span class="keyword">a</span>, <span class="comment">--all-tags                Download all tagged images in the repository</span></span><br><span class="line">      <span class="comment">--disable-content-trust   Skip image verification (default true)</span></span><br><span class="line">  -q, <span class="comment">--quiet                   Suppress verbose output</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;<code>docker pull</code>命令我们之前也使用过，可以用来拉镜像，相当于命令<code>docker image pull</code>。根据官方帮助信息，我们可以知道，<code>docker pull</code> 如果要拉去指定版本，需要加<code>:tag</code>版本标签，加<code>-a</code>选项可以拉取所有镜像，不过生产中一般都是用的时候公司内部的本地镜像仓库Harbor，所以拉取镜像时,格式要跟公司Harbor服务器的IP或者域名，指定拉取镜像的源仓库，如果不加，则默认从docker官网拉取。镜像名称格式为：<code>Harbor IP/项目名/image 名字:版本号</code><br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="number">172.18</span><span class="number">.32</span><span class="number">.101</span>/centos/centos-base:v1</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<code>docker push</code>是用来推送本地镜像至仓库的,相当于命令<code>docker image push</code>，用法格式与pull相似。<br>使用pull推送至公司Harbor时，需要先在docker启动文件<code>/lib/systemd/system/docker.service</code>的<code>ExecStart选项</code>结尾加入参数<code>--insecure-registry</code>，表示加入不安全的镜像仓库，可加多个，示例如下。<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExecStart=<span class="string">/usr/bin/dockerd</span> -H fd:<span class="string">//</span> <span class="params">--containerd=/run/containerd/containerd</span>.sock <span class="params">--insecure-registry</span> 192.168.32.19 <span class="params">--insecure-registry</span> 192.168.32.20</span><br></pre></td></tr></table></figure></p><h3 id="tag"><a href="#tag" class="headerlink" title="tag"></a>tag</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@DockerUbuntu:~<span class="comment"># docker tag --help</span></span><br><span class="line"></span><br><span class="line">Usage:docker <span class="keyword">tag</span> <span class="title">SOURCE_IMAGE</span>[:<span class="keyword">TAG</span>] TARGET_IMAGE[:<span class="keyword">TAG</span>]</span><br><span class="line"></span><br><span class="line">Create a <span class="keyword">tag</span> <span class="title">TARGET_IMAGE</span> that refers to SOURCE_IMAGE</span><br><span class="line">root@DockerUbuntu:~<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;<code>docker tag</code>命令可以用来打标记，格式如上。一般为了区分不同版本，我们会在每次制作完镜像后打上不同的标记，而且要分发到不同的镜像仓库时也要重新打一个对应<code>仓库IP/项目名</code>的镜像，才可以<code>push</code>或<code>pull</code>。</p><h3 id="run"><a href="#run" class="headerlink" title="run"></a>run</h3><p>&emsp;&emsp;<code>docker run</code>可以算是最常用的docker基础命令了，意思是创建并运行容器，相当于<code>docker create</code>和<code>docker start</code>的组合。用法格式如下。<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run <span class="string">[ OPTION ]</span> 镜像ID <span class="string">[ CMD ]</span></span><br></pre></td></tr></table></figure></p><h4 id="OPTION"><a href="#OPTION" class="headerlink" title="OPTION"></a>OPTION</h4><p>&emsp;&emsp;常用选项有<code>-i</code>、<code>-t</code>、<code>-d</code>、<code>-p</code>、<code>-v</code>、<code>-e</code>、<code>--name</code>、<code>--net</code>。</p><ul><li><code>-i</code>，–interactive， Keep STDIN open even if not attached<br>&emsp;&emsp;以交互式方式运行。不过只加-t是没法实现交互式的，通常需要<code>-t</code>参数配合，来给容器加一个<code>伪终端</code>实现交互式。</li><li><code>-t</code>，–tty， Allocate a pseudo-TTY<br>&emsp;&emsp;给容器分配一个伪终端，与<code>-i</code>配合使用，通常写作<code>-it</code>。</li><li><code>-d</code>，–detach，  Run container in background and print container ID<br>&emsp;&emsp;使容器启动时后台运行，如果不加这个选项，则会占据宿主机当前终端，服务类容器等交互式容器一般都会加上这个选项。</li><li><code>-p</code>，–publish， list Publish a container’s port(s) to the host<br>&emsp;&emsp;映射本地端口到容器的指定端口，同时映射多个端口，则写多个<code>-p 宿主机端口:容器端口</code>选项。</li><li><code>-v</code>，–volume， list Bind mount a volume<br>&emsp;&emsp;使用-v 参数， 将宿主机目录映射到容器内部， 默认是可读写的。<code>-v SOUCE:DEST:ro</code>后面加<code>ro</code>则可实现只读。</li><li><code>-e</code>，–env， list Set environment variables<br>&emsp;&emsp;可用<code>-e</code>选项为容器添加启动时的环境变量。虽然大多环境变量都是在制作容器时就写进容器里，不过此选项应用在环境变量经常变化的场景，方面修改。</li><li><code>--name</code>，Assign a name to the container<br>&emsp;&emsp;给创建的容器命名。同一个宿主机上的容器之间可以通过自定义的容器名称相互访问，由于容器在启动的时候其内部 IP 地址是 DHCP 随机分配的，所以如果通过内部访问的话，自定义名称是相对比较固定的，因此设置容器别名比较适用于此场景。</li><li>–link，Add link to another container<br>&emsp;&emsp;为容器设置一个别名，相当于一个路径名。自定义的容器名称可能后期会发生变化， 那么一旦名称发生变化，程序之间也要随之发生变化，比如程序通过容器名称进行服务调用， 但是容器名称发生变化之后再使用之前的名称肯定是无法成功调用， 每次都进行更改的话又比较麻烦， 因此可以使用自定义别名的方式解决，即容器名称可以随意更，只要不更改别名即可。</li><li><code>--net</code><br>&emsp;&emsp;为容器指定网络。容器网络类型，常见的为bridge、host、null，也可以自己创建自定义网络。可用<code>docker network list</code>查看当前已有的网络。<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@DockerUbuntu:~# docker<span class="built_in"> network </span>list</span><br><span class="line">NETWORK ID          NAME                DRIVER              SCOPE</span><br><span class="line">1eb441f702d2       <span class="built_in"> bridge </span>            <span class="built_in"> bridge </span>             local</span><br><span class="line">241d3e94a6b3        host                host                local</span><br><span class="line">7cc9cf9eb69e        none                <span class="literal">null</span>                local</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;&emsp;docker服务安装完成后，默认在每个宿主机会生成一个名称为 docker0 的网卡其 IP 地址都是 172.17.0.1/16，并且会生成三种不同类型的网络，也就是bridge、host和null，分别代表网桥（桥接）、宿主机网络和无网络访问。<br>&emsp;&emsp;如果不加<code>--net</code>选项则默认使用bridge，相当于桥接在宿主机的<code>docker0</code>网卡上。<br>&emsp;&emsp;<code>host</code>网络就是指容器使用宿主机网络，所以端口就不能重复使用，多个使用host网络的容器间端口也不能重复。<br>&emsp;&emsp;<code>null</code>网络指容器只有回环网卡，没有外部网卡，无法与外部交流交流，不常使用，适用于某些不需要与外界通信的数据计算或图形、数据处理服务。<br>&emsp;&emsp;还有一种比较特的类型就是<code>container</code>模式，就是指定与一个已有容器共享网络，格式为<code>--net=container:指定名称或 ID</code> 。使用此模式创建的容器需指定和一个已经存在的容器共享一个网络，而不是和宿主机共享网，新创建的容器不会创建自己的网卡也不会配置自己的 IP，而是和一个已经存在的被指定的容器东西 IP 和端口范围，因此这个容器的端口不能和被指定的端口冲突， 除了网络之外的文件系统、进程信息等仍然保持相互隔离，两个容器的进程可以通过 lo 网卡及容器 IP 进行通信。</p><h4 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h4><p>&emsp;&emsp;<code>docker run</code>后面跟的CMD表示指定启动容器的命令，如果不指定，则为容器默认命令。可用 命令<code>docker inspect 容器ID</code>查看容器详细参数查看容器创建时的的CMD。<br>&emsp;&emsp;因为容器中没有守护进程systemd，所以进程编号PID=1的根进程，就是我们启动容器时指定的CMD命令或创建容器设定的默认CMD。如果这个PID=1的守护进程结束，则整个容器就将被关闭。所以我们一般会指定一个可以占据前台终端的服务来作为守护进程，例如<code>bash</code>或者<code>tail -f /etc/hosts</code>命令，对于后台nginx等服务来说，想让他们作为守护进程启动容器，<code>需要将在后台执行的这个选项关闭</code>，如nginx可以通过<code>docker run -it -d nginx:alpine nginx -g &quot;daemon off;&quot;</code>命令，加上<code>-g &quot;daemon off&quot;</code>选项传递参数或者在配置文件中设置<code>daemon off</code>来关闭后台执行选项，否则容器启动就会因为没有前台进程而终止。为了方便我们修改配置或者重启服务，企业生产中我们都采用<code>tail -f /etc/hosts</code>来作为前台进程，这样我们重启服务容器就不受影响了。</p><h3 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@DockerUbuntu:~# docker ps <span class="comment">--help</span></span><br><span class="line"></span><br><span class="line">Usage:docker ps [OPTIONS]</span><br><span class="line"></span><br><span class="line">List containers</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -a, <span class="comment">--all             Show all containers (default shows just running)</span></span><br><span class="line">  -f, <span class="comment">--filter filter   Filter output based on conditions provided</span></span><br><span class="line">      <span class="comment">--format string   Pretty-print containers using a Go template</span></span><br><span class="line">  -n, <span class="comment">--last int        Show n last created containers (includes all states) (default -1)</span></span><br><span class="line">  -l, <span class="comment">--latest          Show the latest created container (includes all states)</span></span><br><span class="line">      <span class="comment">--no-trunc        Don't truncate output</span></span><br><span class="line">  -q, <span class="comment">--quiet           Only display numeric IDs</span></span><br><span class="line">  -s, <span class="comment">--size            Display total file sizes</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;<code>docker ps</code>命令比较简单，较长使用的参数是<code>-a</code>、<code>-q</code>，分别是显示所有容器（包括为未运行容器，ps默认只显示正在运行的容器）和只显示容器ID。也可以使用<code>docker ps -aq</code>来显示所有容器的ID，可配合其他命令如<code>docker rm</code>命令使用。<code>docker rm -f `docker ps -aq`</code>删除本地所有容器（很危险，小心操作！）。</p><h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><p>&emsp;&emsp;<code>docker rm</code>命令是用来删除容器的，如果容器正在运行，使用<code>docker rm</code>命令删除时会报错提示<code>Error response from daemon: You cannot remove a running container XXX. Stop the container before attempting removal or force remove</code>，告诉我们无法删除运行中的容器，需要先将容器停止或者强制删除，使用<code>docker rm -f</code>命令强制删除，或者使用下面的停止命令</p><h3 id="start-stop"><a href="#start-stop" class="headerlink" title="start stop"></a>start stop</h3><p>&emsp;&emsp;<code>docker start 容器ID</code>启动容器，可以加选项<code>-i</code>，表示启动容器并输出容器内的标准输出至宿主机终端。需要注意的是，如果当时用<code>docker run</code>或者<code>docker create</code>命令创建容器时，没有加<code>-it</code>或<code>-d</code>等一些其它选项或者参数的话，在start容器这一步也没法作出更改了的。容器怎么创建的，启动时就会按照创建时设定好的模式运行，这些是没办法再次修改了的，包括启动CMD。<br>&emsp;&emsp;<code>docker stop 容器ID</code>终止容器。需要注意：终止容器时，容器内的数据都将丢失，在备份重要数据之前不要终止容器。</p><h3 id="images"><a href="#images" class="headerlink" title="images"></a>images</h3><p>&emsp;&emsp;<code>docker images</code>命令其实相当于<code>docker image ls</code>,显示本地所有镜像。<code>docker image CMD</code>还有很多，之后介绍镜像管理的时候 在详细介绍。</p><h3 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h3><p>&emsp;&emsp;<code>docker exec</code>命令可以向一个已运行容器发送命令。用法如下所示。<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@DockerCentOS ~]<span class="comment"># docker exec --help</span></span><br><span class="line"></span><br><span class="line">Usage:docker exec [OPTIONS] CONTAINER COMMAND [ARG...]</span><br><span class="line"></span><br><span class="line">Run a command <span class="keyword">in</span> a <span class="built_in">running</span> container</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -d, <span class="comment">--detach               Detached mode: run command in the background</span></span><br><span class="line">      <span class="comment">--detach-keys string   Override the key sequence for detaching a container</span></span><br><span class="line">  -e, <span class="comment">--env list             Set environment variables</span></span><br><span class="line">  -i, <span class="comment">--interactive          Keep STDIN open even if not attached</span></span><br><span class="line">      <span class="comment">--privileged           Give extended privileges to the command</span></span><br><span class="line">  -t, <span class="comment">--tty                  Allocate a pseudo-TTY</span></span><br><span class="line">  -u, <span class="comment">--user string          Username or UID (format: &lt;name|uid&gt;[:&lt;group|gid&gt;])</span></span><br><span class="line">  -w, <span class="comment">--workdir string       Working directory inside the container</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;最常使用的格式是<code>docker exec -it 容器ID bash/sh</code>，可以进入正在运行的容器。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;安装完Docker的服务，我们就可以开始使用Docker了。&lt;br&gt;
    
    </summary>
    
      <category term="Cloud" scheme="https://hewanyue.com/categories/Cloud/"/>
    
    
      <category term="Docker" scheme="https://hewanyue.com/tags/Docker/"/>
    
      <category term="容器" scheme="https://hewanyue.com/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Docker（一）——基础概念及部署</title>
    <link href="https://hewanyue.com//blog/eaa1ac6e.html"/>
    <id>https://hewanyue.com//blog/eaa1ac6e.html</id>
    <published>2019-12-04T01:58:21.000Z</published>
    <updated>2019-12-04T02:06:06.590Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;在企业生产应用中，docker容器技术及k8s的编排管理工具的使用率越来越高，这项技术甚至已经改变了很多企业的架构与框架流程，因为容器技术的出现，可以将应用以集装箱的方式打包交付，使应用在不同的团队中共享，通过镜像的方式应用可以部署于任何环境中。这样避免了各团队之间的协作问题的出现，成为企业实现DevOps目标的重要工具，而且以容器方式交付的Docker技术支持不断地开发迭代，提升了产品开发和交付速度，极大的方便了业务的横向扩容。<br>&emsp;&emsp;且与KVM虚拟化技术不同的是，Docker直接移植于Linux内核之上，通过运行Linux进程将底层设备虚拟隔离，这样系统性能的损耗也要比虚拟机低的多，几乎可以忽略。同时，Docker应用容器的启停非常高效，可以支持大规模的分布系统的水平扩展，真正给企业开发带来福音。<br><a id="more"></a></p><h2 id="Docker简介"><a href="#Docker简介" class="headerlink" title="Docker简介"></a>Docker简介</h2><h3 id="Docker-是什么"><a href="#Docker-是什么" class="headerlink" title="Docker 是什么"></a>Docker 是什么</h3><p>&emsp;&emsp;首先 Docker 是一个在 2013 年开源的应用程序并且是一个基于 go 语言编写是一个开源的 PAAS 服务(Platform as a Service， 平台即服务的缩写)， go 语言是由google 开发， docker 公司最早叫 dotCloud 后由于 Docker 开源后大受欢迎就将公司改名为 Docker Inc， 总部位于美国加州的旧金山， Docker 是基于 linux 内核实现， Docker 最早采用 LXC 技术(LinuX Container 的简写， LXC 是 Linux 原生支持的容器技术， 可以提供轻量级的虚拟化， 可以说 docker 就是基于 LXC 发展起来的，提供 LXC 的高级封装，发展标准的配置方法)， 而虚拟化技术 KVM(Kernelbased Virtual Machine) 基于模块实现， Docker 后改为自己研发并开源的 runc 技术运行容器。</p><h3 id="Dokcer与虚拟机技术对比"><a href="#Dokcer与虚拟机技术对比" class="headerlink" title="Dokcer与虚拟机技术对比"></a>Dokcer与虚拟机技术对比</h3><p>&emsp;&emsp;Docker 相比虚拟机的交付速度更快， 资源消耗更低， Docker 采用客户端/服务端架构，使用远程 API 来管理和创建 Docker 容器，其可以轻松的创建一个轻量级的、 可移植的、自给自足的容器， docker 的三大理念是 build(构建)、ship(运输)、 run(运行)， Docker 遵从 apache 2.0 协议，并通过（namespace 及cgroup 等）来提供容器的资源隔离与安全保障等，所以 Docke 容器在运行时不需要类似虚拟机（空运行的虚拟机占用物理机 6-8%性能）的额外资源开销，因此可以大幅提高资源利用率,总而言之 Docker 是一种用了新颖方式实现的轻量级虚拟机.类似于 VM 但是在原理和应用上和 VM 的差别还是很大的，并且 docker的专业叫法是应用容器(Application Container)。<br>| 优势 | Docker | 虚拟机 |<br>|–|–|–|<br>| 资源利用率更高 |  一台物理机可以运行数百个容器 | 但是一般只能运行数十个虚拟机 |<br>| 开销更小 |  不需要启动单独的虚拟机占用硬件资源 |  需要启动单独的虚拟机占用硬件资源 |<br>| 启动速度更快 | 可以在数秒内完成启动 | 需要几十秒甚至数分钟 |</p><p>&emsp;&emsp;使用虚拟机是为了更好的实现服务运行环境隔离， 每个虚拟机都有独立的内核，虚拟化可以实现不同操作系统的虚拟机，但是通常一个虚拟机只运行一个服务， 很明显资源利用率比较低且造成不必要的性能损耗， 我们创建虚拟机的目的是为了运行应用程序，比如 Nginx、 PHP、 Tomcat 等 web 程序， 使用虚拟机无疑带来了一些不必要的资源开销，但是容器技术则基于减少中间运行环节带来较大的性能提升。</p><h3 id="Docker-的组成"><a href="#Docker-的组成" class="headerlink" title="Docker 的组成"></a>Docker 的组成</h3><ul><li>Docker 主机(Host)： 一个物理机或虚拟机，用于运行 Docker 服务进程和容器。</li><li>Docker 服务端(Server)： Docker 守护进程， 运行 docker 容器。</li><li>Docker 客户端(Client)： 客户端使用 docker 命令或其他工具调用 docker API。</li><li>Docker 仓库(Registry): 保存镜像的仓库，类似于 git 或 svn 这样的版本控制系统，官方仓库: <a href="https://hub.docker.com/" rel="noopener" target="_blank">https://hub.docker.com/</a></li><li>Docker 镜像(Images)： 镜像可以理解为创建实例使用的模板。</li><li>Docker 容器(Container): 容器是从镜像生成对外提供服务的一个或一组服务。</li></ul><p>详细介绍参见官方文档<a href="https://docs.docker.com/engine/docker-overview/" rel="noopener" target="_blank">https://docs.docker.com/engine/docker-overview/</a></p><h2 id="Docker实现需要解决的问题"><a href="#Docker实现需要解决的问题" class="headerlink" title="Docker实现需要解决的问题"></a>Docker实现需要解决的问题</h2><p>&emsp;&emsp;容器技术确实有很多优点，不过当使用多个容器时带来的以下问题怎么解决:<br>&emsp;&emsp;1.怎么样保证每个容器都有不同的文件系统并且能互不影响？<br>&emsp;&emsp;2.一个 docker 主进程内的各个容器都是其子进程，那么实现同一个主进程下不同类型的子进程？ 各个进程间通信能相互访问(内存数据)吗？<br>&emsp;&emsp;3.每个容器怎么解决 IP 及端口分配的问题？<br>&emsp;&emsp;4.多个容器的主机名能一样吗？<br>&emsp;&emsp;5.每个容器都要不要有 root 用户？怎么解决账户重名问题？<br>&emsp;&emsp;这就不得不引入一个Namespace的概念了。</p><h3 id="Namespace"><a href="#Namespace" class="headerlink" title="Namespace"></a>Namespace</h3><p>&emsp;&emsp;namespace 是 Linux 系统的底层概念， 在内核层实现，即有一些不同类型的命名空间被部署在核内， 各个 docker 容器运行在同一个 docker 主进程并且共用同一个宿主机系统内核，各 docker 容器运行在宿主机的用户空间， 每个容器都要有类似于虚拟机一样的相互隔离的运行空间， 但是容器技术是在一个进程内实现运行指定服务的运行环境， 并且还可以保护宿主机内核不受其他进程的干扰和影响， 如文件系统空间、网络空间、进程空间等。<br>| 隔离类型 | 实现功能 | 系统调用参数 | 内核版本 |<br>|–|–|–|–|<br>| MNT Namespace(mount) | 提供磁盘挂载点和文件系统的隔离能力 | CLONE_NEWNS | Linux 2.4.19 |<br>| IPC Namespace(Inter-Process Communication) |  提供进程间通信的隔离能力 | CLONE_NEWIPC | Linux 2.6.19 |<br>| UTS Namespace(UNIX Timesharing System) | 提供主机名隔离能力 | CLONE_NEWUTS | Linux 2.6.19 |<br>| PID Namespace(Process Identification) | 提供进程隔离能力 | CLONE_NEWPID | Linux 2.6.24 |<br>| Net Namespace(network) | 提供网络隔离能力 | CLONE_NEWNET | Linux 2.6.29 |<br>| User Namespace(user) | 提供用户隔离能力 | CLONE_NEWUSER | Linux 3.8 |</p><ul><li>MNT Namespace：每个容器都要有独立的根文件系统有独立的用户空间， 以实现在容器里面启动服务并且使用容器的运行环境，容器里面是不能访问宿主机的资源， 宿主机是使用了 chroot 技术把容器锁定到一个指定的运行目录里面。</li><li>IPC Namespace：一个容器内的进程间通信， 允许一个容器内的不同进程的(内存、 缓存等)数据访问，但是不能跨容器访问其他容器的数据。</li><li>UTS Namespace：UTS namespace（UNIX Timesharing System 包含了运行内核的名称、版本、底层体系结构类型等信息）用于系统标识， 其中包含了 hostname 和域名domainname ， 它使得一个容器拥有属于自己 hostname 标识，这个主机名标识独立于宿主机系统和其上的其他容器。</li><li>PID Namespace：Linux 系统中，有一个 PID 为 1 的进程(init/systemd)是其他所有进程的父进程， 那么在每个容器内也要有一个父进程来管理其下属的子进程，那么多个容器的进程通 PID namespace 进程隔离(比如 PID 编号重复、 器内的主进程生成与回收子进程等)。</li><li>Net Namespace：每一个容器都类似于虚拟机一样有自己的网卡、 监听端口、 TCP/IP 协议栈等，Docker 使用 network namespace 启动一个 vethX 接口，这样你的容器将拥有它自己的桥接 ip 地址，通常是 docker0，而 docker0 实质就是 Linux 的虚拟网桥,网桥是在 OSI 七层模型的数据链路层的网络设备，通过 mac 地址对网络进行划分，并且在不同网络直接传递数据。</li><li>User Namespace：User Namespace 允许在各个宿主机的各个容器空间内创建相同的用户名以及相同的用户 UID 和 GID， 只是会把用户的作用范围限制在每个容器内，即 A 容器和 B 容器可以有相同的用户名称和 ID 的账户，但是此用户的有效范围仅是当前容器内， 不能访问另外一个容器内的文件系统，即相互隔离、互补影响、 永不相见。</li></ul><p>&emsp;&emsp;通过这些内核级功能的实现，docker才可以正常工作，实现不同容器间的各种资源的隔离，形成共享同一组硬件及内核上却互不影响的独立应用级虚拟化系统。不过此时，我们还面临一个问题，就是资源使用率的控制。如果一个容器因为BUG或代码本身等原因导致无限制的使用宿主机上的资源，将会导致宿主机CPU或者内存不足进而极有可能影响到其他容器的正常运行。所以我们需要对每个容器的资源利用做一个限制，我们通过内核中的Linux Cgroups功能来限制每个容器能使用的资源的上限。</p><h3 id="Linux-Cgroups"><a href="#Linux-Cgroups" class="headerlink" title="Linux Cgroups"></a>Linux Cgroups</h3><p>&emsp;&emsp;Linux Cgroups 的全称是 Linux Control Groups， 它最主要的作用，就是限制一个进程组能够使用的资源上限，包括 CPU、内存、磁盘、网络带宽等等。此外，还能够对进程进行优先级设置，以及将进程挂起和恢复等操作。<br>&emsp;&emsp;Cgroups 在内核层默认已经开启，可通过下列命令验证查看Cgroups设置<br>&emsp;&emsp;CentOS7.6:<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@localhost ~]</span><span class="comment"># cat /boot/config-3.10.0-957.el7.x86_64 |grep CGROUP</span></span><br><span class="line"><span class="attr">CONFIG_CGROUPS</span>=y</span><br><span class="line"><span class="comment"># CONFIG_CGROUP_DEBUG is not set</span></span><br><span class="line"><span class="attr">CONFIG_CGROUP_FREEZER</span>=y</span><br><span class="line"><span class="attr">CONFIG_CGROUP_PIDS</span>=y</span><br><span class="line"><span class="attr">CONFIG_CGROUP_DEVICE</span>=y</span><br><span class="line"><span class="attr">CONFIG_CGROUP_CPUACCT</span>=y</span><br><span class="line"><span class="attr">CONFIG_CGROUP_HUGETLB</span>=y</span><br><span class="line"><span class="attr">CONFIG_CGROUP_PERF</span>=y</span><br><span class="line"><span class="attr">CONFIG_CGROUP_SCHED</span>=y</span><br><span class="line"><span class="attr">CONFIG_BLK_CGROUP</span>=y</span><br><span class="line"><span class="comment"># CONFIG_DEBUG_BLK_CGROUP is not set</span></span><br><span class="line"><span class="attr">CONFIG_NETFILTER_XT_MATCH_CGROUP</span>=m</span><br><span class="line"><span class="attr">CONFIG_NET_CLS_CGROUP</span>=y</span><br><span class="line"><span class="attr">CONFIG_NETPRIO_CGROUP</span>=y</span><br><span class="line"><span class="section">[root@localhost ~]</span><span class="comment">#</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;ubuntu1804中:<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">root@DockerUbuntu:~# cat /boot/config-4.15.0-70-generic |grep CGROUP</span></span><br><span class="line">CONFIG_CGROUPS=y</span><br><span class="line">CONFIG_BLK_CGROUP=y</span><br><span class="line"><span class="comment"># CONFIG_DEBUG_BLK_CGROUP is not set</span></span><br><span class="line">CONFIG_CGROUP_WRITEBACK=y</span><br><span class="line">CONFIG_CGROUP_SCHED=y</span><br><span class="line">CONFIG_CGROUP_PIDS=y</span><br><span class="line">CONFIG_CGROUP_RDMA=y</span><br><span class="line">CONFIG_CGROUP_FREEZER=y</span><br><span class="line">CONFIG_CGROUP_HUGETLB=y</span><br><span class="line">CONFIG_CGROUP_DEVICE=y</span><br><span class="line">CONFIG_CGROUP_CPUACCT=y</span><br><span class="line">CONFIG_CGROUP_PERF=y</span><br><span class="line">CONFIG_CGROUP_BPF=y</span><br><span class="line"><span class="comment"># CONFIG_CGROUP_DEBUG is not set</span></span><br><span class="line">CONFIG_SOCK_CGROUP_DATA=y</span><br><span class="line">CONFIG_NETFILTER_XT_MATCH_CGROUP=m</span><br><span class="line">CONFIG_NET_CLS_CGROUP=m</span><br><span class="line">CONFIG_CGROUP_NET_PRIO=y</span><br><span class="line">CONFIG_CGROUP_NET_CLASSID=y</span><br><span class="line"><span class="section">root@DockerUbuntu:~#</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;可以看到内核较新的 ubuntu 支持的功能更多。</p><h4 id="cgroups-参数具体解释："><a href="#cgroups-参数具体解释：" class="headerlink" title="cgroups 参数具体解释："></a>cgroups 参数具体解释：</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">blkio：块设备 IO 限制。</span><br><span class="line">cpu：使用调度程序为 cgroup 任务提供 cpu 的访问。</span><br><span class="line">cpuacct：产生 cgroup 任务的 cpu 资源报告。</span><br><span class="line">cpuset：如果是多核心的 cpu，这个子系统会为 cgroup 任务分配单独的 cpu</span><br><span class="line">和内存。</span><br><span class="line">devices：允许或拒绝 cgroup 任务对设备的访问。</span><br><span class="line">freezer：暂停和恢复 cgroup 任务。</span><br><span class="line">memory：设置每个 cgroup 的内存限制以及产生内存资源报告。</span><br><span class="line">net_cls：标记每个网络包以供 cgroup 方便使用。</span><br><span class="line">ns：命名空间子系统。</span><br><span class="line">perf_event：增加了对每<span class="built_in"> group </span>的监测跟踪的能力，可以监测属于某个特定的</span><br><span class="line">group 的所有线程以及运行在特定 CPU 上的线程。</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;可以通过命令<code>ll /sys/fs/cgroup/</code>查看系统Cgroups</p><h2 id="Docker依赖的技术"><a href="#Docker依赖的技术" class="headerlink" title="Docker依赖的技术"></a>Docker依赖的技术</h2><p>&emsp;&emsp;Docker容器技术如果真正想在企业中应用，还必须依赖下面的一些技术，会在之后的文章中详细介绍。</p><h3 id="容器网络："><a href="#容器网络：" class="headerlink" title="容器网络："></a>容器网络：</h3><p>&emsp;&emsp;docker 自带的网络 docker network 仅支持管理单机上的容器网络， 当多主机运行的时候需要使用第三方开源网络，例如 calico、 flannel 等。</p><h3 id="服务发现："><a href="#服务发现：" class="headerlink" title="服务发现："></a>服务发现：</h3><p>&emsp;&emsp;容器的动态扩容特性决定了容器 IP 也会随之变化， 因此需要有一种机制可以自动识别并将用户请求动态转发到新创建的容器上， kubernetes 自带服务发现功能，需要结合 kube-dns 服务解析内部域名。</p><h3 id="容器监控："><a href="#容器监控：" class="headerlink" title="容器监控："></a>容器监控：</h3><p>&emsp;&emsp;可以通过原生命令 docker ps/top/stats 查看容器运行状态，另外也可以使<br>heapster/ Prometheus 等第三方监控工具监控容器的运行状态。</p><h3 id="数据管理："><a href="#数据管理：" class="headerlink" title="数据管理："></a>数据管理：</h3><p>&emsp;&emsp;容器的动态迁移会导致其在不同的 Host 之间迁移，因此如何保证与容器相关的数据也能随之迁移或随时访问，可以使用逻辑卷/存储挂载等方式解决。</p><h3 id="日志收集："><a href="#日志收集：" class="headerlink" title="日志收集："></a>日志收集：</h3><p>&emsp;&emsp;docker 原生的日志查看工具 docker logs， 但是容器内部的日志需要通过 ELK 等专门的日志收集分析和展示工具进行处理。</p><h2 id="Docker部署"><a href="#Docker部署" class="headerlink" title="Docker部署"></a>Docker部署</h2><p>&emsp;&emsp;我们初步知道了Docker的概念和实现原理，也知道了Docker在使用中可能会遇到的问题，说了这么多，现在我们先将Docker部署一下。<br>&emsp;&emsp;Docker常见的安装方式有三种，可以通过rpm包下载，或者二进制安装，也可以通过epel源安装。<br>&emsp;&emsp;官方 rpm 包下载地址:<br>&emsp;&emsp;<a href="https://download.docker.com/linux/centos/7/x86_64/stable/Packages/" rel="noopener" target="_blank">https://download.docker.com/linux/centos/7/x86_64/stable/Packages/</a><br>&emsp;&emsp;二进制下载地址：<br>&emsp;&emsp;<a href="https://download.docker.com/" rel="noopener" target="_blank">https://download.docker.com/</a><br><a href="https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/" rel="noopener" target="_blank">https://mirrors.aliyun.com/docker-ce/linux/static/stable/x86_64/</a><br>&emsp;&emsp;阿里镜像下载地址：<br>&emsp;&emsp;<a href="https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/Packages/" rel="noopener" target="_blank">https://mirrors.aliyun.com/docker-ce/linux/centos/7/x86_64/stable/Packages/</a><br>&emsp;&emsp;Ubuntu的安装docker-ce阿里云镜像仓库方式如下（使用 apt-get 进行安装）:<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># step 1: 安装必要的一些系统工具</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> update</span><br><span class="line">sudo apt-<span class="keyword">get</span> -y install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line"><span class="meta"># step 2: 安装GPG证书</span></span><br><span class="line">curl -fsSL https:<span class="comment">//mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span></span><br><span class="line"><span class="meta"># Step 3: 写入软件源信息</span></span><br><span class="line">sudo add-apt-repository <span class="string">"deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable"</span></span><br><span class="line"><span class="meta"># Step 4: 更新并安装Docker-CE</span></span><br><span class="line">sudo apt-<span class="keyword">get</span> -y update</span><br><span class="line">sudo apt-<span class="keyword">get</span> -y install docker-ce</span><br><span class="line"></span><br><span class="line"><span class="meta"># 安装指定版本的Docker-CE:</span></span><br><span class="line"><span class="meta"># Step 1: 查找Docker-CE的版本:</span></span><br><span class="line"><span class="meta"># apt-cache madison docker-ce</span></span><br><span class="line"><span class="meta">#   docker-ce | 17.03.1~ce-0~ubuntu-xenial | https://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial/stable amd64 Packages</span></span><br><span class="line"><span class="meta">#   docker-ce | 17.03.0~ce-0~ubuntu-xenial | https://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial/stable amd64 Packages</span></span><br><span class="line"><span class="meta"># Step 2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.1~ce-0~ubuntu-xenial)</span></span><br><span class="line"><span class="meta"># sudo apt-get -y install docker-ce=[VERSION]</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<strong>注意</strong>：在与 kubernetes 结合使用的时候，要安装经过 kubernetes 官方测试通过的 docker版本， 避免出现不兼容等未知的及不可预估的问题发生， kubernetes 测试过的docker 版本可以在 github 查询， 具体如下：<br><a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.14.md#external-dependencies" rel="noopener" target="_blank">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.14.md#external-dependencies</a><br>&emsp;&emsp;安装完成后就可以用<code>systemctl start docker</code>命令启动Docker了。<br>&emsp;&emsp;然后用<code>docker info</code>命令来验证当前容器信息<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> <span class="literal">info</span></span><br></pre></td></tr></table></figure></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Containers:</span> <span class="number">0</span> <span class="comment">#当前主机运行的容器总数</span></span><br><span class="line"><span class="attr">Running:</span> <span class="number">0</span> <span class="comment">#有几个容器是正在运行的</span></span><br><span class="line"><span class="attr">Paused:</span> <span class="number">0</span> <span class="comment">#有几个容器是暂停的</span></span><br><span class="line"><span class="attr">Stopped:</span> <span class="number">0</span> <span class="comment">#有几个容器是停止的</span></span><br><span class="line"><span class="attr">Images:</span> <span class="number">0</span> <span class="comment">#当前服务器的镜像数</span></span><br><span class="line"><span class="string">Server</span> <span class="attr">Version:</span> <span class="number">18.09</span><span class="number">.9</span> <span class="comment">#服务端版本</span></span><br><span class="line"><span class="string">Storage</span> <span class="attr">Driver:</span> <span class="string">overlay2</span> <span class="comment">#正在使用的存储引擎</span></span><br><span class="line"><span class="string">Backing</span> <span class="attr">Filesystem:</span> <span class="string">extfs</span> <span class="comment">#后端文件系统，即服务器的磁盘文件系统</span></span><br><span class="line"><span class="string">Supports</span> <span class="attr">d_type:</span> <span class="literal">true</span> <span class="comment">#是否支持 d_type</span></span><br><span class="line"><span class="string">Native</span> <span class="string">Overlay</span> <span class="attr">Diff:</span> <span class="literal">true</span> <span class="comment">#是否支持差异数据存储</span></span><br><span class="line"><span class="string">Logging</span> <span class="attr">Driver:</span> <span class="string">json-file</span> <span class="comment">#日志类型</span></span><br><span class="line"><span class="string">Cgroup</span> <span class="attr">Driver:</span> <span class="string">cgroupfs</span> <span class="comment">#Cgroups 类型</span></span><br><span class="line"><span class="attr">Plugins:</span> <span class="comment">#插件</span></span><br><span class="line"><span class="attr">Volume:</span> <span class="string">local</span> <span class="comment">#卷</span></span><br><span class="line"><span class="attr">Network:</span> <span class="string">bridge</span> <span class="string">host</span> <span class="string">macvlan</span> <span class="literal">null</span> <span class="string">overlay</span> <span class="comment"># overlay 夸主机通信</span></span><br><span class="line"><span class="attr">Log:</span> <span class="string">awslogs</span> <span class="string">fluentd</span> <span class="string">gcplogs</span> <span class="string">gelf</span> <span class="string">journald</span> <span class="string">json-file</span> <span class="string">local</span> <span class="string">logentries</span> <span class="string">splunk</span> <span class="string">syslog</span> <span class="comment">#日</span></span><br><span class="line"><span class="string">志类型</span></span><br><span class="line"><span class="attr">Swarm:</span> <span class="string">inactive</span> <span class="comment">#是否支持 swarm</span></span><br><span class="line"><span class="attr">Runtimes:</span> <span class="string">runc</span> <span class="comment">#已安装的容器运行时</span></span><br><span class="line"><span class="string">Default</span> <span class="attr">Runtime:</span> <span class="string">runc</span> <span class="comment">#默认使用的容器运行时</span></span><br><span class="line"><span class="string">Init</span> <span class="attr">Binary:</span> <span class="string">docker-init</span> <span class="comment">#初始化容器的守护进程，即 pid 为 1 的进程</span></span><br><span class="line"><span class="string">containerd</span> <span class="attr">version:</span> <span class="number">894</span><span class="string">b81a4b802e4eb2a91d1ce216b8817763c29fb</span> <span class="comment">#版本</span></span><br><span class="line"><span class="string">runc</span> <span class="attr">version:</span> <span class="number">425e105</span><span class="string">d5a03fabd737a126ad93d62a9eeede87f</span> <span class="comment"># runc 版本</span></span><br><span class="line"><span class="string">init</span> <span class="attr">version:</span> <span class="string">fec3683</span> <span class="comment">#init 版本</span></span><br><span class="line"><span class="string">Security</span> <span class="attr">Options:</span> <span class="comment">#安全选项</span></span><br><span class="line"><span class="string">Apparmor</span> <span class="comment">#安全模块， https://docs.docker.com/engine/security/apparmor/</span></span><br><span class="line"><span class="string">seccomp</span> <span class="comment">#审计(操作)， https://docs.docker.com/engine/security/seccomp/</span></span><br><span class="line"><span class="attr">Profile:</span> <span class="string">default</span> <span class="comment">#默认的配置文件</span></span><br><span class="line"><span class="string">Kernel</span> <span class="attr">Version:</span> <span class="number">4.15</span><span class="number">.0</span><span class="bullet">-55</span><span class="bullet">-generic</span> <span class="comment">#宿主机内核版本</span></span><br><span class="line"><span class="string">Operating</span> <span class="attr">System:</span> <span class="string">Ubuntu</span> <span class="number">18.04</span><span class="number">.3</span> <span class="string">LTS</span> <span class="comment">#宿主机操作系统</span></span><br><span class="line"><span class="attr">OSType:</span> <span class="string">linux</span> <span class="comment">#宿主机操作系统类型</span></span><br><span class="line"><span class="attr">Architecture:</span> <span class="string">x86_64</span> <span class="comment">#宿主机架构</span></span><br><span class="line"><span class="attr">CPUs:</span> <span class="number">2</span> <span class="comment">#宿主机 CPU 数量</span></span><br><span class="line"><span class="string">Total</span> <span class="attr">Memory:</span> <span class="number">3.83</span><span class="string">GiB</span> <span class="comment">#宿主机总内存</span></span><br><span class="line"><span class="attr">Name:</span> <span class="string">DockerUbuntu</span> <span class="comment">#宿主机 hostname</span></span><br><span class="line"><span class="attr">ID:</span> <span class="attr">ZFPD:UIA5:SR6E:Y6SS:52QL:5MPT:VDY3:ATVI:QMVG:HAFF:MN74:2HPD</span> <span class="comment">#宿主机</span></span><br><span class="line"><span class="string">ID</span></span><br><span class="line"><span class="string">Docker</span> <span class="string">Root</span> <span class="attr">Dir:</span> <span class="string">/var/lib/docker</span> <span class="comment">#宿主机数据保存目录</span></span><br><span class="line"><span class="string">Debug</span> <span class="string">Mode</span> <span class="string">(client):</span> <span class="literal">false</span> <span class="comment">#client 端是否开启 debug</span></span><br><span class="line"><span class="string">Debug</span> <span class="string">Mode</span> <span class="string">(server):</span> <span class="literal">false</span> <span class="comment">#server 端是否开启 debug</span></span><br><span class="line"><span class="attr">Registry:</span> <span class="attr">https://index.docker.io/v1/</span> <span class="comment">#镜像仓库</span></span><br><span class="line"><span class="attr">Labels:</span> <span class="comment">#其他标签</span></span><br><span class="line"><span class="attr">Experimental:</span> <span class="literal">false</span> <span class="comment">#是否测试版</span></span><br><span class="line"><span class="string">Insecure</span> <span class="attr">Registries:</span> <span class="comment">#非安全的镜像仓库</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/8</span></span><br><span class="line"><span class="string">Live</span> <span class="string">Restore</span> <span class="attr">Enabled:</span> <span class="literal">false</span> <span class="comment">#是否开启活动重启(重启 docker-daemon 不关闭容器)</span></span><br><span class="line"><span class="string">Product</span> <span class="attr">License:</span> <span class="string">Community</span> <span class="string">Engine</span> <span class="comment">#产品许可信息</span></span><br></pre></td></tr></table></figure><p>在结尾可能会有类似<code>warning警报</code>,<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">WARNING: </span>No swap limit support</span><br></pre></td></tr></table></figure></p><p>这是提示说我们没有开启 swap 资源限制，这就需要我们通过修改内核参数，来限制swap资源的使用。<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span><span class="keyword">default</span><span class="regexp">/grub</span></span><br></pre></td></tr></table></figure></p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">GRUB_CMDLINE_LINUX="net.ifnames=0</span> <span class="attr">biosdevname=0</span> <span class="attr">cgroup_enable=memory</span> <span class="attr">swapaccount=1"</span></span><br></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">update-grub</span></span><br><span class="line"><span class="attribute">reboot</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;重启生效。至此，docker工具部署就完成了~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;在企业生产应用中，docker容器技术及k8s的编排管理工具的使用率越来越高，这项技术甚至已经改变了很多企业的架构与框架流程，因为容器技术的出现，可以将应用以集装箱的方式打包交付，使应用在不同的团队中共享，通过镜像的方式应用可以部署于任何环境中。这样避免了各团队之间的协作问题的出现，成为企业实现DevOps目标的重要工具，而且以容器方式交付的Docker技术支持不断地开发迭代，提升了产品开发和交付速度，极大的方便了业务的横向扩容。&lt;br&gt;&amp;emsp;&amp;emsp;且与KVM虚拟化技术不同的是，Docker直接移植于Linux内核之上，通过运行Linux进程将底层设备虚拟隔离，这样系统性能的损耗也要比虚拟机低的多，几乎可以忽略。同时，Docker应用容器的启停非常高效，可以支持大规模的分布系统的水平扩展，真正给企业开发带来福音。&lt;br&gt;
    
    </summary>
    
      <category term="Cloud" scheme="https://hewanyue.com/categories/Cloud/"/>
    
    
      <category term="Docker" scheme="https://hewanyue.com/tags/Docker/"/>
    
      <category term="容器" scheme="https://hewanyue.com/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="虚拟化" scheme="https://hewanyue.com/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>KVM虚拟化</title>
    <link href="https://hewanyue.com//blog/f989902e.html"/>
    <id>https://hewanyue.com//blog/f989902e.html</id>
    <published>2019-11-29T14:28:35.000Z</published>
    <updated>2019-12-04T02:03:42.614Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;KVM 是Kernel-based Virtual Machine的简称，是一个开源的系统虚拟化模块，自Linux 2.6.20之后集成在Linux的各个主要发行版本中，KVM目前已成为学术界的主流 VMM (virtual machine monitor，虚拟机监视器，也称为hypervisor)之一。<br><a id="more"></a><br>&emsp;&emsp;可参考红帽官方对kvm的定义：<a href="https://www.redhat.com/zh/topics/virtualization/what-is-KVM" rel="noopener" target="_blank">https://www.redhat.com/zh/topics/virtualization/what-is-KVM</a><br>&emsp;&emsp;KVM的虚拟化需要硬件支持（如Intel VT技术或者AMD V技术)，是基于硬件的完全虚拟化，而Xen早期则是基于软件模拟的半虚拟化，新版本则是支持基于硬件支持的完全虚拟化，但Xen本身有自己的进程调度器，存储管理模块等，所以代码较为庞大，广为流传的商业系统虚拟化软件VMware ESXI系列是Full-Virtualization，（IBM文档：<a href="http://www.ibm.com/developerworks/cn/linux/l-using-kvm/" rel="noopener" target="_blank">http://www.ibm.com/developerworks/cn/linux/l-using-kvm/</a> ）<br>&emsp;&emsp;简单地说，KVM就是基于硬件支持实现，将单台主机，分隔成多个互不干扰的虚拟主机的技术，不受困于底层操作系统，可以为每个主机提供单独的、所需的的运行环境，如下图所示：<br><img src="https://img-blog.csdnimg.cn/20191129111043897.png" alt="KVM示意图"><br>&emsp;&emsp;如果每个节点都是用共享存储如NAS，则可实现跨主机的虚拟机快速迁移，这也是我们在生产环境中经常采用的架构。本文将以下面架构，来具体展示KVM在实际生产中的应用。<br><img src="https://img-blog.csdnimg.cn/20191129142617354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="KVMweb负载均衡">&emsp;&emsp;三个主机，其中两个主机node1和node2上运行KVM，另一台是NAS共享存储服务器，通过10.0.0.0/16网段内网连接。在node1上的用KVM构建虚拟机H1和W1分别运行haproxy+keepalived服务和nginx服务，其中H1桥接方式到node1的两块网卡上，W1桥接到内网网卡eth1上。node2节点中也是如此。于是，将Client端请求通过haproxy反向代理只内网的web服务集群中，保证负载均衡和高可用，哪怕一个物理节点服务器down掉也不影响客户服务访问。<br>&emsp;&emsp;NAS服务器的搭建很容易，这里就先不详细介绍了，本文之后主要介绍KVM服务的配置及虚拟机集群的搭建。</p><h2 id="宿主机环境准备："><a href="#宿主机环境准备：" class="headerlink" title="宿主机环境准备："></a>宿主机环境准备：</h2><p>&emsp;&emsp;KVM需要宿主机CPU必须支持虚拟化功能，因此如果是在vmware workstation上使用虚拟机做宿主机，那么必须要在虚拟机配置界面的处理器选项中开启虚拟机化功能（VMware支持嵌套虚拟化，而KVM不支持，大部分云服务器如阿里云就是基于KVM技术二次研发制作的，所以云服务器都不支持从中再建虚拟机）。<br>&emsp;&emsp;KVM模块因为已经被集成到linux内核之中，所以我们只需要安装KVM管理工具就可以直接使用KVM创建虚拟机了。<br>&emsp;&emsp;可用命令验证是否开启虚拟化（也可通过lscpu命令,grep -o选项只看匹配词本身，也可以用egrep代替grep -E）<br><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# grep -Eo <span class="string">"vmx|svm"</span> /<span class="keyword">proc</span>/cpuinfo |<span class="title"> wc</span> -l</span><br><span class="line">vmx</span><br><span class="line">vmx</span><br></pre></td></tr></table></figure></p><h3 id="KVM软件包安装"><a href="#KVM软件包安装" class="headerlink" title="KVM软件包安装"></a>KVM软件包安装</h3><p>&emsp;&emsp;在Ubuntu 18.04中：<br>&emsp;&emsp;可参考官网<a href="https://ubuntu.com/server/docs/virtualization-libvirt" rel="noopener" target="_blank">https://ubuntu.com/server/docs/virtualization-libvirt</a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apt <span class="keyword">install</span> qemu-kvm virt-manager libvirt-daemon-<span class="keyword">system</span></span><br><span class="line">kvm-ok <span class="comment">#验证是否支持kvm</span></span><br></pre></td></tr></table></figure></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">INFO:</span> <span class="meta-keyword">/dev/</span>kvm exists</span><br><span class="line">KVM acceleration can be used</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;CentOS 7.X：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> qemu-kvm qemu-kvm-tools libvirt libvirt-<span class="keyword">client</span> virt-manager virt-<span class="keyword">install</span></span><br></pre></td></tr></table></figure></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="keyword">start</span> libvirtd</span><br><span class="line">systemctl <span class="keyword">enable</span> libvirtd</span><br></pre></td></tr></table></figure><h3 id="网络环境配置"><a href="#网络环境配置" class="headerlink" title="网络环境配置"></a>网络环境配置</h3><p>&emsp;&emsp;为了让三个节点间虚拟机可以直接相互之间通信，需要将KVM上的虚拟机以桥接模式与宿主机的网卡连接，这就需要我们提前在宿主机上配置好网桥。<br>&emsp;&emsp;<strong>若宿主机为Ubuntu18.04：</strong><br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/netplan/<span class="number">01</span>-netcfg.yaml</span><br></pre></td></tr></table></figure></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file describes the network interfaces available on your system</span></span><br><span class="line"><span class="comment"># For more information, see netplan(5).</span></span><br><span class="line"><span class="attr">network:</span></span><br><span class="line"><span class="attr">  version:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  renderer:</span> <span class="string">networkd</span></span><br><span class="line"><span class="attr">  ethernets:</span></span><br><span class="line"><span class="attr">    eth0:</span></span><br><span class="line"><span class="attr">      dhcp4:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">      dhcp6:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">    eth1:</span></span><br><span class="line"><span class="attr">      dhcp4:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">      dhcp6:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">  bridges:</span></span><br><span class="line"><span class="attr">    br0:</span></span><br><span class="line"><span class="attr">      dhcp4:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">      dhcp6:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">      addresses:</span> <span class="string">[172.18.0.75/16]</span></span><br><span class="line"><span class="attr">      gateway4:</span> <span class="number">172.18</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"><span class="attr">      nameservers:</span></span><br><span class="line"><span class="attr">        addresses:</span> <span class="string">[180.76.76.76]</span></span><br><span class="line"><span class="attr">      interfaces:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">eth0</span></span><br><span class="line"><span class="attr">    br1:</span></span><br><span class="line"><span class="attr">      dhcp4:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">      dhcp6:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">      addresses:</span> <span class="string">[10.0.0.75/16]</span></span><br><span class="line"><span class="attr">      interfaces:</span></span><br><span class="line"><span class="bullet">        -</span> <span class="string">eth1</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;修改网卡配置后，使用<code>netplan apply</code>命令使配置文件的修改生效<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netplan <span class="built_in">apply</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<strong>若宿主机为CentOS：</strong><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/etc/</span>sysconfig<span class="regexp">/network-scripts/</span></span><br></pre></td></tr></table></figure></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vim</span> ifcfg-eh0</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">NAME</span>=eth0</span><br><span class="line"><span class="attr">DEVICE</span>=eth0</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BRIDGE</span>=br0</span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vim</span> ifcfg-eh1</span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=Ethernet</span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">NAME</span>=eth1</span><br><span class="line"><span class="attr">DEVICE</span>=eth1</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">BRIDGE</span>=br1</span><br></pre></td></tr></table></figure><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ifcfg-<span class="keyword">br</span><span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=Bridge</span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">NAME</span>=br0</span><br><span class="line"><span class="attr">DEVICE</span>=br0</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">172.18</span>.<span class="number">32.75</span></span><br><span class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">0.0</span></span><br><span class="line"><span class="attr">GATEWAY</span>=<span class="number">172.18</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">DNS1</span>=<span class="number">180.76</span>.<span class="number">76.76</span></span><br></pre></td></tr></table></figure><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ifcfg-<span class="keyword">br</span><span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=Bridge</span><br><span class="line"><span class="attr">BOOTPROTO</span>=static</span><br><span class="line"><span class="attr">NAME</span>=br1</span><br><span class="line"><span class="attr">DEVICE</span>=br1</span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="number">10.0</span>.<span class="number">0.75</span></span><br><span class="line"><span class="attr">NETMASK</span>=<span class="number">255.255</span>.<span class="number">0.0</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;重启网络服务，生效配置<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">systemctl restart network</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<code>ip a</code>命令或<code>ifconfig</code>查看桥接网卡是否生效</p><h2 id="KVM虚拟机创建"><a href="#KVM虚拟机创建" class="headerlink" title="KVM虚拟机创建"></a>KVM虚拟机创建</h2><h3 id="创建虚拟磁盘"><a href="#创建虚拟磁盘" class="headerlink" title="创建虚拟磁盘"></a>创建虚拟磁盘</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># ll /var/lib/libvirt/images/ #默认保存虚拟机磁盘的路径</span></span><br><span class="line">total <span class="number">0</span></span><br><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta">#</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;使用<code>qemu-img create</code>命令可以创建磁盘,如果创建raw格式磁盘文件，则理解占据实际大小，若创建qcow2稀疏格式磁盘，则磁盘文件会随着使用的增大而增大<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -f raw /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/<span class="title">CentOS7</span>.<span class="title">raw</span> 10<span class="title">G</span>建磁盘</span></span><br></pre></td></tr></table></figure></p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ll -h /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/<span class="title">CentOS7</span>.<span class="title">raw</span></span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">10</span>G Nov <span class="number">29</span> <span class="number">16</span>:<span class="number">34</span> /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/<span class="title">centos</span>.<span class="title">raw</span></span></span><br></pre></td></tr></table></figure><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -f qcow2 /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/<span class="title">CentOS7</span>.<span class="title">qcow2</span> 10<span class="title">G</span></span></span><br></pre></td></tr></table></figure><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ll -h /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/<span class="title">CentOS7</span>.<span class="title">qcow2</span></span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">193</span>K Nov <span class="number">29</span> <span class="number">16</span>:<span class="number">36</span> /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/<span class="title">centos</span>.<span class="title">qcow2</span></span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;我们选用qcow2格式的磁盘，先创建H1虚拟机，<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -f qcow2 /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/<span class="title">H1</span>.<span class="title">qcow2</span> 10<span class="title">G</span></span></span><br></pre></td></tr></table></figure></p><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><p>&emsp;&emsp;先导入ISO光盘镜像文件,可以使用共享存储上的ISO文件，也可本机导入，本机上传的话一般习惯性放到<code>/usr/local/src/</code>目录下<br>&emsp;&emsp;使用<code>virt-install</code>命令创建虚拟机，参数可<code>virt-install --help</code>查看帮助信息<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virt-<span class="keyword">install</span> <span class="comment">--help</span></span><br></pre></td></tr></table></figure></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">usage: virt-install <span class="params">--name</span> NAME <span class="params">--ram</span> RAM STORAGE INSTALL [options]</span><br><span class="line">使用指定安装介质新建虚拟机。</span><br><span class="line">optional arguments:</span><br><span class="line">-h, <span class="params">--help</span> show this <span class="keyword">help</span> message and exit</span><br><span class="line"><span class="params">--version</span> show program's <span class="keyword">version</span> number and exit</span><br><span class="line"><span class="params">--connect</span> URI 使用 libvirt URI 连接到 hypervisor</span><br><span class="line">通用选项:</span><br><span class="line">-n NAME, <span class="params">--name</span> NAME 客户端事件名称</span><br><span class="line"><span class="params">--memory</span> MEMORY 配置虚拟机内存分配。例如：</span><br><span class="line"><span class="params">--memory</span> 1024 <span class="params">(in MiB)</span></span><br><span class="line"><span class="params">--memory</span> 512,maxmemory=1024</span><br><span class="line"><span class="params">--vcpus</span> VCPUS 为虚拟机配置的 vcpus 数。例如：</span><br><span class="line"><span class="params">--vcpus</span> 5</span><br><span class="line"><span class="params">--vcpus</span> 5,maxcpus=10,cpuset=1-4,6,8</span><br><span class="line"><span class="params">--vcpus</span> sockets=2,cores=4,threads=2,</span><br><span class="line"><span class="params">--cpu</span> CPU CPU 型号及功能。例如：</span><br><span class="line"><span class="params">--cpu</span> coreduo,+x2apic</span><br><span class="line"><span class="params">--cpu</span> host</span><br><span class="line"><span class="params">--metadata</span> METADATA 配置虚拟机元数据。例如：</span><br><span class="line"><span class="params">--metadata</span> name=foo,title=<span class="string">"My pretty title"</span>,uuid=<span class="string">...</span></span><br><span class="line"><span class="params">--metadata</span> description=<span class="string">"My nice long description"</span></span><br><span class="line">安装方法选项:</span><br><span class="line"><span class="params">--cdrom</span> CDROM 光驱安装介质</span><br><span class="line">-l LOCATION, <span class="params">--location</span> LOCATION</span><br><span class="line">安装源<span class="params">(例如：nfs:host:/path、http://host/path</span></span><br><span class="line"><span class="params">ftp://host/path)</span></span><br><span class="line"><span class="params">--pxe</span> 使用 PXE 协议从网络引导</span><br><span class="line"><span class="params">--import</span> 在磁盘映像中构建虚拟机</span><br><span class="line"><span class="params">--livecd</span> 将光驱介质视为 Live CD</span><br><span class="line">-x EXTRA_ARGS, <span class="params">--extra-args</span> EXTRA_ARGS</span><br><span class="line">附加到使用 <span class="params">--location</span> 引导的内核的参数</span><br><span class="line"><span class="params">--initrd-inject</span> INITRD_INJECT</span><br><span class="line">使用 <span class="params">--location</span> 为 initrd 的 root</span><br><span class="line">添加给定文件</span><br><span class="line"><span class="params">--os-variant</span> DISTRO_VARIANT</span><br><span class="line">在其中安装 OS 变体的虚拟机，比如</span><br><span class="line">'fedora18'、'rhel6'、'winxp' 等等。</span><br><span class="line"><span class="params">--boot</span> BOOT 配置虚拟机引导设置。例如：</span><br><span class="line"><span class="params">--boot</span> hd,cdrom,menu=on</span><br><span class="line"><span class="params">--boot</span> init=<span class="string">/sbin/init</span> <span class="params">(for containers)</span></span><br><span class="line"><span class="params">--idmap</span> IDMAP 为 LXC 容器启用用户名称空间。例如：</span><br><span class="line"><span class="params">--idmap</span> uid_start=0,uid_target=1000,uid_count=10</span><br><span class="line">设备选项:</span><br><span class="line"><span class="params">--disk</span> DISK 使用不同选项指定存储。例如：</span><br><span class="line"><span class="params">--disk</span> size=10 <span class="params">(new 10GiB image in default location)</span></span><br><span class="line"><span class="params">--disk</span> <span class="string">/my/existing/disk</span>,cache=none</span><br><span class="line"><span class="params">--disk</span> device=cdrom,bus=scsi</span><br><span class="line"><span class="params">--disk=</span>?</span><br><span class="line">-w NETWORK, <span class="params">--network</span> NETWORK</span><br><span class="line">配置虚拟机网络接口。例如：</span><br><span class="line"><span class="params">--network</span> bridge=mybr0</span><br><span class="line"><span class="params">--network</span> network=my_libvirt_virtual_net</span><br><span class="line"><span class="params">--network</span> network=mynet,model=virtio,mac=00<span class="function">:11...</span></span><br><span class="line"><span class="params">--network</span> none</span><br><span class="line"><span class="params">--network</span> <span class="keyword">help</span></span><br><span class="line"><span class="params">--graphics</span> GRAPHICS 配置虚拟机显示设置。例如：</span><br><span class="line"><span class="params">--graphics</span> vnc</span><br><span class="line"><span class="params">--graphics</span> spice,port=5901,tlsport=5902</span><br><span class="line"><span class="params">--graphics</span> none</span><br><span class="line"><span class="params">--graphics</span> vnc,password=foobar,port=5910,keymap=ja</span><br><span class="line"><span class="params">--controller</span> CONTROLLER</span><br><span class="line">配置虚拟机控制程序设备。例如：</span><br><span class="line"><span class="params">--controller</span> type=usb,model=ich9-ehci1</span><br><span class="line"><span class="params">--input</span> INPUT 配置虚拟机输入设备。例如：</span><br><span class="line"><span class="params">--input</span> tablet</span><br><span class="line"><span class="params">--input</span> keyboard,bus=usb</span><br><span class="line"><span class="params">--serial</span> SERIAL 配置虚拟机串口设备</span><br><span class="line"><span class="params">--parallel</span> PARALLEL 配置虚拟机并口设备</span><br><span class="line"><span class="params">--channel</span> CHANNEL 配置虚拟机沟通频道</span><br><span class="line"><span class="params">--console</span> CONSOLE 配置虚拟机与主机之间的文本控制台连接</span><br><span class="line"><span class="params">--hostdev</span> HOSTDEV 将物理 USB/PCI/etc</span><br><span class="line">主机设备配置为与虚拟机共享</span><br><span class="line"><span class="params">--filesystem</span> FILESYSTEM</span><br><span class="line">将主机目录传递给虚拟机。例如：</span><br><span class="line"><span class="params">--filesystem</span> <span class="string">/my/source/dir</span>,<span class="string">/dir/in/guest</span></span><br><span class="line"><span class="params">--filesystem</span> template_name,/,type=template</span><br><span class="line"><span class="params">--sound</span> [SOUND] 配置虚拟机声音设备模拟</span><br><span class="line"><span class="params">--watchdog</span> WATCHDOG 配置虚拟机 watchdog 设备</span><br><span class="line"><span class="params">--video</span> VIDEO 配置虚拟机视频硬件。</span><br><span class="line"><span class="params">--smartcard</span> SMARTCARD</span><br><span class="line">配置虚拟机智能卡设备。例如：</span><br><span class="line"><span class="params">--smartcard</span> mode=passthrough</span><br><span class="line"><span class="params">--redirdev</span> REDIRDEV 配置虚拟机重定向设备。例如：</span><br><span class="line"><span class="params">--redirdev</span> usb,type=tcp,server=192.168.1.1<span class="function">:4000</span></span><br><span class="line"><span class="params">--memballoon</span> MEMBALLOON</span><br><span class="line">配置虚拟机 memballoon 设备。例如：</span><br><span class="line"><span class="params">--memballoon</span> model=virtio</span><br><span class="line"><span class="params">--tpm</span> TPM 配置虚拟机 TPM 设备。例如：</span><br><span class="line"><span class="params">--tpm</span> <span class="string">/dev/tpm</span></span><br><span class="line"><span class="params">--rng</span> RNG 配置虚拟机 RNG 设备。例如：</span><br><span class="line"><span class="params">--rng</span> <span class="string">/dev/random</span></span><br><span class="line"><span class="params">--panic</span> PANIC 配置虚拟机 panic 设备。例如：</span><br><span class="line"><span class="params">--panic</span> default</span><br><span class="line">虚拟机配置选项:</span><br><span class="line"><span class="params">--security</span> SECURITY 设定域安全驱动器配置。</span><br><span class="line"><span class="params">--numatune</span> NUMATUNE 为域进程调整 NUMA 策略。</span><br><span class="line"><span class="params">--memtune</span> MEMTUNE 为域进程调整内粗策略。</span><br><span class="line"><span class="params">--blkiotune</span> BLKIOTUNE</span><br><span class="line">为域进程调整 blkio 策略。</span><br><span class="line"><span class="params">--memorybacking</span> MEMORYBACKING</span><br><span class="line">为域进程设置内存后备策略。例如：</span><br><span class="line"><span class="params">--memorybacking</span> hugepages=on</span><br><span class="line"><span class="params">--features</span> FEATURES 设置域 &lt;features&gt; XML。例如：</span><br><span class="line"><span class="params">--features</span> acpi=off</span><br><span class="line"><span class="params">--features</span> apic=on,eoi=on</span><br><span class="line"><span class="params">--clock</span> CLOCK 设置域 &lt;clock&gt; XML。例如：</span><br><span class="line"><span class="params">--clock</span> offset=localtime,rtc_tickpolicy=catchup</span><br><span class="line"><span class="params">--pm</span> PM 配置 VM 电源管理功能</span><br><span class="line"><span class="params">--events</span> EVENTS 配置 VM 生命周期管理策略</span><br><span class="line"><span class="params">--resource</span> RESOURCE 配置 VM 资源分区（cgroups）</span><br><span class="line">虚拟化平台选项:</span><br><span class="line">-v, <span class="params">--hvm</span> 客户端应该是一个全虚拟客户端</span><br><span class="line">-p, <span class="params">--paravirt</span> 这个客户端一个是一个半虚拟客户端</span><br><span class="line"><span class="params">--container</span> 这台虚拟机需要一个容器客户端</span><br><span class="line"><span class="params">--virt-type</span> HV_TYPE 要使用的管理程序名称<span class="params">(kvm、qemu、xen</span></span><br><span class="line"><span class="params">等等)</span></span><br><span class="line"><span class="params">--arch</span> ARCH 模拟的 CPU 构架</span><br><span class="line"><span class="params">--machine</span> MACHINE 要模拟的机器类型</span><br><span class="line">其它选项:</span><br><span class="line"><span class="params">--autostart</span> 引导主机时自动启动域。</span><br><span class="line"><span class="params">--wait</span> WAIT 等待安装完成的分钟数。</span><br><span class="line"><span class="params">--noautoconsole</span> 不要自动尝试连接到客户端控制台</span><br><span class="line"><span class="params">--noreboot</span> 完成安装后不要引导虚拟机。</span><br><span class="line"><span class="params">--print-xml</span> [XMLONLY]</span><br><span class="line">输出所生成域 XML，而不是创建虚拟机。</span><br><span class="line"><span class="params">--dry-run</span> 完成安装步骤，但不要创建设备或者定义</span><br><span class="line">虚拟机。</span><br><span class="line"><span class="params">--check</span> CHECK 启用或禁用验证检查。例如：</span><br><span class="line"><span class="params">--check</span> path_in_use=off</span><br><span class="line"><span class="params">--check</span> all=off</span><br><span class="line">-q, <span class="params">--quiet</span> 禁止无错误输出</span><br><span class="line">-d, <span class="params">--debug</span> 输入故障排除信息</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;我们使用命令创建虚拟机(网卡配置选择default的话默认是nat模式)<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">virt-install --virt-type kvm \</span><br><span class="line">-<span class="ruby">-name H1 --ram <span class="number">1024</span> --vcpus <span class="number">2</span> \</span></span><br><span class="line"><span class="ruby">--cdrom=<span class="regexp">/usr/local</span><span class="regexp">/src/</span>CentOS-<span class="number">7</span>-x86_64-Minimal-<span class="number">1908</span>.iso \</span></span><br><span class="line"><span class="ruby">--disk=<span class="regexp">/var/lib</span><span class="regexp">/libvirt/images</span><span class="regexp">/H1.qcow2 \</span></span></span><br><span class="line"><span class="ruby">--network network=default \</span></span><br><span class="line"><span class="ruby">--graphics vnc,listen=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> \</span></span><br><span class="line"><span class="ruby">--noautoconsole</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;输入<code>virt-manage</code>r可开启xshellmanager的终端窗口如下图<img src="https://img-blog.csdnimg.cn/20191129164736147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="H"><br>&emsp;&emsp;双击图标打开，可以看到已经开始自动从光盘启动安装了，配置完毕，手动安装CentOS7系统。<br>如果输入<code>virt-manage</code>不能启动xmanager的窗口，检查一下项目</p><ul><li>确认已经安装xmanager</li><li>xshell文件—属性—连接—隧道—设置转发x11到xmanager</li><li>ssh服务配置文件是否开启X11Forwarding选项 设置为yes</li></ul><p>&emsp;&emsp;以上都没问题，建议重装xmanager，我就是配置都对，但是输入<code>virt-manage</code>命令没反应，重装了一下xmanager和xshell之后就可以正常使用了。</p><p>&emsp;&emsp;安装好CentOS7系统重启后，在vrit-manager的窗口中点击虚拟机info，给H1虚拟机添加一块网卡，并将两块网卡分别选择为主机的桥接网卡br0和br1，如下图所示<br><img src="https://img-blog.csdnimg.cn/20191129173237598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="H1net"><br>&emsp;&emsp;在虚拟机中配置两个网卡的IP，配置分别如下<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">TYPE=<span class="string">"Ethernet"</span></span><br><span class="line">BOOTPROTO=<span class="string">"static"</span></span><br><span class="line">IPADDR=<span class="string">"172.18.32.85"</span></span><br><span class="line">GATEWAY=<span class="string">"172.18.0.1"</span></span><br><span class="line">DNS1=<span class="string">"180.76.76.76"</span></span><br><span class="line">DEFROUTE=<span class="string">"yes"</span></span><br><span class="line">NAME=<span class="string">"eth0"</span></span><br><span class="line">DEVICE=<span class="string">"eth0"</span></span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br></pre></td></tr></table></figure></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth1</span><br><span class="line">TYPE=<span class="string">"Ethernet"</span></span><br><span class="line">BOOTPROTO=<span class="string">"static"</span></span><br><span class="line">IPADDR=<span class="string">"10.0.0.85"</span></span><br><span class="line">DEFROUTE=<span class="string">"no"</span></span><br><span class="line">NAME=<span class="string">"eth1"</span></span><br><span class="line">DEVICE=<span class="string">"eth1"</span></span><br><span class="line">ONBOOT=<span class="string">"yes"</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;此时H1的基本配置就算完成了。<br>&emsp;&emsp;查看<code>/var/lib/libvirt/images/</code>目录下，看到已经有一个镜像了了<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>localhost ~]# ll /var/lib/libvirt/images/</span><br><span class="line">total <span class="number">1594308</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">1632632832</span> Nov <span class="number">29</span> <span class="number">18</span>:<span class="number">54</span> H1.qcow2</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;可以直接将此文件cp一份来当web1的磁盘文件<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /var/<span class="class"><span class="keyword">lib</span>/<span class="title">libvirt</span>/<span class="title">images</span>/</span></span><br><span class="line">cp H1.qcow2 W1.qcow2</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;也可以在node2节点上的H2和web2虚拟机的磁盘文件。<br>我们直接拷贝改名后，执行<code>virt-install</code>命令，创建另外三个虚拟机。<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">virt-install --virt-type kvm \</span><br><span class="line">-<span class="ruby">-name W1 --ram <span class="number">1024</span> --vcpus <span class="number">2</span> \</span></span><br><span class="line"><span class="ruby">--cdrom=<span class="regexp">/usr/local</span><span class="regexp">/src/</span>CentOS-<span class="number">7</span>-x86_64-Minimal-<span class="number">1908</span>.iso \</span></span><br><span class="line"><span class="ruby">--disk=<span class="regexp">/var/lib</span><span class="regexp">/libvirt/images</span><span class="regexp">/W1.qcow2 \</span></span></span><br><span class="line"><span class="ruby">--network network=default \</span></span><br><span class="line"><span class="ruby">--graphics vnc,listen=<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span> \</span></span><br><span class="line"><span class="ruby">--noautoconsole</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后将W1强制终止，因为第一次是默认从光驱启动的，我们已经有系统了，不需要重装，重启后就发现已经是装好的系统，与H1一模一样的。<br>&emsp;&emsp;然后修改主机名为web1，将网卡桥接在eth1上,修改网卡配置。<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">TYPE</span>=<span class="string">"Ethernet"</span></span><br><span class="line"><span class="attr">BOOTPROTO</span>=<span class="string">"static"</span></span><br><span class="line"><span class="attr">IPADDR</span>=<span class="string">"10.0.0.175"</span></span><br><span class="line"><span class="attr">PREFIX</span>=<span class="string">"16"</span></span><br><span class="line"><span class="attr">DEFROUTE</span>=<span class="string">"yes"</span></span><br><span class="line"><span class="attr">NAME</span>=<span class="string">"eth0"</span></span><br><span class="line"><span class="attr">DEVICE</span>=<span class="string">"eth0"</span></span><br><span class="line"><span class="attr">ONBOOT</span>=<span class="string">"yes"</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;对node2上的两个虚拟机采用同样方式创建。<br>&emsp;&emsp;之后分别通过脚本装HAProxy+keepadlived服务和nginx+PHP服务。<br>&emsp;&emsp;修改完几个服务的配置文件(可参考之前文章<a href="https://blog.csdn.net/MicePro/article/details/102901024" rel="noopener" target="_blank">企业级应用：负载均衡层——haproxy(一)</a>)之后，就可以将通过客户机就可以访问，后端web服务器了。</p><h2 id="附一键安装脚本"><a href="#附一键安装脚本" class="headerlink" title="附一键安装脚本"></a>附一键安装脚本</h2><h3 id="HAProxy一键安装脚本"><a href="#HAProxy一键安装脚本" class="headerlink" title="HAProxy一键安装脚本"></a>HAProxy一键安装脚本</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@HAProxy1 haproxy]</span># <span class="selector-tag">tree</span></span><br><span class="line">.</span><br><span class="line">├── <span class="selector-tag">haproxy-2</span><span class="selector-class">.0</span><span class="selector-class">.8</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">├── <span class="selector-tag">haproxy84</span><span class="selector-class">.cfg</span></span><br><span class="line">├── <span class="selector-tag">haproxy</span><span class="selector-class">.cfg</span></span><br><span class="line">├── <span class="selector-tag">haproxy</span><span class="selector-class">.service</span></span><br><span class="line">├── <span class="selector-tag">haproxy</span><span class="selector-class">.sh</span></span><br><span class="line">└── <span class="selector-tag">lua-5</span><span class="selector-class">.3</span><span class="selector-class">.5</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line"></span><br><span class="line">0 <span class="selector-tag">directories</span>, 6 <span class="selector-tag">files</span></span><br><span class="line"><span class="selector-attr">[root@HAProxy1 haproxy]</span># <span class="selector-tag">bash</span> <span class="selector-tag">haproxy</span><span class="selector-class">.sh</span></span><br></pre></td></tr></table></figure><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">DST=<span class="string">"/apps"</span></span><br><span class="line">[ -a haproxy.cfg ] || &#123; echo <span class="string">' the absence of haproxy.conf'</span> ;exit <span class="number">1</span>;&#125;</span><br><span class="line">[ -a haproxy-<span class="number">2.0</span>.<span class="number">8</span>.tar.gz ] || &#123; echo <span class="string">' the absence of haproxy-2.0.8.tar.gz'</span> ;exit <span class="number">1</span>;&#125;</span><br><span class="line">[ -a haproxy.service ] || &#123; echo <span class="string">' the absence of haproxy.service'</span> ;exit <span class="number">2</span>;&#125;</span><br><span class="line">[ -a /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">haproxy</span>.<span class="title">service</span> ] &amp;&amp; &#123; <span class="title">echo</span> ' <span class="title">haproxy</span> <span class="title">is</span> <span class="title">aready</span> <span class="title">installed</span>' ;</span>exit <span class="number">3</span>;&#125;</span><br><span class="line">id haproxy &amp;&gt;<span class="regexp">/dev/null</span> &amp;&amp; &#123; echo <span class="string">'user haproxy is exist'</span> ; exit <span class="number">4</span>;&#125; || useradd -r -s /sbin/nologin -u <span class="number">79</span> haproxy</span><br><span class="line">yum install -y libtermcap-devel ncurses-devel libevent-devel readline-devel gcc make</span><br><span class="line">[ -a lua-<span class="number">5.3</span>.<span class="number">5</span>.tar.gz ] || wget <span class="symbol">http:</span>/<span class="regexp">/www.lua.org/ftp</span><span class="regexp">/lua-5.3.5.tar.gz</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">tar xvf lua-5.3.5.tar.gz</span></span><br><span class="line"><span class="regexp">cd lua-5.3.5</span></span><br><span class="line"><span class="regexp">make linux test</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">yum install gcc gcc-c++ glibc glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel -y</span></span><br><span class="line"><span class="regexp">mkdir -p $DST/haproxy</span></span><br><span class="line"><span class="comment">#[ -a haproxy-2.0.8.tar.gz ] || wget http://www.haproxy.org/download/2.0/src/haproxy-2.0.8.tar.gz</span></span><br><span class="line">cd ..</span><br><span class="line">tar xvf haproxy-<span class="number">2.0</span>.<span class="number">8</span>.tar.gz</span><br><span class="line">sleep <span class="number">1</span></span><br><span class="line">cd haproxy-<span class="number">2.0</span>.<span class="number">8</span></span><br><span class="line"></span><br><span class="line">make ARCH=x86_64 \</span><br><span class="line">TARGET=linux-glibc USE_PCRE=<span class="number">1</span> \</span><br><span class="line">USE_OPENSSL=<span class="number">1</span> \</span><br><span class="line">USE_ZLIB=<span class="number">1</span> \</span><br><span class="line">USE_SYSTEMD=<span class="number">1</span> \</span><br><span class="line">USE_CPU_AFFINITY=<span class="number">1</span> \</span><br><span class="line">USE_LUA=<span class="number">1</span> \</span><br><span class="line">LUA_INC=../lua-<span class="number">5.3</span>.<span class="number">5</span>/src/ \</span><br><span class="line">LUA_LIB=../lua-<span class="number">5.3</span>.<span class="number">5</span>/src/ \</span><br><span class="line">PREFIX=$DST/haproxy</span><br><span class="line">make install PREFIX=$DST/haproxy</span><br><span class="line"></span><br><span class="line">cat &gt; <span class="regexp">/usr/lib</span><span class="regexp">/systemd/system</span><span class="regexp">/haproxy.service &lt;&lt; "END"</span></span><br><span class="line"><span class="regexp">[Unit]</span></span><br><span class="line"><span class="regexp">Description=HAProxy Load Balancer</span></span><br><span class="line"><span class="regexp">After=syslog.target network.target</span></span><br><span class="line"><span class="regexp">[Service]</span></span><br><span class="line"><span class="regexp">ExecStartPre=/usr</span><span class="regexp">/sbin/haproxy</span> -f /etc/haproxy/haproxy.cfg -c -q</span><br><span class="line">ExecStart=<span class="regexp">/usr/sbin</span><span class="regexp">/haproxy -Ws -f /etc</span><span class="regexp">/haproxy/haproxy</span>.cfg -p /var/<span class="class"><span class="keyword">lib</span>/<span class="title">haproxy</span>/<span class="title">haproxy</span>.<span class="title">pid</span></span></span><br><span class="line">ExecReload=<span class="regexp">/bin/kill</span> -USR2 $MAINPID</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target\</span><br><span class="line">END</span><br><span class="line">sed -i <span class="string">"s@/usr@$DST/haproxy@"</span> /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">haproxy</span>.<span class="title">service</span></span></span><br><span class="line"></span><br><span class="line">mkdir -p /etc/haproxy</span><br><span class="line">cd ..</span><br><span class="line">cp haproxy.cfg /etc/haproxy/</span><br><span class="line">sed -i <span class="string">"s@chroot /apps/haproxy@chroot $DST/haproxy@"</span> /etc/haproxy/haproxy.cfg</span><br><span class="line">mkdir -p /var/<span class="class"><span class="keyword">lib</span>/<span class="title">haproxy</span></span></span><br><span class="line">chown <span class="number">99.99</span> /var/<span class="class"><span class="keyword">lib</span>/<span class="title">haproxy</span>/ -<span class="title">R</span></span></span><br><span class="line"></span><br><span class="line">cat &gt;&gt; <span class="regexp">/etc/sysctl</span>.conf &lt;&lt; END</span><br><span class="line">net.ipv4.ip_forward = <span class="number">1</span></span><br><span class="line">net.ipv4.ip_nonlocal_bind = <span class="number">1</span></span><br><span class="line">END</span><br><span class="line">sysctl -p <span class="comment">#修改内核参数之后生效，systemctl daemon-reload 是重读启动脚本</span></span><br><span class="line"></span><br><span class="line">systemctl enable --now haproxy</span><br><span class="line">systemctl status haproxy</span><br></pre></td></tr></table></figure><h3 id="Nginx-PHP一键安装脚本"><a href="#Nginx-PHP一键安装脚本" class="headerlink" title="Nginx+PHP一键安装脚本"></a>Nginx+PHP一键安装脚本</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@Web1 web]</span># <span class="selector-tag">tree</span></span><br><span class="line">.</span><br><span class="line">├── <span class="selector-tag">nginx</span></span><br><span class="line">│   ├── <span class="selector-tag">nginx-1</span><span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">│   ├── <span class="selector-tag">nginx</span><span class="selector-class">.conf</span></span><br><span class="line">│   ├── <span class="selector-tag">nginx</span><span class="selector-class">.service</span></span><br><span class="line">│   └── <span class="selector-tag">nginx</span><span class="selector-class">.sh</span></span><br><span class="line">├── <span class="selector-tag">php-fpm</span></span><br><span class="line">│   ├── <span class="selector-tag">php-7</span><span class="selector-class">.3</span><span class="selector-class">.10</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line">│   └── <span class="selector-tag">php-fpm</span><span class="selector-class">.sh</span></span><br><span class="line">└── <span class="selector-tag">web</span><span class="selector-class">.sh</span></span><br><span class="line"></span><br><span class="line">2 <span class="selector-tag">directories</span>, 7 <span class="selector-tag">files</span></span><br><span class="line"><span class="selector-attr">[root@Web1 web]</span># <span class="selector-tag">bash</span> <span class="selector-tag">web</span><span class="selector-class">.sh</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim web.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> nginx</span><br><span class="line">bash nginx.sh</span><br><span class="line"><span class="built_in">cd</span> ../php-fpm</span><br><span class="line">bash php-fpm.sh</span><br></pre></td></tr></table></figure><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vim nginx/nginx.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">DST=<span class="string">"/apps"</span></span><br><span class="line">[ -a nginx.conf ] || &#123; echo <span class="string">' the absence of nginx.conf'</span> ;exit <span class="number">1</span>;&#125;</span><br><span class="line">[ -a nginx.service ] || &#123; echo <span class="string">' the absence of nginx.service'</span> ;exit <span class="number">2</span>;&#125;</span><br><span class="line">[ -a /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">nginx</span>.<span class="title">service</span> ] &amp;&amp; &#123; <span class="title">echo</span> ' <span class="title">nginx</span> <span class="title">is</span> <span class="title">aready</span> <span class="title">installed</span>' ;</span>exit <span class="number">3</span>;&#125;</span><br><span class="line">id nginx &amp;&gt;<span class="regexp">/dev/null</span> &amp;&amp; &#123; echo <span class="string">'user nginx is exist'</span> ; exit <span class="number">4</span>;&#125; || useradd -r -s /sbin/nologin -u <span class="number">80</span> nginx</span><br><span class="line">yum install -y gcc gcc-c++ glibc glibc-devel pcre pcre-devel openssl openssl-devel systemd-devel net-tools iotop bc zip unzip zlib-devel bash-completion nfs-utils automake libxml2 libxml2-devel libxslt libxslt-devel perl perl-ExtUtils-Embed   vim lrzsz tree psmisc wget || &#123; echo <span class="string">'Dependencies is not installed'</span>;exit <span class="number">5</span>;&#125;</span><br><span class="line"><span class="comment">#mkdir -p $DST/nginx</span></span><br><span class="line">mkdir -p /data/apps/nginx</span><br><span class="line">ln -s /data/apps/  <span class="regexp">/apps</span></span><br><span class="line"><span class="regexp">[ -a nginx-1.16.1.tar.gz ] || wget https:/</span><span class="regexp">/nginx.org/download</span><span class="regexp">/nginx-1.16.1.tar.gz</span></span><br><span class="line"><span class="regexp">tar xvf nginx-1.16.1.tar.gz</span></span><br><span class="line"><span class="regexp">cd nginx-1.16.1</span></span><br><span class="line"><span class="regexp">./configure</span> --prefix=$DST/nginx --user=nginx --group=nginx --<span class="keyword">with</span>-http_ssl_module --<span class="keyword">with</span>-http_v2_module --<span class="keyword">with</span>-http_realip_module --<span class="keyword">with</span>-http_stub_status_module --<span class="keyword">with</span>-http_gzip_static_module --<span class="keyword">with</span>-pcre --<span class="keyword">with</span>-stream --<span class="keyword">with</span>-stream_ssl_module --<span class="keyword">with</span>-stream_realip_module --<span class="keyword">with</span>-select_module --<span class="keyword">with</span>-file-aio</span><br><span class="line">make -j <span class="number">4</span> &amp;&amp; make install</span><br><span class="line">cp ../nginx.conf $DST/nginx/conf/</span><br><span class="line">cp ../nginx.service /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/</span></span><br><span class="line">systemctl enable --now nginx</span><br><span class="line">systemctl status nginx</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vim nginx/nginx.service</span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=The nginx HTTP <span class="keyword">and</span> reverse<span class="built_in"> proxy </span>server</span><br><span class="line"><span class="attribute">After</span>=network.target remote-fs.target nss-lookup.target</span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">Type</span>=forking</span><br><span class="line"><span class="attribute">PIDFile</span>=/apps/nginx/logs/nginx.pid</span><br><span class="line"><span class="comment"># Nginx will fail to start if /run/nginx.pid already exists but has the wrong</span></span><br><span class="line"><span class="comment"># SELinux context. This might happen when running `nginx -t` from the cmdline.</span></span><br><span class="line"><span class="comment"># https://bugzilla.redhat.com/show_bug.cgi?id=1268621</span></span><br><span class="line"><span class="attribute">ExecStartPre</span>=/usr/bin/rm -f /apps/nginx/logs/nginx.pid</span><br><span class="line"><span class="attribute">ExecStartPre</span>=/apps/nginx/sbin/nginx -t</span><br><span class="line"><span class="attribute">ExecStart</span>=/apps/nginx/sbin/nginx</span><br><span class="line"><span class="attribute">ExecReload</span>=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attribute">KillSignal</span>=SIGQUIT</span><br><span class="line"><span class="attribute">TimeoutStopSec</span>=5</span><br><span class="line"><span class="attribute">KillMode</span>=process</span><br><span class="line"><span class="attribute">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vim</span> nginx/nginx.conf</span><br><span class="line">user  nginx;</span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">2</span>;</span><br><span class="line"><span class="attribute">worker_cpu_affinity</span> <span class="number">0001</span> <span class="number">0010</span>;</span><br><span class="line"><span class="attribute">worker_priority</span> -<span class="number">10</span>;</span><br><span class="line"><span class="attribute">error_log</span>  logs/error.log  <span class="literal">info</span>;</span><br><span class="line"><span class="attribute">error_log</span>  /apps/nginx/logs/error.log  <span class="literal">error</span>;</span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">65536</span>;</span><br><span class="line">    <span class="attribute">use</span> <span class="literal">epoll</span>;</span><br><span class="line">    <span class="attribute">accept_mutex</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">multi_accept</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line">    <span class="attribute">log_format</span> access_json <span class="string">'&#123;"<span class="variable">@timestamp</span>":"<span class="variable">$time_iso8601</span>",'</span></span><br><span class="line">        <span class="string">'"host":"<span class="variable">$server_addr</span>",'</span></span><br><span class="line">        <span class="string">'"clientip":"<span class="variable">$remote_addr</span>",'</span></span><br><span class="line">        <span class="string">'"size":<span class="variable">$body_bytes_sent</span>,'</span></span><br><span class="line">        <span class="string">'"responsetime":<span class="variable">$request_time</span>,'</span></span><br><span class="line">        <span class="string">'"upstreamtime":"<span class="variable">$upstream_response_time</span>",'</span></span><br><span class="line">        <span class="string">'"upstreamhost":"<span class="variable">$upstream_addr</span>",'</span></span><br><span class="line">        <span class="string">'"http_host":"<span class="variable">$host</span>",'</span></span><br><span class="line">        <span class="string">'"uri":"<span class="variable">$uri</span>",'</span></span><br><span class="line">        <span class="string">'"domain":"<span class="variable">$host</span>",'</span></span><br><span class="line">        <span class="string">'"xff":"<span class="variable">$http_x_forwarded_for</span>",'</span></span><br><span class="line">        <span class="string">'"referer":"<span class="variable">$http_referer</span>",'</span></span><br><span class="line">        <span class="string">'"tcp_xff":"<span class="variable">$proxy_protocol_addr</span>",'</span></span><br><span class="line">        <span class="string">'"http_user_agent":"<span class="variable">$http_user_agent</span>",'</span></span><br><span class="line">        <span class="string">'"status":"<span class="variable">$status</span>"&#125;'</span>;</span><br><span class="line">    <span class="attribute">access_log</span>  /apps/nginx/logs/access_json.log  access_json;</span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span> <span class="number">65</span>;</span><br><span class="line">    <span class="attribute">server_tokens</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">charset</span> utf-<span class="number">8</span>;</span><br><span class="line">    <span class="attribute">gzip</span>  <span class="literal">on</span>;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  www.example.net;</span><br><span class="line">        <span class="attribute">location</span> = / &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">            <span class="attribute">index</span>  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ ^/(status|ping)$</span> &#123;</span><br><span class="line">             <span class="attribute">include</span> fastcgi_params;</span><br><span class="line">             <span class="attribute">fastcgi_pass</span> <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">             <span class="attribute">fastcgi_param</span> PATH_TRANSLATED <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">             <span class="attribute">fastcgi_hide_header</span> X-Powered-By;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">            <span class="attribute">root</span>           html;</span><br><span class="line">            <span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">            <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">            <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">vim php-fpm/php-fpm.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DST=<span class="string">"/apps"</span></span><br><span class="line">[ -a php-*.tar.* ] || &#123; <span class="built_in">echo</span> <span class="string">' the absence of php-7.3.10.tar.xz'</span> ;<span class="built_in">exit</span> 1;&#125;</span><br><span class="line">[ -a /usr/lib/systemd/system/php-fpm.service ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">' php-fpm is aready installed'</span> ;<span class="built_in">exit</span> 2;&#125;</span><br><span class="line">[ -a <span class="variable">$DST</span>/php* ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">' php is aready installed'</span> ;<span class="built_in">exit</span> 2;&#125;</span><br><span class="line">mkdir -p <span class="variable">$DST</span>/php</span><br><span class="line">yum install libxml2-devel bzip2-devel libmcrypt-devel -y || &#123; <span class="built_in">echo</span> <span class="string">'Dependencies is not installed'</span>;<span class="built_in">exit</span> 5;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#wget https://www.php.net/distributions/php-7.3.10.tar.xz</span></span><br><span class="line">tar xvf php-*.tar.*</span><br><span class="line"><span class="built_in">cd</span> php-7.3.10</span><br><span class="line"></span><br><span class="line">./configure \</span><br><span class="line">--prefix=<span class="variable">$DST</span>/php \</span><br><span class="line">--<span class="built_in">enable</span>-mysqlnd \</span><br><span class="line">--with-mysqli=mysqlnd \</span><br><span class="line">--with-pdo-mysql=mysqlnd \</span><br><span class="line">--with-openssl \</span><br><span class="line">--with-freetype-dir \</span><br><span class="line">--with-jpeg-dir \</span><br><span class="line">--with-png-dir \</span><br><span class="line">--with-zlib \</span><br><span class="line">--with-libxml-dir=/usr \</span><br><span class="line">--with-config-file-path=/etc \</span><br><span class="line">--with-config-file-scan-dir=/etc/php.d \</span><br><span class="line">--<span class="built_in">enable</span>-mbstring \</span><br><span class="line">--<span class="built_in">enable</span>-xml \</span><br><span class="line">--<span class="built_in">enable</span>-sockets \</span><br><span class="line">--<span class="built_in">enable</span>-fpm \</span><br><span class="line">--<span class="built_in">enable</span>-maintainer-zts \</span><br><span class="line">--<span class="built_in">disable</span>-fileinfo</span><br><span class="line"></span><br><span class="line"> make -j 4 &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">cp php.ini-production  /etc/php.ini</span><br><span class="line">cp sapi/fpm/php-fpm.service /usr/lib/systemd/system/</span><br><span class="line"></span><br><span class="line">cp <span class="variable">$DST</span>/php/etc/php-fpm.conf.default  <span class="variable">$DST</span>/php/etc/php-fpm.conf</span><br><span class="line">cp <span class="variable">$DST</span>/php/etc/php-fpm.d/www.conf.default <span class="variable">$DST</span>/php/etc/php-fpm.d/www.conf</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">'s@nobody@nginx@g'</span> <span class="variable">$DST</span>/php/etc/php-fpm.d/www.conf</span><br><span class="line">sed -i <span class="string">'/#/!s@index  index.html index.htm@index index.php index.html index.htm@'</span> <span class="variable">$DST</span>/nginx/conf/nginx.conf</span><br><span class="line">sed -i <span class="string">'s@/scripts$fastcgi_script_name@$document_root$fastcgi_script_name@g'</span> <span class="variable">$DST</span>/nginx/conf/nginx.conf</span><br><span class="line"><span class="variable">$DST</span>/nginx/sbin/nginx -s reload</span><br><span class="line">systemctl <span class="built_in">enable</span> --now php-fpm</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;KVM 是Kernel-based Virtual Machine的简称，是一个开源的系统虚拟化模块，自Linux 2.6.20之后集成在Linux的各个主要发行版本中，KVM目前已成为学术界的主流 VMM (virtual machine monitor，虚拟机监视器，也称为hypervisor)之一。&lt;br&gt;
    
    </summary>
    
      <category term="Cloud" scheme="https://hewanyue.com/categories/Cloud/"/>
    
    
      <category term="一键安装" scheme="https://hewanyue.com/tags/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85/"/>
    
      <category term="负载均衡" scheme="https://hewanyue.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
      <category term="虚拟化" scheme="https://hewanyue.com/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="KVM" scheme="https://hewanyue.com/tags/KVM/"/>
    
      <category term="ubuntu" scheme="https://hewanyue.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>OpenVPN的搭建</title>
    <link href="https://hewanyue.com//blog/2c6b894f.html"/>
    <id>https://hewanyue.com//blog/2c6b894f.html</id>
    <published>2019-11-25T13:05:48.000Z</published>
    <updated>2019-11-27T06:16:28.082Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;企业中，必不可少的应用就是VPN了，它可以帮助员工在外网中访问公司内网，常见开源实现方案有OpenVPN和jumpserver。<br>&emsp;&emsp;OpenVPN是采用了端口转发的原理实现，是基于IP+端口的4层代理机制，一般是用于出差员工访问公司内部ERP系统等使用，而jumpserver是7层代理，所以功能更加强大却也更加复杂，一般适合运维人员管理维护企业内部服务器。对于中小公司日常使用，OpenVPN就已经完全足够了，当然，也可用于科学，你懂得。本文将对linux环境下（CentOS），OpenVPN的安装配置做一个详细的介绍。<br><a id="more"></a></p><h1 id="部署OpenVPN"><a href="#部署OpenVPN" class="headerlink" title="部署OpenVPN"></a>部署OpenVPN</h1><h2 id="部署OpenVPN服务器"><a href="#部署OpenVPN服务器" class="headerlink" title="部署OpenVPN服务器"></a>部署OpenVPN服务器</h2><h3 id="下载安装OpenVPN"><a href="#下载安装OpenVPN" class="headerlink" title="下载安装OpenVPN"></a>下载安装OpenVPN</h3><p>&emsp;&emsp;OpenVPN的rpm包可以在epel源中直接下载安装，所以我们需要先配置epel源，推荐选用阿里的epel源，<code>CentOS67</code>命令如下：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/aliyunepel.repo &lt;&lt; <span class="string">"END"</span></span><br><span class="line">[aliyun-epel]</span><br><span class="line">name=aliyun-epel</span><br><span class="line">baseurl=https://mirrors.aliyun.com/epel/$releasever/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-$releasever</span><br><span class="line">enabled=1</span><br><span class="line">END</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<code>CentOS8</code>路径有所变化，命令如下：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/aliyunepel.repo &lt;&lt; <span class="string">"END"</span></span><br><span class="line">[aliyun-epel]</span><br><span class="line">name=aliyun-epel</span><br><span class="line">baseurl=https://mirrors.aliyun.com/epel/$releasever/Everything/$basearch/</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-$releasever</span><br><span class="line">enabled=1</span><br><span class="line">END</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;或者直接安装官方的epel源(6、7、8通用）。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span> -y</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;配置好epel源之后，直接yum安装服务器端软件和证书管理工具就可以了。<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> openvpn -y <span class="comment">#openvpn服务端</span></span><br><span class="line">yum <span class="keyword">install</span> easy-rsa -y <span class="comment">#证书管理工具</span></span><br></pre></td></tr></table></figure></p><h3 id="OpenVPN配置"><a href="#OpenVPN配置" class="headerlink" title="OpenVPN配置"></a>OpenVPN配置</h3><p>&emsp;&emsp;将模版配置文件及证书管理工具复制到指定目录<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/doc/</span>openvpn<span class="number">-2.4</span><span class="number">.8</span><span class="meta-keyword">/sample/</span>sample-config-files/server.conf <span class="meta-keyword">/etc/</span>openvpn/  <span class="meta">#openvpn server 配置文件</span></span><br><span class="line">cp -r <span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/easy-rsa/</span> <span class="meta-keyword">/etc/</span>openvpn/easyrsa-server <span class="meta">#证书管理工具</span></span><br><span class="line">cp <span class="meta-keyword">/usr/</span>share<span class="meta-keyword">/doc/</span>easy-rsa<span class="number">-3.0</span><span class="number">.6</span>/vars.example <span class="meta-keyword">/etc/</span>openvpn<span class="meta-keyword">/easyrsa-server/</span><span class="number">3</span>/vars</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;配置文件模版如果没有，那可能是在路径为<code>/usr/share/doc/openvpn/sample/sample-config-files/server.conf</code>，easy-rsa如果CentOS8yum安装不上，只能去github上<code>https://github.com/OpenVPN/easy-rsa</code>下载，将里面的easyrsa3目录复制出来就是证书管理工具,并且不需要复制<code>vars.example</code>文件，里面已经有了,改个名字就可以。<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> -r easyrsa3 /etc/openvpn/easyrsa-server</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;先进入证书管理工具目录（若github上下载的则是<code>cd /etc/openvpn/easyrsa-server/</code>，之后则都没有3的子目录，或者也创建一个3的子目录保持一致性）<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/etc/</span>openvpn<span class="regexp">/easyrsa-server/</span><span class="number">3</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;若easyrsa为github下载的话，目录结果如下<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@aws-host easyrsa-server]#tree</span><br><span class="line">.</span><br><span class="line">├── easyrsa</span><br><span class="line">├── openssl-easyrsa.cnf</span><br><span class="line">├── vars.example</span><br><span class="line">└── x509-types</span><br><span class="line">    ├── ca</span><br><span class="line">    ├── client</span><br><span class="line">    ├── code-signing</span><br><span class="line">    ├── COMMON</span><br><span class="line">    ├── email</span><br><span class="line">    ├── server</span><br><span class="line">    └── serverClient</span><br><span class="line"></span><br><span class="line">1 directory, 10 files</span><br><span class="line">[root@aws-host easyrsa-server]#</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;OpenVPN的server端配置文件如下：<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/openvpn/server.conf</span><br><span class="line">local <span class="number">172.18</span><span class="number">.200</span><span class="number">.101</span> #本机监听IP,写公网IP</span><br><span class="line">port <span class="number">1194</span> #端口</span><br><span class="line"># TCP or UDP server?</span><br><span class="line">proto tcp #协议，指定OpenVPN创建的通信隧道类型</span><br><span class="line">#proto udp</span><br><span class="line">#dev tap：创建一个以太网隧道，以太网使用tap</span><br><span class="line">dev tun：创建一个路由IP隧道，互联网使用tun一个TUN设备大多时候，被用于基于IP协议的通讯。一个TAP设备允许完整的以太网帧通过Openvpn隧道，因此提供非ip协议的支持，比如IPX协议和AppleTalk协议</span><br><span class="line">#dev-node MyTap #TAP-Win32适配器。非windows不需要</span><br><span class="line">#topology subnet #网络拓扑，不需要配置</span><br><span class="line">server <span class="number">10.8</span><span class="number">.0</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> #客户端连接后分配IP的地址池，服务器默认会占用第一个IP <span class="number">10.8</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">#ifconfig-pool-persist ipp.txt #为客户端分配固定IP，不需要配置</span><br><span class="line">#server-bridge <span class="number">10.8</span><span class="number">.0</span><span class="number">.4</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> <span class="number">10.8</span><span class="number">.0</span><span class="number">.50</span> <span class="number">10.8</span><span class="number">.0</span><span class="number">.100</span> #配置网桥模式，不需要</span><br><span class="line">push <span class="string">"route 10.20.0.0 255.255.0.0"</span> #给客户端生成的静态路由表，下一跳为openvpn服务器的<span class="number">10.8</span><span class="number">.0</span><span class="number">.1</span>,地址段为openvpn服务器后的公司内部网络，可以是多个网段</span><br><span class="line">push <span class="string">"route 172.31.0.0 255.255.248.0"</span></span><br><span class="line">;client-config-dir ccd #为指定的客户端添加路由，改路由通常是客户端后面的内网网段而不是服务端的，也不需要设置</span><br><span class="line">;route <span class="number">192.168</span><span class="number">.40</span><span class="number">.128</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.248</span></span><br><span class="line">;client-config-dir ccd</span><br><span class="line">;route <span class="number">10.9</span><span class="number">.0</span><span class="number">.0</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.252</span></span><br><span class="line">;learn-address ./script #运行外部脚本，创建不同组的iptables 规则，不配置</span><br><span class="line">;push <span class="string">"redirect-gateway def1 bypass-dhcp"</span> #启用后，客户端所有流量都将通过VPN服务器，因此不需要配置</span><br><span class="line">#;push <span class="string">"dhcp-option DNS 208.67.222.222"</span> #推送DNS服务器，不需要配置</span><br><span class="line">#;push <span class="string">"dhcp-option DNS 208.67.220.220"</span></span><br><span class="line">#client-to-client #允许不同的client通过openvpn server直接通信，不开启</span><br><span class="line">#;duplicate-cn #多个用户共用一个账户，一般用于测试环境，生产环境都是一个用户一个证书</span><br><span class="line">keepalive <span class="number">10</span> <span class="number">120</span> #设置服务端检测的间隔和超时时间，默认为每 <span class="number">10</span> 秒 ping一次，如果 <span class="number">120</span> 秒没有回应则认为对方已经 down</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;所以最终配置如下<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">local 172.18.32.71    #写公网IP，测试环境无所谓</span><br><span class="line">port 1194</span><br><span class="line">proto tcp</span><br><span class="line">dev tun</span><br><span class="line">ca /etc/openvpn/certs/ca.crt</span><br><span class="line">cert /etc/openvpn/certs/server.crt</span><br><span class="line">key /etc/openvpn/certs/server.key  # This file should be kept secret</span><br><span class="line">dh /etc/openvpn/certs/dh.pem</span><br><span class="line">server 10.8.0.0 255.255.255.0   #默认设置，不需要修改</span><br><span class="line">push <span class="string">"route 10.0.0.0 255.255.255.0"</span>    #内网网段，需要修改，科学上网，则推送路由 <span class="string">"route 0.0.0.0"</span></span><br><span class="line">client-to-client</span><br><span class="line">keepalive 10 120</span><br><span class="line">cipher AES-256-CBC</span><br><span class="line">max-clients 100</span><br><span class="line">user nobody</span><br><span class="line">group nobody</span><br><span class="line">persist-tun</span><br><span class="line">status openvpn-status.log</span><br><span class="line">log-append  /var/log/openvpn/openvpn.log</span><br><span class="line">verb 9</span><br><span class="line">mute 20</span><br></pre></td></tr></table></figure></p><h3 id="搭建CA并签发证书"><a href="#搭建CA并签发证书" class="headerlink" title="搭建CA并签发证书"></a>搭建CA并签发证书</h3><p>&emsp;&emsp;初始化pki环境<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./easyrsa</span> init-pki <span class="comment">#生成pki目录用于保存证书</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;创建CA签发机构，然后<code>直接回车</code><br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./easyrsa <span class="keyword">build-ca </span><span class="keyword">nopass </span>#创建ca并不使用密码</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;创建服务端证书(私钥)，<code>直接回车</code><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./easyrsa gen-req<span class="built_in"> server </span>nopass #生成server证书且不使用密码</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后使用自建ca签发服务器证书，即生成服务端crt公钥。crt公钥后期将用户发送给客户端，从而实现与openvpnserver端加密传输数据。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./easyrsa sign<span class="built_in"> server server </span>#签发服务端证书，备注信息为server</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后输入<code>yes</code>输入。</p><h3 id="创建非对称秘钥对"><a href="#创建非对称秘钥对" class="headerlink" title="创建非对称秘钥对"></a>创建非对称秘钥对</h3><p>&emsp;&emsp;还在easyrsa-server目录下，生成秘钥，这可能会花费一段时间。<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./easyrsa</span> gen-dh</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;到此服务端证书环境配置完成，下面是配置客户端证书配置</p><h3 id="创建客户端证书及配置文件"><a href="#创建客户端证书及配置文件" class="headerlink" title="创建客户端证书及配置文件"></a>创建客户端证书及配置文件</h3><p>&emsp;&emsp;证书还是使用easyrsa工具，（github下载的也还是那个目录<code>easyrsa3</code>，不需要复制<code>vars.example</code>文件,改个名字就可以）<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -r <span class="regexp">/usr/</span>share<span class="regexp">/easy-rsa/</span> <span class="regexp">/etc/</span>openvpn<span class="regexp">/easyrsa-client/</span></span><br><span class="line">cp <span class="regexp">/usr/</span>share<span class="regexp">/doc/</span>easy-rsa-<span class="number">3.0</span>.<span class="number">6</span><span class="regexp">/vars.example /</span>etc<span class="regexp">/openvpn/</span>easyrsa-client<span class="regexp">/3/</span>vars</span><br></pre></td></tr></table></figure></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/etc/openvpn/easyrsa-client/3</span></span><br><span class="line"><span class="string">./easyrsa</span> init-pki</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;例如员工为Mice，则创建名为Mice的证书<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./easyrsa</span> gen-req Mice nopass <span class="comment">#客户证书为Mice，没有设置密码</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后<code>直接回车</code>，便生成了Mice的证书申请和私钥。<strong>进入easyrsa的server目录中</strong>，(注意，<code>一定要进入easyrsa-server目录</code>，否则会报错)，导入证书申请并给客户端的证书请求签发证书,记得输入<code>yes</code>确认。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./easyrsa import-req /etc/openvpn/easyrsa-client/3/pki/reqs/Mice.req Mice</span><br><span class="line">./easyrsa sign<span class="built_in"> client </span>Mice</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;复制证书到server目录：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="regexp">/etc/</span>openvpn/certs</span><br><span class="line">cd <span class="regexp">/etc/</span>openvpn<span class="regexp">/certs/</span></span><br><span class="line">cp <span class="regexp">/etc/</span>openvpn<span class="regexp">/easyrsa-server/</span><span class="number">3</span><span class="regexp">/pki/</span>dh.pem .</span><br><span class="line">cp <span class="regexp">/etc/</span>openvpn<span class="regexp">/easyrsa-server/</span><span class="number">3</span><span class="regexp">/pki/</span>ca.crt .</span><br><span class="line">cp <span class="regexp">/etc/</span>openvpn<span class="regexp">/easyrsa-server/</span><span class="number">3</span><span class="regexp">/pki/</span>issued/server.crt .</span><br><span class="line">cp <span class="regexp">/etc/</span>openvpn<span class="regexp">/easyrsa-server/</span><span class="number">3</span><span class="regexp">/pki/</span><span class="keyword">private</span>/server.key .</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;创建客户端配置文件<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="meta-keyword">/etc/</span>openvpn<span class="meta-keyword">/client/</span>Mice/</span><br><span class="line">vim <span class="meta-keyword">/etc/</span>openvpn<span class="meta-keyword">/client/</span>Mice/client.ovpn</span><br></pre></td></tr></table></figure></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">client #声明自己是个客户端</span><br><span class="line">dev tun #接口类型，必须和服务端保持一致</span><br><span class="line">proto tcp #使用的协议，必须和服务端保持一致</span><br><span class="line">remote <span class="number">172.18</span><span class="number">.32</span><span class="number">.71</span> <span class="number">1194</span> #server端的ip和端口，可以写域名但是需要可以解析成IP</span><br><span class="line">resolv-retry infinite #如果是写的server端的域名，那么就始终解析，如果域名发生变化，会重新连接到新&gt;的域名对应的IP</span><br><span class="line">nobind #本机不绑定监听端口，客户端是随机打开端口连接到服务端的<span class="number">1194</span></span><br><span class="line">persist-<span class="type">key</span> #</span><br><span class="line">persist-tun</span><br><span class="line">ca ca.crt</span><br><span class="line">cert Mice.crt</span><br><span class="line"><span class="type">key</span> Mice.<span class="type">key</span></span><br><span class="line">remote-cert-tls server #指定采用服务器校验方式</span><br><span class="line">#tls-auth ta.<span class="type">key</span> <span class="number">1</span></span><br><span class="line">cipher AES<span class="number">-256</span>-CBC</span><br><span class="line">verb <span class="number">3</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;对签发的客户端证书及配置文件进行归档,并打包发送给客户端主机。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/etc/</span>openvpn<span class="regexp">/client/</span>Mice/</span><br><span class="line">cp <span class="regexp">/etc/</span>openvpn<span class="regexp">/easyrsa-server/</span><span class="number">3</span><span class="regexp">/pki/</span>ca.crt .</span><br><span class="line">cp <span class="regexp">/etc/</span>openvpn<span class="regexp">/easyrsa-server/</span><span class="number">3</span><span class="regexp">/pki/</span>issued/Mice.crt .</span><br><span class="line">cp <span class="regexp">/etc/</span>openvpn<span class="regexp">/easyrsa-client/</span><span class="number">3</span><span class="regexp">/pki/</span><span class="keyword">private</span>/Mice.key .</span><br><span class="line">tar czvf  Mice.tar.gz *</span><br></pre></td></tr></table></figure></p><h3 id="配置防火墙转发规则"><a href="#配置防火墙转发规则" class="headerlink" title="配置防火墙转发规则"></a>配置防火墙转发规则</h3><p>&emsp;&emsp;开启路由转发功能：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/sysctl.conf</span></span><br><span class="line"><span class="comment"># sysctl -p</span></span><br><span class="line"><span class="attr">net.ipv4.ip_forward</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;先清除现有防火墙策略以免发生干扰，如果CentOS7/8或Redhat7/8没有iptables命令就<code>yum install -y iptables-services</code>安装一个，之后设置IP伪装需要用到。<br>&emsp;&emsp;清空已有规则<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br><span class="line">iptables -t<span class="built_in"> nat </span>-F</span><br><span class="line">iptables -t<span class="built_in"> nat </span>-X</span><br><span class="line">iptables -t<span class="built_in"> nat </span>-Z</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;创建iptables 规则：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -t<span class="built_in"> nat </span>-A POSTROUTING -s 10.8.0.0/24 -j MASQUERADE #此IP是server端默认ip，不要改</span><br><span class="line">iptables -A INPUT -p TCP --dport 1194 -j ACCEPT</span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;CentOS6/7的话可以用保存iptables规则（适用未安装iptables-services，俩方式选一个就好）:<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">service iptables save</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;显示OK说明保存成功<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables: Saving<span class="built_in"> firewall </span>rules <span class="keyword">to</span> /etc/sysconfig/iptables:[ OK ]</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;如果用的services，则<code>systemctl enable --now iptables</code>（会自动从/etc/sysconfig/iptables文件中读取防火墙策略）</p><p>&emsp;&emsp;创建日志目录并授权：<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /<span class="built_in">var</span>/<span class="built_in">log</span>/openvpn</span><br><span class="line">chown nobody.nobody /<span class="built_in">var</span>/<span class="built_in">log</span>/openvpn</span><br></pre></td></tr></table></figure></p><h3 id="启动OpenVPN服务"><a href="#启动OpenVPN服务" class="headerlink" title="启动OpenVPN服务"></a>启动OpenVPN服务</h3><p>&emsp;&emsp;启动openvpn服务<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">systemctl</span> enable --now openvpn<span class="variable">@server</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;如果没有<a href="mailto:openvpn@server.service" rel="noopener" target="_blank">openvpn@server.service</a>文件，那就自己编写一个吧<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">openvpn</span>@.<span class="title">service</span></span></span><br></pre></td></tr></table></figure></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=OpenVPN Robust And Highly Flexible Tunneling Application <span class="literal">On</span> %I</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=notify</span><br><span class="line"><span class="attr">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">ExecStart</span>=/usr/sbin/openvpn --cd /etc/openvpn/ --config %i.conf</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;验证日志：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">tail /var/log/openvpn/openvpn.log</span><br><span class="line">Tue Nov <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">27</span> <span class="number">2019</span> Socket Buffers: R=[<span class="number">87380</span>-&gt;<span class="number">87380</span>] S=[<span class="number">16384</span>-&gt;<span class="number">16384</span>]</span><br><span class="line">Tue Nov <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">27</span> <span class="number">2019</span> Listening <span class="keyword">for</span> incoming TCP connection on</span><br><span class="line">[AF_INET]<span class="number">172.18</span><span class="number">.32</span><span class="number">.71</span>:<span class="number">1194</span></span><br><span class="line">Tue Nov <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">27</span> <span class="number">2019</span> TCPv4_SERVER link local (bound):</span><br><span class="line">[AF_INET]<span class="number">172.18</span><span class="number">.32</span><span class="number">.71</span>:<span class="number">1194</span></span><br><span class="line">Tue Nov <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">27</span> <span class="number">2019</span> TCPv4_SERVER link remote: [AF_UNSPEC]</span><br><span class="line">Tue Nov <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">27</span> <span class="number">2019</span> GID <span class="keyword">set</span> to root</span><br><span class="line">Tue Nov <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">27</span> <span class="number">2019</span> UID <span class="keyword">set</span> to root</span><br><span class="line">Tue Nov <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">27</span> <span class="number">2019</span> MULTI: multi_init called, r=<span class="number">256</span> v=<span class="number">256</span></span><br><span class="line">Tue Nov <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">27</span> <span class="number">2019</span> IFCONFIG POOL: base=<span class="number">10.8</span><span class="number">.0</span><span class="number">.4</span> size=<span class="number">62</span>, ipv6=<span class="number">0</span></span><br><span class="line">Tue Nov <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">27</span> <span class="number">2019</span> MULTI: TCP INIT maxclients=<span class="number">4096</span> maxevents=<span class="number">4100</span></span><br><span class="line">Tue Nov <span class="number">19</span> <span class="number">13</span>:<span class="number">27</span>:<span class="number">27</span> <span class="number">2019</span> Initialization Sequence Completed</span><br></pre></td></tr></table></figure></p><h2 id="OpenVPN客户端"><a href="#OpenVPN客户端" class="headerlink" title="OpenVPN客户端"></a>OpenVPN客户端</h2><p>&emsp;&emsp;官方客户端下载地址： <a href="https://openvpn.net/community-downloads/" rel="noopener" target="_blank">https://openvpn.net/community-downloads/</a><br>&emsp;&emsp;非官方地址：<a href="https://sourceforge.net/projects/securepoint/files/" rel="noopener" target="_blank">https://sourceforge.net/projects/securepoint/files/</a><br>&emsp;&emsp;如果是默认安装路径的话，保存证书到openvpn 客户端安装目录：C:\Program Files\OpenVPN\config<br>&emsp;&emsp;之后就可以直接启动OpenVPN。此时就可以用浏览器直接访问内网IP或者直接ssh登陆内部服务器了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;企业中，必不可少的应用就是VPN了，它可以帮助员工在外网中访问公司内网，常见开源实现方案有OpenVPN和jumpserver。&lt;br&gt;&amp;emsp;&amp;emsp;OpenVPN是采用了端口转发的原理实现，是基于IP+端口的4层代理机制，一般是用于出差员工访问公司内部ERP系统等使用，而jumpserver是7层代理，所以功能更加强大却也更加复杂，一般适合运维人员管理维护企业内部服务器。对于中小公司日常使用，OpenVPN就已经完全足够了，当然，也可用于科学，你懂得。本文将对linux环境下（CentOS），OpenVPN的安装配置做一个详细的介绍。&lt;br&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="https://hewanyue.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="经验分享" scheme="https://hewanyue.com/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
      <category term="OpenVPN" scheme="https://hewanyue.com/tags/OpenVPN/"/>
    
      <category term="SSH" scheme="https://hewanyue.com/tags/SSH/"/>
    
      <category term="科学上网" scheme="https://hewanyue.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>MSM实现tomcat集群的session共享</title>
    <link href="https://hewanyue.com//blog/6254cc16.html"/>
    <id>https://hewanyue.com//blog/6254cc16.html</id>
    <published>2019-11-22T13:50:11.000Z</published>
    <updated>2019-11-25T02:02:43.967Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;tomcat作为一个应用服务器，单机性能上都是无法满足生产中需要的，而想要解决高并发场景，光靠提升单机性能，成本与效果肯定都是无法让人接受的，而此时我们一般都采用tomcat集群的方式，用多台tomcat服务器来共同支撑我们的业务。<br>&emsp;&emsp;但这时就出现了一个新的问题，那就是会话保持。因为每台tomcat服务器的session是独立的，当客户端被调度到一个新的tomcat服务器时，他无法识别之前一台的tomcat服务器分配的sessionID，于是对于此次访问，之前的会话信息就都没有了，这表现在用户的客户端就相当于，点开一个新的链接，就发现需要重新登陆，或者之前的购物车里的商品都不见了等等。这样的客户访问体验绝对不是我们想要的，所以我们需要实现会话保持功能！<br><a id="more"></a></p><h2 id="会话保持实现"><a href="#会话保持实现" class="headerlink" title="会话保持实现"></a>会话保持实现</h2><p>&emsp;&emsp;一般tomcat的会话保持有三种方案实现：</p><ul><li>nginx、httpd或者haproxy的调度实现session绑定,一般是源地址哈希方式实现<br>优点:简单易配置<br>缺点：<br>①如果目标服务器故障后,没有做持久化的话就会丢失session;<br>②即便做了持久化,当服务器故障后,nginx或者haproxy会不得不重新分配一个tomcat服务器,而这时因为新的tomcat服务器上没有原来的sessionID,所以无法找到相应会话信息,会重新分配一个sessionID给客户端,就算原来的tomcat服务器重新上线,又被分配到原来的tomcat服务器中,可此时客户端已经有了新的sessionID,也不会去读取最开始的session信息,那些会话信息就相当于永远丢失了。</li><li>session复制集群,官方给出的tomcat会话共享解决方案<br>&emsp;&emsp;tomcat自己提供的多播集群，通过多播将任何一台的session同步到其他节点。<br>缺点：<br>①tomcat的同步节点不宜过多，互相即时通信session需要太多带宽；<br>②每一台tomcat服务器都拥有全部session信息，内存占用太多。</li><li>session server<br>&emsp;&emsp;session 共享服务器，一般使用memcached、redis做共享的session服务器。<br>目前最理想的解决方案，不过会需要额外的机器来配置共享服务器。<h3 id="反向代理的session绑定"><a href="#反向代理的session绑定" class="headerlink" title="反向代理的session绑定"></a>反向代理的session绑定</h3>&emsp;&emsp;这种实现session保持的方案，一般是使用的不多，一般用于公司内部中的会话保持场景。只需在haproxy或者nginx中的调度算法中，加入基于源地址hash即可（调度算法参考<a href="https://hewanyue.com/blog/5aeb7732.html#haproxy调度算法">之前博客</a>）。于是，用户每次访问都会被调度到同一台tomcat服务器上，上面已有他的session信息，便实现了会话保持。<h4 id="配置实现"><a href="#配置实现" class="headerlink" title="配置实现"></a>配置实现</h4>&emsp;&emsp;我们用一台nginx服务器做反向代理，两台tomcat服务器来演示实现过程。</li></ul><p>&amp;gt nginx主机ip：192.168.32.207<br>&amp;gt tomcat主机1ip：192.168.32.231<br>&amp;gt tomcat主机2ip：192.168.32.232</p><p>&emsp;&emsp;将3台机子中的nginx或tomcat服务启动之后，分别检查80端口和8080端口是否都已监听，确保服务启动。<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">iptables</span> <span class="string">-F</span></span><br><span class="line"><span class="attr">getenforce</span> <span class="string">0</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;确保防火墙和SELinux设置不会干扰我们几台主机间的相互通信。<br>&emsp;&emsp;nginx主机反向代理的配置<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">upstream tomcat &#123;</span><br><span class="line">    #ip_hash; #先关闭原地址iphash，观察效果</span><br><span class="line">    server <span class="number">192.168</span><span class="number">.32</span><span class="number">.231</span>:<span class="number">8080</span> weight=<span class="number">1</span> fail_timeout=<span class="number">5</span>s max_fails=<span class="number">3</span>;</span><br><span class="line">    server <span class="number">192.168</span><span class="number">.32</span><span class="number">.232</span>:<span class="number">8080</span> weight=<span class="number">1</span> fail_timeout=<span class="number">5</span>s max_fails=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    index index.jsp</span><br><span class="line">#    server_name www.example.net;</span><br><span class="line">#    location ~* \.(jsp|<span class="keyword">do</span>)$ &#123;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http:<span class="comment">//tomcat;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;可启用主机名，也可不启用直接用端口访问。用域名访问还需要改DNS或者hosts设置，比较麻烦，我们就直接通过IP+端口访问就可以了。<br>&emsp;&emsp;tomcat服务器中可以新建一个host，也可使用原先的localhost默认主机。我们这次不用之前的localhost，而是自己新创建一个host标签，指定appBase在/data/myapp目录下。两个tomcat服务器都要执行如下操作：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/apps/</span>tomcat<span class="regexp">/conf/</span>server.xml</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;找到<code>Engine标签</code>，将默认主机修改为<code>myapp</code><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;ltEngine <span class="attribute">name</span>=<span class="string">"Catalina"</span> <span class="attribute">defaultHost</span>=<span class="string">"myapp"</span>&amp;gt</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;找到<code>localhost</code>的<code>&amp;lt/Host&amp;gt</code>标签，在下面创建新的主机<code>myapp</code>,指定appBase为/data/myapp<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;ltHost <span class="attribute">name</span>=<span class="string">"myapp"</span>  <span class="attribute">appBase</span>=<span class="string">"/data/myapp"</span></span><br><span class="line">      <span class="attribute">unpackWARs</span>=<span class="string">"true"</span> <span class="attribute">autoDeploy</span>=<span class="string">"true"</span>&amp;gt</span><br><span class="line">&amp;lt/Host&amp;gt</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;PS：Host name一般为主机域名，当一个tomcat中有多个host服务时，就是通过http报文请求头部的host信息来判断去访问哪个host服务的，当找不到对应的主机之后才访问<code>defaultHost</code>，我们这里因为只有启用了一个host，且为defaultHost，所以就无所谓，可以任意命名了，只需对应上就好。<br>&emsp;&emsp;之后我们要在/data/myapp目录下创建一个<code>ROOT</code>目录来作为tomcat访问的默认目录，注意<code>ROOT</code>是大写的。<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/myapp/<span class="type">ROOT</span></span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;为了方便我们看到效果，我们编写index.jsp时，调用一些函数，方便我们看到我们访问的tomcat主机的IP和端口、sessionID、访问时间。<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/data/my</span>app<span class="regexp">/ROOT/i</span>ndex.jsp</span><br></pre></td></tr></table></figure></p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">&amp;lt</span>%@ <span class="meta">page</span> import=<span class="string">"java.util.*"</span> %<span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;lt</span>!DOCTYPE html<span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;lthtml</span> lang=<span class="string">"en"</span><span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;lthead</span><span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;ltmeta</span> charset=<span class="string">"UTF-8"</span><span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;lttitle</span><span class="variable">&amp;gtlbjsptest</span><span class="variable">&amp;lt</span>/<span class="meta">title</span><span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;lt</span>/head<span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;ltbody</span><span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;ltdiv</span><span class="variable">&amp;gtOn</span> <span class="variable">&amp;lt</span>%=request.getServerName() %<span class="variable">&amp;gt</span><span class="variable">&amp;lt</span>/div<span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;ltdiv</span><span class="variable">&amp;gt</span><span class="variable">&amp;lt</span>%=request.getLoca<span class="meta">lAddr(</span>) + <span class="string">":"</span> + request.getLocalPort() %<span class="variable">&amp;gt</span><span class="variable">&amp;lt</span>/div<span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;ltdiv</span><span class="variable">&amp;gtSessionID</span> = <span class="variable">&amp;ltspan</span> style=<span class="string">"color:blue"</span><span class="variable">&amp;gt</span><span class="variable">&amp;lt</span>%=session.getId() %<span class="variable">&amp;gt</span><span class="variable">&amp;lt</span>/span<span class="variable">&amp;gt</span><span class="variable">&amp;lt</span>/div<span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;lt</span>%=new<span class="meta"> Date(</span>)%<span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;lt</span>/body<span class="variable">&amp;gt</span></span><br><span class="line"><span class="variable">&amp;lt</span>/html<span class="variable">&amp;gt</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;此时，我们访问nginx的80端口，就可以被反向代理到后端的两个tomcat服务器上去。而这时，是轮询的调度方式，也就是一边一次，可以看到访问的主机和sessionID都是一直在变化的。<br>效果如下图所示：<br><img src="https://img-blog.csdnimg.cn/20191122152145219.gif" alt="nginx轮询tomcat"></p><p>&emsp;&emsp;每一次的sessionID都没有重复过，这肯定不满足我们的需要。所以我们将nginx配置中#ip_hash;的#注释去掉，重启nginx服务，再看效果，如下图所示：<br><img src="https://img-blog.csdnimg.cn/20191122152346465.gif" alt="在这里插入图片描述"><br>&emsp;&emsp;可以看到，每次刷新，主机IP和sessionID都不再变化，说明绑定session成功。</p><h3 id="session复制集群"><a href="#session复制集群" class="headerlink" title="session复制集群"></a>session复制集群</h3><p>&emsp;&emsp;这是tomcat官方提供的解决方案，所有tomcat上都有全量的session，不过同步session信息会消耗带宽，而且所有服务器保存所有session信息也比较占用资源，对于tomcat这种本身就处于效率瓶颈的服务来说，高并发场景下超过若五个tomcat服务器，就不再建议使用。<br>&emsp;&emsp;配置详细可以参见<a href="https://tomcat.apache.org/tomcat-8.5-doc/cluster-howto.html" rel="noopener" target="_blank">官网配置说明</a>。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&amp;ltCluster <span class="attribute">className</span>=<span class="string">"org.apache.catalina.ha.tcp.SimpleTcpCluster"</span></span><br><span class="line">         <span class="attribute">channelSendOptions</span>=<span class="string">"8"</span>&amp;gt</span><br><span class="line"></span><br><span class="line">  &amp;ltManager <span class="attribute">className</span>=<span class="string">"org.apache.catalina.ha.session.DeltaManager"</span></span><br><span class="line">           <span class="attribute">expireSessionsOnShutdown</span>=<span class="string">"false"</span></span><br><span class="line">           <span class="attribute">notifyListenersOnReplication</span>=<span class="string">"true"</span>/&amp;gt</span><br><span class="line"></span><br><span class="line">  &amp;ltChannel <span class="attribute">className</span>=<span class="string">"org.apache.catalina.tribes.group.GroupChannel"</span>&amp;gt</span><br><span class="line">    &amp;ltMembership <span class="attribute">className</span>=<span class="string">"org.apache.catalina.tribes.membership.McastService"</span></span><br><span class="line">                <span class="attribute">address</span>=<span class="string">"228.0.0.4"</span></span><br><span class="line">                <span class="attribute">port</span>=<span class="string">"45564"</span></span><br><span class="line">                <span class="attribute">frequency</span>=<span class="string">"500"</span></span><br><span class="line">                <span class="attribute">dropTime</span>=<span class="string">"3000"</span>/&amp;gt</span><br><span class="line">    &amp;ltReceiver <span class="attribute">className</span>=<span class="string">"org.apache.catalina.tribes.transport.nio.NioReceiver"</span></span><br><span class="line">              <span class="attribute">address</span>=<span class="string">"auto"</span></span><br><span class="line">              <span class="attribute">port</span>=<span class="string">"4000"</span></span><br><span class="line">              <span class="attribute">autoBind</span>=<span class="string">"100"</span></span><br><span class="line">              <span class="attribute">selectorTimeout</span>=<span class="string">"5000"</span></span><br><span class="line">              <span class="attribute">maxThreads</span>=<span class="string">"6"</span>/&amp;gt</span><br><span class="line"></span><br><span class="line">    &amp;ltSender <span class="attribute">className</span>=<span class="string">"org.apache.catalina.tribes.transport.ReplicationTransmitter"</span>&amp;gt</span><br><span class="line">      &amp;ltTransport <span class="attribute">className</span>=<span class="string">"org.apache.catalina.tribes.transport.nio.PooledParallelSender"</span>/&amp;gt</span><br><span class="line">    &amp;lt/Sender&amp;gt</span><br><span class="line">    &amp;ltInterceptor <span class="attribute">className</span>=<span class="string">"org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"</span>/&amp;gt</span><br><span class="line">    &amp;ltInterceptor <span class="attribute">className</span>=<span class="string">"org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor"</span>/&amp;gt</span><br><span class="line">  &amp;lt/Channel&amp;gt</span><br><span class="line"></span><br><span class="line">  &amp;ltValve <span class="attribute">className</span>=<span class="string">"org.apache.catalina.ha.tcp.ReplicationValve"</span></span><br><span class="line">         <span class="attribute">filter</span>=<span class="string">""</span>/&amp;gt</span><br><span class="line">  &amp;ltValve <span class="attribute">className</span>=<span class="string">"org.apache.catalina.ha.session.JvmRouteBinderValve"</span>/&amp;gt</span><br><span class="line"></span><br><span class="line">  &amp;ltDeployer <span class="attribute">className</span>=<span class="string">"org.apache.catalina.ha.deploy.FarmWarDeployer"</span></span><br><span class="line">            <span class="attribute">tempDir</span>=<span class="string">"/tmp/war-temp/"</span></span><br><span class="line">            <span class="attribute">deployDir</span>=<span class="string">"/tmp/war-deploy/"</span></span><br><span class="line">            <span class="attribute">watchDir</span>=<span class="string">"/tmp/war-listen/"</span></span><br><span class="line">            <span class="attribute">watchEnabled</span>=<span class="string">"false"</span>/&amp;gt</span><br><span class="line"></span><br><span class="line">  &amp;ltClusterListener <span class="attribute">className</span>=<span class="string">"org.apache.catalina.ha.session.ClusterSessionListener"</span>/&amp;gt</span><br><span class="line">&amp;lt/Cluster&amp;gt</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;将官网上的这段集群配置，插入到两个tomcat服务器中我们创建的host标签中（也可插入引擎标签中，就相当于所有主机都生效），即<code>&amp;ltHost name</code>标签与<code>&amp;lt/Host&amp;gt</code>标签的中间。<br>&emsp;&emsp;配置说明：<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Cluster</span> <span class="string">集群配置</span></span><br><span class="line"><span class="attr">Manager</span> <span class="string">会话管理器配置</span></span><br><span class="line"><span class="attr">Channel</span> <span class="string">信道配置</span></span><br><span class="line">        <span class="attr">Membership</span> <span class="string">成员判定。使用什么多播地址、端口多少、间隔时长ms、超时时长ms。同一个多播地址和端口认为同属一个组。使用时修改这个多播地址，以防冲突</span></span><br><span class="line">        <span class="attr">Receiver</span> <span class="string">接收器，多线程接收多个其他节点的心跳、会话信息。默认会从4000到4100依次尝试可用端口。</span></span><br><span class="line">        <span class="attr">address</span>=<span class="string">"auto"，auto可能绑定到127.0.0.1上，所以一定要改为可以用的IP上去</span></span><br><span class="line">        <span class="attr">Sender</span> <span class="string">多线程发送器，内部使用了tcp连接池。</span></span><br><span class="line">        <span class="attr">Interceptor</span> <span class="string">拦截器</span></span><br><span class="line"><span class="attr">ReplicationValve</span> <span class="string">检测哪些请求需要检测Session，Session数据是否有了变化，需要启动复制过程</span></span><br><span class="line"><span class="attr">ClusterSessionListener</span> <span class="string">集群session侦听器</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;复制完官方文档里的配置，我们还需要修改接收器的ip为本机ip，不能使用<code>auto</code>，否则会无法同步session信息。<br>&emsp;&emsp;此外，还需要在应用的web.xml文件中最后一行<code>&amp;lt/web-app&amp;gt</code>标签的上面一行插入子标签<code>&amp;ltdistributable/&amp;gt</code>表示可分配。<br>&emsp;&emsp;操作如下：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="regexp">/data/</span>myapp<span class="regexp">/ROOT/</span>WEB-INF</span><br><span class="line">cp <span class="regexp">/apps/</span>tomcat<span class="regexp">/conf/</span>web.xml <span class="regexp">/data/</span>myapp<span class="regexp">/ROOT/</span>WEB-INF/</span><br><span class="line">sed -i <span class="string">'/&amp;lt\/web-app&amp;gt/i&amp;ltdistributable/&amp;gt'</span> <span class="regexp">/data/</span>myapp<span class="regexp">/ROOT/</span>WEB-INF/web.xml</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;此时，如果我们将前端Nginx或者其他反向代理服务器中的源地址hash去掉，我们就可以看到，虽然访问的tomcat服务器在变化（服务器ip变化），而sessionID却是不变的，因为每个tomcat服务器上都有全量的相同的session信息。<br><img src="https://img-blog.csdnimg.cn/2019112217482979.gif" alt="集群tomcat"></p><h3 id="session-共享服务器"><a href="#session-共享服务器" class="headerlink" title="session 共享服务器"></a>session 共享服务器</h3><p>&emsp;&emsp;这种实现方式其实才是本文标题中真正的session共享，毕竟共享经济炒的很热，我们都知道，所谓共享，共用才叫共享，前面提到的那种tomcat集群里会话信息人手一份可不能称作是共享。于是乎，我们想到用将session放到外部存储，所有的tomcat服务器都去外部存储中去查找sessionID。<br>&emsp;&emsp;储存session信息肯定不能存储在磁盘文件中，这样的读取写入性能都会很慢，放在mysql数据库中或者以硬盘文件的方式保存，高并发场景下的读取写入速度都将会大打折扣。所以我们要使用类似memcached或者redis这种Key/Value的非关系型数据库里，也被称作NoSQL。<br>&emsp;&emsp;memcached和redis这种键值对型数据库的数据信息都是存储在内存中的，读写效率都很高，而且由于没有复杂的表关系，采用的是哈希算法，他们对于信息的查找都是O(1)，而不是类似mysql等数据库的O(n)，意思就是说耗时/耗空间与总数据量大小无关，不会随着数据量的增大导致查找时间几何倍数的增长。<br>&emsp;&emsp;但也因为memcached和redis的数据都是储存在内存中的，而且memcached还不支持持久化，所以我们一定要做好高可用，一旦发生故障，会话信息将立即丢失，几乎没有恢复的可能。<br>&emsp;&emsp;要实现tomcat共享session服务器，首先，我们要让tomcat将session储存到memcached或者redis等外部存储上，这就需要我们对tomcat进行配置，其次我们要将session信息序列化为变为字节流以便能储存在session服务器中，还要能将session服务器中的数据反序列化为可以识别的session信息，最后，当然我们还需要一个客户端来跟后端的session服务器通信，才能将数据写入和读取。<br>&emsp;&emsp;这想实现确实也比较复杂，不过在github已有开源解决方案（网址是<a href="https://github.com/magro/memcached-session-manager" rel="noopener" target="_blank">https://github.com/magro/memcached-session-manager</a>），memcached-session-manager，简称msm，后端采用memcached或者redis都可以（之前只支持memcached，因而得名msm，后来支持redis后，人们还是习惯叫它msm），且已经完成了对tomcat的session共享的配置支持（支持tomcat6.X、7.X、8.X、9.X），我们直接去下载对应版本的去使用就可以了。<br>&emsp;&emsp;根据项目的介绍文档，我们知道，想实现tomcat的session共享，我们至少需要配套的工具有：</p><ul><li>tomcat的session管理工具 memcached-session-manager</li><li>与session服务器通信的客户端<br>如果是memcached，则建议使用spymemcached.jar<br>如果是redis，则建议使用jedis.jar</li><li>将session信息序列化的工具，作者推荐使用kryo。</li></ul><p>&emsp;&emsp;这些工具官网上也都提供了下载链接，我们直接下载下来即可。<br>&emsp;&emsp;kryo如下图所示<br><img src="https://img-blog.csdnimg.cn/20191122212611125.png" alt="kryo"><br>&emsp;&emsp;其他工具包如下图所示<br><img src="https://img-blog.csdnimg.cn/20191122212642803.png" alt="msm"><br>&emsp;&emsp;将这些jar包统统拷贝到tomcat服务器的lib目录下（改变lib目录下的jar包需重启tomcat服务才能生效）<br>&emsp;&emsp;使用msm搭建session共享服务器，如果后端为memcached，则有两种模式可以选，分别是sticky模式和non-sticky模式，后端为redis，则使用类似non-sticky模式。</p><h4 id="sticky模式"><a href="#sticky模式" class="headerlink" title="sticky模式"></a>sticky模式</h4><p>&emsp;&emsp;以两台服务器为例，将tomcat1和memcached1部署在一台服务器上（简称为t1、m1），tomcat2和memcached2部署在另一台服务器上（简称为t2、m2）为例，结构图如下图所示。<br><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">&amp;ltt1</span><span class="variable">&amp;gt</span>   <span class="variable">&amp;ltt2</span><span class="variable">&amp;gt</span></span><br><span class="line">  . \ / .</span><br><span class="line">  .  <span class="meta">X</span>  .</span><br><span class="line">  . / \ .</span><br><span class="line"><span class="variable">&amp;ltm1</span><span class="variable">&amp;gt</span>   <span class="variable">&amp;ltm2</span><span class="variable">&amp;gt</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;实现原理：当请求结束时Tomcat的session会送给memcached备份。即Tomcat session为主session，memcached session为备session，使用memcached相当于备份了一份Session。查询Session时Tomcat会优先使用自己内存的Session，Tomcat通过jvmRoute发现不是自己的Session，便从memcached中找到该Session，更新本机Session，请求完成后更新memcached。<br>&emsp;&emsp;可能有的朋友看的一头雾水，这到底是个什么结构。其实很简单，sticky模式就是t1的session信息还是储存在t1上，不过以m2为备用数据库，t2的session信息也是放在t2中储存，以m1服务器为备用服务器。这就意味着，用户在访问t1时，是从t1获取session信息，当t1挂掉或者整个节点1服务器挂掉之后，用户会被调度到t2上，而t2本地中没有session信息时，就会去m2中上找相关sessionID，而m2因为是t1的备用存储，所以有跟t1完全相同的session信息，于是用户的sessionID就可以被t2识别；而当m2备用存储服务挂掉之后，t1服务会通过检测发现自己没有备用存储，就会自动将m1也指定为自己的备用存储，将备份信息也同步至m1中，于是用户若再从t2访问时，虽然因为m2挂掉，其中的数据都无法访问，但t2就可以从m1上读取到对应的sessionID并同步到t2本身的存储中，也可以保持之前的会话信息。<br>&emsp;&emsp;修改的配置也很简单，依照官网说明，将下面的代码标签插入<code>/conf/context.xml</code>文件中的<code>context标签</code>结尾就可以了<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&amp;ltManager className=<span class="string">"de.javakaffee.web.msm.MemcachedBackupSessionManager"</span></span><br><span class="line">memcachedNodes=<span class="string">"n1:192.168.32.231:11211,n2:192.168.32.232:11211"</span></span><br><span class="line">failoverNodes=<span class="string">"n1"</span></span><br><span class="line">requestUriIgnorePattern=<span class="string">".*\.(ico|png|gif|jpg|css|js)$"</span></span><br><span class="line">transcoderFactoryClass=<span class="string">"de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory"</span></span><br><span class="line">/&amp;gt</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;n1、n2只是memcached的节点别名，可以重新命名。<br>failoverNodes是指故障转移节点，也就是发生故障之后的备用节点，所以在n1节点上，n1是备用节点，n2是主存储节点。另一台Tomcat中配置将failoverNodes改为n2，意思是其主节点是n1，备用节点是n2。<br>若配置成功，在/apps/tomcat/log/catalina.out文件中看到如下信息。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -n <span class="number">20</span> /apps/tomcat/logs/catalina.<span class="keyword">out</span></span><br></pre></td></tr></table></figure></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">23-Nov-2019 13:35:54.187 INFO [myapp-startStop-1] de.javakaffee.web.msm.MemcachedSessionService.startInternal --------</span><br><span class="line"><span class="bullet">-  </span>finished initialization:</span><br><span class="line"><span class="bullet">- </span>sticky: true</span><br><span class="line"><span class="bullet">- </span>operation timeout: 1000</span><br><span class="line"><span class="bullet">- </span>node ids: [n1]</span><br><span class="line"><span class="bullet">- </span>failover node ids: [n2]</span><br><span class="line"><span class="bullet">- </span>storage key prefix: null</span><br><span class="line"><span class="bullet">- </span>locking mode: null (expiration: 5s)</span><br><span class="line">--------</span><br></pre></td></tr></table></figure><p>此时在访问我们的前端代理（取消ipHASH绑定）就会看到下面界面，将节点2 关机，可以看到访问ip固定为192.168.32.231，而使用的memcached变成了n1节点。<br><img src="https://img-blog.csdnimg.cn/20191123194433405.gif" alt="tomcatsticky"></p><h4 id="non-sticky模式"><a href="#non-sticky模式" class="headerlink" title="non-sticky模式"></a>non-sticky模式</h4><p>&emsp;&emsp;从msm 1.4.0之后开始支持non-sticky模式。<br>Tomcat session为中转Session，如果n1为主session，n2为备session，则产生的新的Session会发送给主、备memcached，并清除本地Session，也就是说tomcat本身不储存session信息，只负责产生session。<br>&emsp;&emsp;需要注意的是，如果n1下线，n2转换为主节点。n1再次上线，n2依然是主Session存储节点。<br>&emsp;&emsp;配置方法与sticky大致相同，不过在<code>/conf/context.xml</code>文件中的<code>context标签</code>结尾插入代码略有不同，具体代码如下<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&amp;ltManager className=<span class="string">"de.javakaffee.web.msm.MemcachedBackupSessionManager"</span></span><br><span class="line">memcachedNodes=<span class="string">"n1:192.168.32.231:11211,n2:192.168.32.232:11211"</span></span><br><span class="line">sticky=<span class="string">"false"</span></span><br><span class="line">sessionBackupAsync=<span class="string">"false"</span></span><br><span class="line">lockingMode=<span class="string">"uriPattern:/path1|/path2"</span></span><br><span class="line">requestUriIgnorePattern=<span class="string">".*\.(ico|png|gif|jpg|css|js)$"</span></span><br><span class="line">transcoderFactoryClass=<span class="string">"de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory"</span></span><br><span class="line">/&amp;gt</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;重启tomcat服务后生效。此时在/apps/tomcat/log/catalina.out文件中看到如下信息。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -n <span class="number">20</span> /apps/tomcat/logs/catalina.<span class="keyword">out</span></span><br></pre></td></tr></table></figure></p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">23-Nov-2019 13:43:05.863 INFO [myapp-startStop-1] de.javakaffee.web.msm.MemcachedSessionService.startInternal --------</span><br><span class="line"><span class="bullet">-  </span>finished initialization:</span><br><span class="line"><span class="bullet">- </span>sticky: false</span><br><span class="line"><span class="bullet">- </span>operation timeout: 1000</span><br><span class="line"><span class="bullet">- </span>node ids: [n1, n2]</span><br><span class="line"><span class="bullet">- </span>failover node ids: []</span><br><span class="line"><span class="bullet">- </span>storage key prefix: null</span><br><span class="line"><span class="bullet">- </span>locking mode: uriPattern:/path1|/path2 (expiration: 5s)</span><br><span class="line">--------</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;再次尝试访问负载代理服务器，发现同样实现了访问tomcatIP变化，sessionID不变，说明配置成功。<br>&emsp;&emsp;而后端使用redis作为session共享服务器时，仅支持non-stricky模式。建议用另外的服务器安装redis服务，并修改监听IP后启动，tomcat服务器中将<code>jedis.jar</code>jar包拷贝至tomcat安装路径下<code>lib目录</code>，同样在<code>/conf/context.xml</code>文件中的<code>context标签</code>结尾插入下面的代码即可（例如redis服务器IP端口为192.168.32.233:6379，可配置redis集群，可参考我之前博客<a href="https://hewanyue.com/blog/14b8983d.html">redis高可用配置</a>）。<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&amp;ltManager className=<span class="string">"de.javakaffee.web.msm.MemcachedBackupSessionManager"</span></span><br><span class="line">memcachedNodes=<span class="string">"redis://192.168.32.233:6379"</span></span><br><span class="line">sticky=<span class="string">"false"</span></span><br><span class="line">sessionBackupAsync=<span class="string">"false"</span></span><br><span class="line">lockingMode=<span class="string">"uriPattern:/path1|/path2"</span></span><br><span class="line">requestUriIgnorePattern=<span class="string">".*\.(ico|png|gif|jpg|css|js)$"</span></span><br><span class="line">transcoderFactoryClass=<span class="string">"de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory"</span></span><br><span class="line">/&amp;gt</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;tomcat作为一个应用服务器，单机性能上都是无法满足生产中需要的，而想要解决高并发场景，光靠提升单机性能，成本与效果肯定都是无法让人接受的，而此时我们一般都采用tomcat集群的方式，用多台tomcat服务器来共同支撑我们的业务。&lt;br&gt;&amp;emsp;&amp;emsp;但这时就出现了一个新的问题，那就是会话保持。因为每台tomcat服务器的session是独立的，当客户端被调度到一个新的tomcat服务器时，他无法识别之前一台的tomcat服务器分配的sessionID，于是对于此次访问，之前的会话信息就都没有了，这表现在用户的客户端就相当于，点开一个新的链接，就发现需要重新登陆，或者之前的购物车里的商品都不见了等等。这样的客户访问体验绝对不是我们想要的，所以我们需要实现会话保持功能！&lt;br&gt;
    
    </summary>
    
      <category term="tomcat" scheme="https://hewanyue.com/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="https://hewanyue.com/tags/tomcat/"/>
    
      <category term="redis" scheme="https://hewanyue.com/tags/redis/"/>
    
      <category term="集群" scheme="https://hewanyue.com/tags/%E9%9B%86%E7%BE%A4/"/>
    
      <category term="MSM" scheme="https://hewanyue.com/tags/MSM/"/>
    
      <category term="session" scheme="https://hewanyue.com/tags/session/"/>
    
  </entry>
  
  <entry>
    <title>linux上部署与配置tomcat</title>
    <link href="https://hewanyue.com//blog/b365780e.html"/>
    <id>https://hewanyue.com//blog/b365780e.html</id>
    <published>2019-11-21T10:58:03.000Z</published>
    <updated>2019-11-22T01:54:03.124Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。本文将详细讲解tomcat在linux环境(以CentOS为例)中的安装与配置。<br><a id="more"></a></p><h3 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h3><p>&emsp;&emsp;JDK是java Development Kit的缩写，即java语言的软件开发包，是javac、javap、jdb等开发、调试、编译工具。<br>&emsp;&emsp;OpenJDK是Sun公司采用GPL v2协议发布的JDK开源版本，可以用于商业用途，于2009年正式发布。它是基于JDK7的beta版开发，但为了也将java SE 6开源，从OpenJDK7的b20构建反向分之开发，从中剥离了不符合java SE 6规范的代码，发布了OpenJDK 6。所以OpenJDK6和JDK6没有关系。<br>&emsp;&emsp;在CentOS中，可以选择yum安装openjdk<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java<span class="number">-1.8</span><span class="number">.0</span>-openjdk</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;通过<code>java -version</code>可以看到版本信息为<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openjdk version <span class="string">"1.8.0_212"</span></span><br><span class="line">OpenJDK Runtime Environment (build 1.8,0_212-b04)</span><br><span class="line">OpenJDK 64-Bit<span class="built_in"> Server </span>VM (build 25.212-b04,mixed mode)</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;也可以去Oracle官网下载JDK 8的rpm包安装（需要注册）<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install jdk<span class="number">-8</span>u191-linux-x64,rpm</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;而通过<code>java -version</code>看到版本信息为<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#  java -version</span><br><span class="line">java version <span class="string">"1.8.0_231"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_231-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit<span class="built_in"> Server </span>VM (build 25.231-b11, mixed mode)</span><br></pre></td></tr></table></figure></p><h3 id="部署tomcat"><a href="#部署tomcat" class="headerlink" title="部署tomcat"></a>部署tomcat</h3><p>&emsp;&emsp;确定JDK版本之后，我们就可以准备开始部署tomcat了。<br>&emsp;&emsp;首先要去<a href="https://tomcat.apache.org/" rel="noopener" target="_blank">官网</a>下载源码包，国内用的是清华大学的镜像下载地址，下载速度还是可以接受的。<br>&emsp;&emsp;生产中我们一般不会选用最新版的tomcat9，而是选用tomcat8更为稳妥。tomcat8的下载链接是<a href="http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.47/bin/apache-tomcat-8.5.47.tar.gz" rel="noopener" target="_blank">http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.47/bin/apache-tomcat-8.5.47.tar.gz</a><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/apache/</span>tomcat<span class="regexp">/tomcat-8/</span>v8.<span class="number">5.47</span><span class="regexp">/bin/</span>apache-tomcat-<span class="number">8.5</span>.<span class="number">47</span>.tar.gz</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;解压到想要安装的任意指定目录，例如<code>/apps/tomcat/</code>目录<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xvf apache-tomcat-<span class="number">8.5</span>.<span class="number">47</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span> -C /apps/</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;更改目录名称(也可以用软连接方式)。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /apps/apache-tomcat<span class="number">-8.5</span><span class="number">.47</span> /apps/tomcat</span><br></pre></td></tr></table></figure></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>&emsp;&emsp;jdk需要配置环境变量才可以找到，否则会无法访问jsp文件。<br>&emsp;&emsp;需要在环境变量配置文件中加入<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/java/default</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$JAVA_HOME</span>/bin:$PATH</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;于是，运行下面命令即可<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/profile.d/jdk.sh &lt;&lt;<span class="string">"END"</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/java/default</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$JAVA_HOME</span>/bin:$PATH</span><br><span class="line">END</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;运行命令使环境变量生效<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. /etc/<span class="keyword">profile</span>.d/jdk.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure></p><h3 id="修改进程属主"><a href="#修改进程属主" class="headerlink" title="修改进程属主"></a>修改进程属主</h3><p>&emsp;&emsp;一般来说，tomcat服务如果以root身份启动，风险还是很高的，因为tomcat本身bug还是有不少的，如果被别有用心之人加以利用，入侵进来，就可以获得root权限，这造成的后果绝对是灾难级的，这甚至会威胁到其他服务器的安全。为了规避这一风险，我们一般都会将tomcat服务以一个系统用户的身份启动，例如java用户。<br>&emsp;&emsp;创建java用户<code>useradd -r java</code><br>&emsp;&emsp;更改服务目录的属主属组<code>chown -R tomcat/*</code><br>&emsp;&emsp;启动服务时，我们使用命令<code>su - java -c &#39;/apps/tomcat/bin/startup.sh&#39;</code>来启动，就可以以java用户的身份来启动进程了。</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>&emsp;&emsp;tomcat中配置文件目录在tomcat/conf/server.xml,其中需要注意的是：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Server <span class="attribute">port</span>=<span class="string">"8005"</span> <span class="attribute">shutdown</span>=<span class="string">"SHUTDOWN"</span>&gt;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;这代表管理端监听在8005端口，向管理端发送<code>SHUTDOWN</code>指令就会是tomcat直接终止，而且这是不需要密码权限控制的。如果在生产环境中，如果有任何人有意或者无意向tomcat服务器的8005端口发送了SHUTDOWN指令，整个服务都会被终止掉，，而且还不需要密码验证，这对我们的影响无疑是巨大的，所以我们通常都会将此处的管理监听端口改掉，或将shutdown指令设为别的复杂口令，让别人无法轻易或不小心将我们的服务器shutdown~<br>&emsp;&emsp;可采取MD5值的方式，选任一文件做MD5运算后得到的随机数值即为口令。<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">"s@SHUTDOWN@`md5sum /root/.ssh/authorized_keys |cut -d' ' -f1`@"</span> tomcat/conf/server.xml</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;此时，就可以通过安装目录下的<code>tomcat/bin/startup.sh</code>来启动tomcat服务了。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">su</span> - java -c <span class="string">' /apps/tomcat/bin/startup.sh'</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后查看端口<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ss -tanl</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;即可看到8080端口已经处于监听状态了<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>localhost ~]# ss -tanl</span><br><span class="line">State       Recv-Q Send-Q                     Local Address:Port                                    Peer Address:Port              </span><br><span class="line">LISTEN      <span class="number">0</span>      <span class="number">128</span>                                    *:<span class="number">22</span>                                                 *:*                  </span><br><span class="line">LISTEN      <span class="number">0</span>      <span class="number">100</span>                            <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">25</span>                                                 *:*                  </span><br><span class="line">LISTEN      <span class="number">0</span>      <span class="number">100</span>                                   :::<span class="number">8009</span>                                              :::*                  </span><br><span class="line">LISTEN      <span class="number">0</span>      <span class="number">100</span>                                   :::<span class="number">8080</span>                                              :::*                  </span><br><span class="line">LISTEN      <span class="number">0</span>      <span class="number">128</span>                                   :::<span class="number">22</span>                                                :::*                  </span><br><span class="line">LISTEN      <span class="number">0</span>      <span class="number">100</span>                                  ::<span class="number">1</span>:<span class="number">25</span>                                                :::*                  </span><br><span class="line">LISTEN      <span class="number">0</span>      <span class="number">1</span>                       ::ffff:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8005</span>                                              :::*                  </span><br><span class="line">[<span class="symbol">root@</span>localhost ~]#</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;访问tomcat服务器的ip的8080端口，可看到如下图所示界面，即表示tomcat安装成功。<br><img src="https://img-blog.csdnimg.cn/20191121170929214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;不过，想使用tomcat自带的Manager App及Host Manager工具，还需要做一些额外的配置,此时如果直接访问会显示403权限拒绝，如下图所示。<br><img src="https://img-blog.csdnimg.cn/20191121192147674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="修改应用访问控制"><a href="#修改应用访问控制" class="headerlink" title="修改应用访问控制"></a>修改应用访问控制</h4><p>&emsp;&emsp;错误提示说明已经说得很明白了，首先确保已经修改了应用的反问控制权限，，如果还没有，you’ll need to edit the Manager’s <code>context.xml</code> file。<br>&emsp;&emsp;那这个context.xml在哪里呢？它是指应用的上下文设置文件，路径就是tomcat目录下的<code>webapps/manager/META-INF/context.xml</code>文件，另一个应用Host Manager的路径就是tomcat目录下的<code>webapps/host-manager/META-INF/context.xml</code><br>&emsp;&emsp;所以我们要修改这两个配置文件中的访问控制，将我们的访问IP加到里面，这样我们的访问IP才有权限去访问这两个管理应用。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context <span class="attribute">antiResourceLocking</span>=<span class="string">"false"</span> <span class="attribute">privileged</span>=<span class="string">"true"</span> &gt;</span><br><span class="line">  &lt;Valve <span class="attribute">className</span>=<span class="string">"org.apache.catalina.valves.RemoteAddrValve"</span></span><br><span class="line">         <span class="attribute">allow</span>=<span class="string">"127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1|172.18.*|192.168.32.*"</span> /&gt;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;在<code>allow=</code>标签后面，加上我们的ip，支持通配符写法和PCRE格式的正则表达式写法，用<code>|</code>隔开。两个应用的配置文件都要修改。</p><h4 id="创建权限角色"><a href="#创建权限角色" class="headerlink" title="创建权限角色"></a>创建权限角色</h4><p>光将我们的来访IP加入许可白名单还是不够的，我们还需要一个有权限的账户才可以访问这些管理工具<br>路径是tomcat目录下的<code>conf/tomcat-users.xml</code>文件。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;tomcat-users <span class="attribute">xmlns</span>=<span class="string">"http://tomcat.apache.org/xml"</span></span><br><span class="line">              xmlns:<span class="attribute">xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">              xsi:<span class="attribute">schemaLocation</span>=<span class="string">"http://tomcat.apache.org/xml tomcat-users.xsd"</span></span><br><span class="line">              <span class="attribute">version</span>=<span class="string">"1.0"</span>&gt;</span><br><span class="line">    &lt;role <span class="attribute">rolename</span>=<span class="string">"manager-gui"</span>/&gt;</span><br><span class="line">    &lt;role <span class="attribute">rolename</span>=<span class="string">"admin-gui"</span>/&gt;</span><br><span class="line">    &lt;user <span class="attribute">username</span>=<span class="string">"admin"</span> <span class="attribute">password</span>=<span class="string">"123456"</span> <span class="attribute">roles</span>=<span class="string">"manager-gui,admin-gui"</span>/&gt;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;在下面加入后三行，先创建角色<code>&quot;manager-gui&quot;</code>和<code>&quot;admin-gui&quot;</code>,分别是Manager App的管理员和Host Manager的管理员。然后设置用户名密码及其所处的角色，也可以设置两个不同的用户来分别充当这两个角色。用户名密码可自行设置。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;role <span class="attribute">rolename</span>=<span class="string">"manager-gui"</span>/&gt;</span><br><span class="line">&lt;role <span class="attribute">rolename</span>=<span class="string">"admin-gui"</span>/&gt;</span><br><span class="line">&lt;user <span class="attribute">username</span>=<span class="string">"admin"</span> <span class="attribute">password</span>=<span class="string">"123456"</span> <span class="attribute">roles</span>=<span class="string">"manager-gui,admin-gui"</span>/&gt;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;有了管理员权限的账户，在被允许的客户端上就可以访问<code>Manager App</code>和<code>Host Manager</code>这两个工具了。点击图标访问，出现如下图所示的提示输入用户名密码弹窗，说明配置正确。<br><img src="https://img-blog.csdnimg.cn/20191121185100783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="附-一键部署tomcat脚本"><a href="#附-一键部署tomcat脚本" class="headerlink" title="附:一键部署tomcat脚本"></a>附:一键部署tomcat脚本</h3><p>&emsp;&emsp;附上我自己用的tomcat脚本供大家参考(未配置管理工具)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">DST=<span class="string">"/apps"</span></span><br><span class="line">[ -a jdk-8u231-linux-x64.rpm ] || &#123; <span class="built_in">echo</span> <span class="string">' the absence of jdk'</span> ;<span class="built_in">exit</span> 1;&#125;</span><br><span class="line">[ -d <span class="variable">$DST</span>/*tomcat* ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">"tomcat is aready installed into <span class="variable">$DST</span>/tomcat"</span> ;<span class="built_in">exit</span> 2;&#125;</span><br><span class="line">id java &amp;&gt;/dev/null &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">'user java is exist,redis is aready installed'</span> ; <span class="built_in">exit</span> 3;&#125;</span><br><span class="line">iptables -F</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line">sed -i <span class="string">'@SELINUX=enforcing@SELINUX=disabled@'</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">mkdir -p /data<span class="variable">$DST</span></span><br><span class="line"><span class="comment">#mkdir -p $DST</span></span><br><span class="line">ln -s /data<span class="variable">$DST</span> <span class="variable">$DST</span></span><br><span class="line">yum install jdk-8u231-linux-x64.rpm</span><br><span class="line">tar xf *tomcat-*.tar.* -C <span class="variable">$DST</span>/</span><br><span class="line">mv <span class="variable">$DST</span>/*tomcat-* <span class="variable">$DST</span>/tomcat</span><br><span class="line">sed -i <span class="string">"s@SHUTDOWN@`md5sum /root/.ssh/authorized_keys |cut -d' ' -f1`@"</span> <span class="variable">$DST</span>/tomcat/conf/server.xml</span><br><span class="line">cat &gt; /etc/profile.d/jdk.sh &lt;&lt;<span class="string">"END"</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/default</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">END</span><br><span class="line">. /etc/profile.d/jdk.sh</span><br><span class="line">useradd -r java</span><br><span class="line">chown -R java.java <span class="variable">$DST</span>/tomcat/*</span><br><span class="line">su - java -c <span class="string">'$DST/tomcat/bin/startup.sh'</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。本文将详细讲解tomcat在linux环境(以CentOS为例)中的安装与配置。&lt;br&gt;
    
    </summary>
    
      <category term="tomcat" scheme="https://hewanyue.com/categories/tomcat/"/>
    
    
      <category term="linux" scheme="https://hewanyue.com/tags/linux/"/>
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="tomcat" scheme="https://hewanyue.com/tags/tomcat/"/>
    
      <category term="一键安装" scheme="https://hewanyue.com/tags/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85/"/>
    
      <category term="JAVA" scheme="https://hewanyue.com/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>redis高可用配置</title>
    <link href="https://hewanyue.com//blog/14b8983d.html"/>
    <id>https://hewanyue.com//blog/14b8983d.html</id>
    <published>2019-11-15T08:19:19.000Z</published>
    <updated>2019-12-04T02:03:05.239Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;redis高可用一般有两种方式实现：哨兵和集群。在哨兵 sentinel 机制中，可以解决 redis 高可用的问题， 即当 master 故障后可以自动将 slave 提升为 master 从而可以保证 redis 服务的正常使用，但是无法解决 redis 单机写入的瓶颈问题， 即单机的 redis 写入性能受限于单机的内存大小、 并发数量、 网卡速率等因素。<br>&emsp;&emsp;redis 官方在 redis 3.0 版本之后推出了无中心架构的 redis cluster机制， 在无中心的 redis 集群当中，其每个节点保存当前节点数据和整个集群状态,每个节点都和其他所有节点连接， 特点如下：<br><a id="more"></a><br>&emsp;&emsp;1：所有 Redis 节点使用(PING 机制)互联。<br>&emsp;&emsp;2：集群中某个节点的失效， 是整个集群中超过半数的节点监测都失效才算真正的失效（类似Sdown和Odown） 。<br>&emsp;&emsp;3：客户端不需要 proxy 即可直接连接 redis， 应用程序需要写全部的 redis 服务器 IP。<br>&emsp;&emsp;4：redis cluster 把所有的 redis node 映射到 0-16383 个槽位(slot)上， 读写需要到指定的 redis node 上进行操作，因此有多少个 reids node 相当于 redis 并发扩展了多少倍。<br>&emsp;&emsp;5：Redis cluster 预先分配 16384 个(slot)槽位，当需要在 redis 集群中写入一个 key -value 的时候，会使用 CRC16(key) mod 16384 之后的值，决定将 key 写入值哪一个槽位从而决定写入哪一个 Redis 节点上， 从而有效解决单机瓶颈。</p><h3 id="Sentinel-哨兵"><a href="#Sentinel-哨兵" class="headerlink" title="Sentinel(哨兵)"></a>Sentinel(哨兵)</h3><h4 id="手动配置主从"><a href="#手动配置主从" class="headerlink" title="手动配置主从"></a>手动配置主从</h4><p>&emsp;&emsp;需要手动先指定某一台 Redis 服务器为 master，然后将其他 slave 服务器修改配置文件或使用命令配置为 master 服务器的 slave。哨兵的前提是已经手动实现了一个 redis master-slave 的运行环境。<br>&emsp;&emsp;例如我们将192.168.32.81上的redis服务设置为master，192.168.32.82、192.168.32.83设置为slave，192.168.32.81中配置文件masterauth 设置为123456<br>&emsp;&emsp;在192.168.32.82上设置主节点信息<code>SLAVEOF 192.168.32.81 6379</code>(redis5版本命令为<code>REPLICAOF 192.168.7.101 6379</code>)<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">192.168.32.82:6379&gt; SLAVEOF 192.168.32.81 6379</span><br><span class="line">OK</span><br><span class="line">192.168.32.82:6379&gt;<span class="built_in"> CONFIG </span><span class="builtin-name">SET</span> masterauth <span class="string">"123456"</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;同样,192.168.32.83也要设置主节点信息及密码<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">192.168.7.103:6379&gt; SLAVEOF 192.168.7.101 6379</span><br><span class="line">OK</span><br><span class="line">192.168.7.103:6379&gt;<span class="built_in"> CONFIG </span><span class="builtin-name">SET</span> masterauth <span class="string">"123456"</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;此时通过<code>info Replication</code>命令，在两个从节点上可以看到角色已变更为slave,且<code>master_link_status</code>状态要为up，说明主从结构配置完成。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; info Replication</span><br><span class="line"># Replication</span><br><span class="line">role:slave</span><br><span class="line">master_host:<span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span></span><br><span class="line">master_port:<span class="number">6379</span></span><br><span class="line">master_link_status:up</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;需要注意的是：不同的 redis 版本之间存在兼容性问题， 因此各 master 和 slave 之间必须保持版本一致，且redis slave 也要开启持久化并设置和 master 同样的连接密码，此外，如果开启了安全模式，未设置密码的话也会导致主从无法连接。</p><h4 id="配置Sentinel"><a href="#配置Sentinel" class="headerlink" title="配置Sentinel"></a>配置Sentinel</h4><p>&emsp;&emsp;哨兵可以不和 Redis 服务器部署在一起。可以使用另外不同的机子，一般采用单数个哨兵（至少3个）。不过为了节约服务器，我们还是和redis服务器部署到一起。<br>&emsp;&emsp;3个机子都手动添加Sentinel配置文件<br>&emsp;&emsp;<code>vim /apps/redis/etc/sentinel.conf</code><br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">port <span class="number">26379</span></span><br><span class="line">daemonize yes</span><br><span class="line">pidfile <span class="string">"redis-sentinel.pid"</span></span><br><span class="line">logfile <span class="string">"sentinel_26379.log"</span></span><br><span class="line">dir <span class="string">"/usr/local/redis"</span></span><br><span class="line">sentinel monitor mymaster <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span> <span class="number">6379</span> <span class="number">2</span> #法定人数限制(quorum)，即有几个slave 认为 master down 了就进行故障转移</span><br><span class="line">sentinel auth-pass mymaster <span class="number">123456</span></span><br><span class="line">sentinel down-after-milliseconds mymaster <span class="number">30000</span> #(SDOWN)主观下线的时间</span><br><span class="line">sentinel parallel-syncs mymaster <span class="number">1</span> #发生故障转移时候同时向新 master 同步数据的slave 数量， 数字越小总同步时间越长</span><br><span class="line">sentinel failover-timeout mymaster <span class="number">180000</span> #所有 slaves 指向新的 master 所需的超时时间</span><br><span class="line">sentinel deny-scripts-reconfig yes #禁止修改脚本</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;通过<code>/apps/redis/bin/redis-sentinel /apps/redis/etc/sentinel.conf</code>命令指定配置文件，启动哨兵，此时通过<code>ss -tanl</code>命令可以看到已监听26379端口，说明哨兵服务已启动。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>CentOS8 ~]# redis-cli -h <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span> -p <span class="number">26379</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">26379</span>&gt; info Sentinel</span><br><span class="line"># Sentinel</span><br><span class="line">sentinel_masters:<span class="number">1</span></span><br><span class="line">sentinel_tilt:<span class="number">0</span></span><br><span class="line">sentinel_running_scripts:<span class="number">0</span></span><br><span class="line">sentinel_scripts_queue_length:<span class="number">0</span></span><br><span class="line">sentinel_simulate_failure_flags:<span class="number">0</span></span><br><span class="line">master0:name=mymaster,status=ok,address=<span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">6379</span>,slaves=<span class="number">2</span>,sentinels=<span class="number">3</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;可以通过<code>redis-cli</code>指定26379端口连接哨兵服务器，<code>info Sentinel</code>查看哨兵状态，显示<code>status=ok，slaves=2，sentinels=3</code>，与我们之前设计的相同，说明哨兵服务正常。<br>&emsp;&emsp;此时，当master故障后，哨兵会通过投票机制，选举一个slave作为新的master，继续实现主从结构，而程序应用也会在主从切换的时候收到通知，Jedis 会进行连接的切换（在 JedisPool 中添加了 Sentinel 和MasterName 参数， JRedis Sentinel 底层基于 Redis 订阅实现 Redis 主从服务的切换通知， 当 Reids 发生主从切换时， Sentinel 会发送通知主动通知 Jedis 进行连接的切换， JedisSentinelPool 在每次从连接池中获取链接对象的时候,都要对连接对象进行检测,如果此链接和 Sentinel 的 Master 服务连接参数不一致,则会关闭此连接,重新获取新的 Jedis 连接对象。），实现redis的高可用。</p><h3 id="Redis-Cluster"><a href="#Redis-Cluster" class="headerlink" title="Redis Cluster"></a>Redis Cluster</h3><p>&emsp;&emsp;在哨兵 sentinel 机制中，可以解决 redis 高可用的问题， 即当 master 故障后可以自动将 slave 提升为 master 从而可以保证 redis 服务的正常使用，但是无法解决 redis 单机写入的瓶颈问题， 即单机的 redis 写入性能受限于单机的内存大小、 并发数量、 网卡速率等因素，所以Redis自带的Cluster就是很好的一个解决方案。</p><h4 id="集群前提"><a href="#集群前提" class="headerlink" title="集群前提"></a>集群前提</h4><p>&emsp;&emsp;1.每个 redis node 节点采用相同的硬件配置、相同的密码、 相同的 redis 版本。<br>&emsp;&emsp;2.每个节点必须开启的参数<br>cluster-enabled yes #必须开启集群状态， 开启后 redis 进程会有 cluster 显示cluster-config-file nodes-6380.conf #此文件有 redis cluster 集群自动创建和维护，不需<br>要任何手动操作<br>&emsp;&emsp;3.所有 redis 服务器必须没有任何数据<br>&emsp;&emsp;4.先启动为单机 redis 且没有任何 key value</p><h4 id="集群部署"><a href="#集群部署" class="headerlink" title="集群部署"></a>集群部署</h4><h5 id="Redis-3、4"><a href="#Redis-3、4" class="headerlink" title="Redis 3、4"></a>Redis 3、4</h5><p>&emsp;&emsp;Redis 3 和 4 版本需要使用到集群管理工具 redis-trib.rb，这个工具是 redis 官方推出的管理 redis 集群的工具，集成在 redis 的源码 src 目录下，是基于 redis 提供的集群命令封装成简单、便捷、实用的操作工具， redis-trib.rb 是 redis 作者用 ruby 开发完成的。所以需要有ruby环境，如果系统自带的ruby版本较低（需要Ruby version &gt;= 2.3.0），那就需要重新编译安装更高版本。</p><h6 id="编译安装ruby"><a href="#编译安装ruby" class="headerlink" title="编译安装ruby"></a>编译安装ruby</h6><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> yum <span class="built_in">remove</span> <span class="keyword">ruby</span> rubygems -<span class="keyword">y</span></span><br><span class="line">wget http<span class="variable">s:</span>//cache.<span class="keyword">ruby</span>-lang.org/pub/<span class="keyword">ruby</span>/<span class="number">2.5</span>/<span class="keyword">ruby</span>-<span class="number">2.5</span>.<span class="number">5</span>.tar.gz</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar xf ruby<span class="number">-2.5</span><span class="number">.5</span>.tar.gz</span><br><span class="line">cd ruby<span class="number">-2.5</span><span class="number">.5</span></span><br><span class="line">./configure</span><br><span class="line"> make -j <span class="number">4</span> &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;安装redis的gem包（Gem是一个管理Ruby库和程序的标准包，它通过Ruby Gem（如 <a href="http://rubygems.org/" rel="noopener" target="_blank">http://rubygems.org/</a> ）源来查找、安装、升级和卸载软件包，非常的便捷）。<br> <figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="keyword">install</span> redis</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;之后就可以使用<code>redis-trib.rb</code>命令来创建管理集群了。</p><h6 id="集群创建"><a href="#集群创建" class="headerlink" title="集群创建"></a>集群创建</h6><p>&emsp;&emsp;通过命令<code>redis-trib.rb create</code>来创建集群，选项–replicas <arg> 指定 master 的slave数量.<br>&emsp;&emsp;需要注意的是，集群至少也需要3台master，（–replicas 指定的slave数量可以为0，不过一般不建议），如果指定slave数量为2的话就至少需要9个redis服务器了（3主6从），比较浪费资源，所以我们一般设置replicas数值为1。<br>&emsp;&emsp;如果设置<strong>slave数量为0</strong>，则所有的6个服务器均为master，无法实现高可，集群信息如下图所示：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; cluster nodes</span><br><span class="line">c65ab2a5e9d8a9435d54f0ef7db302c62b6f9308 <span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="symbol">6379@</span><span class="number">16379</span> master - <span class="number">0</span> <span class="number">1573794294000</span> <span class="number">3</span> connected <span class="number">5461</span><span class="number">-8191</span></span><br><span class="line">a13d711b6b54909e5aed44cc8f75195915bbfb95 <span class="number">192.168</span><span class="number">.32</span><span class="number">.85</span>:<span class="symbol">6379@</span><span class="number">16379</span> master - <span class="number">0</span> <span class="number">1573794293235</span> <span class="number">6</span> connected <span class="number">13653</span><span class="number">-16383</span></span><br><span class="line"><span class="number">5</span>d614e18da36f9d7b3536566205281743adc95c5 <span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="symbol">6379@</span><span class="number">16379</span> myself,master - <span class="number">0</span> <span class="number">1573794294000</span> <span class="number">1</span> connected <span class="number">0</span><span class="number">-2730</span></span><br><span class="line"><span class="number">6fe42</span>df7ea9c4dbb00d9bae6f7e4238367b1089b <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="symbol">6379@</span><span class="number">16379</span> master - <span class="number">0</span> <span class="number">1573794292212</span> <span class="number">2</span> connected <span class="number">2731</span><span class="number">-5460</span></span><br><span class="line">e3beb9f45b73b265050499ee093ed1a473a3d566 <span class="number">192.168</span><span class="number">.32</span><span class="number">.83</span>:<span class="symbol">6379@</span><span class="number">16379</span> master - <span class="number">0</span> <span class="number">1573794295286</span> <span class="number">4</span> connected <span class="number">8192</span><span class="number">-10922</span></span><br><span class="line"><span class="number">8</span>ae323030e3ae28519a27058c6592b94d1aae734 <span class="number">192.168</span><span class="number">.32</span><span class="number">.84</span>:<span class="symbol">6379@</span><span class="number">16379</span> master - <span class="number">0</span> <span class="number">1573794295000</span> <span class="number">5</span> connected <span class="number">10923</span><span class="number">-13652</span></span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt;</span><br></pre></td></tr></table></figure></arg></p><p>&emsp;&emsp;如果设置slave数量为2，若创建集群是加入的服务器数量不够9台，则<strong>会报错：</strong><br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>CentOS8 ~]#redis-trib.rb create --replicas <span class="number">2</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.83</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.84</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.85</span>:<span class="number">6379</span></span><br><span class="line">&gt;&gt;&gt; Creating cluster</span><br><span class="line">*** ERROR: Invalid configuration <span class="keyword">for</span> cluster creation.</span><br><span class="line">*** Redis Cluster requires at least <span class="number">3</span> master nodes.</span><br><span class="line">*** This <span class="keyword">is</span> <span class="keyword">not</span> possible with <span class="number">6</span> nodes <span class="keyword">and</span> <span class="number">2</span> replicas per node.</span><br><span class="line">*** At least <span class="number">9</span> nodes are required.</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;若之前有创建集群失败的一些操作，或集群中有的redis服务器中有数据信息的话，也是无法创建成功的。会报类似如下如下信息：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/share/gems/gems/redis-<span class="number">4.1</span>.<span class="number">3</span>/<span class="class"><span class="keyword">lib</span>/<span class="title">redis</span>/<span class="title">client</span>.<span class="title">rb</span>:126:<span class="title">in</span> `<span class="title">call</span>': <span class="title">ERR</span> <span class="title">Slot</span> 2823 <span class="title">is</span> <span class="title">already</span> <span class="title">busy</span> (<span class="title">Redis::CommandError</span>)</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;所以我们一般在创建集群之前，先连上redis服务器清空数据，并重置集群关系，确保所有的redis服务器都没有数据且都为单机master。<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FLUSHALL</span><br><span class="line"><span class="keyword">cluster</span> <span class="keyword">reset</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后执行创建集群命令<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis-trib.rb create --replicas <span class="number">1</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.83</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.84</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.85</span>:<span class="number">6379</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;即可成功创建集群。连接redis，登陆，即可看到集群主从关系。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>CentOS8 ~]#redis-cli</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; cluster nodes</span><br><span class="line">NOAUTH Authentication required.</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; auth <span class="number">123456</span></span><br><span class="line">OK</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt; cluster nodes</span><br><span class="line">c65ab2a5e9d8a9435d54f0ef7db302c62b6f9308 <span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="symbol">6379@</span><span class="number">16379</span> master - <span class="number">0</span> <span class="number">1573798716854</span> <span class="number">3</span> connected <span class="number">10923</span><span class="number">-16383</span></span><br><span class="line">a13d711b6b54909e5aed44cc8f75195915bbfb95 <span class="number">192.168</span><span class="number">.32</span><span class="number">.85</span>:<span class="symbol">6379@</span><span class="number">16379</span> slave <span class="number">6fe42</span>df7ea9c4dbb00d9bae6f7e4238367b1089b <span class="number">0</span> <span class="number">1573798715000</span> <span class="number">6</span> connected</span><br><span class="line"><span class="number">5</span>d614e18da36f9d7b3536566205281743adc95c5 <span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="symbol">6379@</span><span class="number">16379</span> myself,master - <span class="number">0</span> <span class="number">1573798716000</span> <span class="number">1</span> connected <span class="number">0</span><span class="number">-5460</span></span><br><span class="line"><span class="number">6fe42</span>df7ea9c4dbb00d9bae6f7e4238367b1089b <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="symbol">6379@</span><span class="number">16379</span> master - <span class="number">0</span> <span class="number">1573798717877</span> <span class="number">2</span> connected <span class="number">5461</span><span class="number">-10922</span></span><br><span class="line"><span class="number">8</span>ae323030e3ae28519a27058c6592b94d1aae734 <span class="number">192.168</span><span class="number">.32</span><span class="number">.84</span>:<span class="symbol">6379@</span><span class="number">16379</span> slave <span class="number">5</span>d614e18da36f9d7b3536566205281743adc95c5 <span class="number">0</span> <span class="number">1573798715834</span> <span class="number">5</span> connected</span><br><span class="line">e3beb9f45b73b265050499ee093ed1a473a3d566 <span class="number">192.168</span><span class="number">.32</span><span class="number">.83</span>:<span class="symbol">6379@</span><span class="number">16379</span> slave c65ab2a5e9d8a9435d54f0ef7db302c62b6f9308 <span class="number">0</span> <span class="number">1573798716000</span> <span class="number">4</span> connected</span><br><span class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;监控集群状态<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-trib.rb<span class="built_in"> check </span>192.168.32.8:6379</span><br></pre></td></tr></table></figure></p><h5 id="Redis-5"><a href="#Redis-5" class="headerlink" title="Redis 5"></a>Redis 5</h5><p>&emsp;&emsp;Redis 5 版本可以直接用redis-cli客户端命令加各种命令参数来管理创建集群(配置文件中如果已配置正确的密码，则不需要-a 选项，-a选项会有warning警告)。<br>&emsp;&emsp;创建集群<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -a <span class="number">123456</span> --cluster create --cluster-replicas <span class="number">1</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.83</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.84</span>:<span class="number">6379</span> \</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.85</span>:<span class="number">6379</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;监控集群状态<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -a 123456 --cluster<span class="built_in"> check </span>192.168.32.8:6379</span><br></pre></td></tr></table></figure></p><h4 id="集群管理维护"><a href="#集群管理维护" class="headerlink" title="集群管理维护"></a>集群管理维护</h4><p>&emsp;&emsp;集群运行时间长久之后，难免由于硬件故障、网络规划、 业务增长等原因对已有集群进行相应的调整， 比如增加 Redis node 节点、 减少节点、 节点迁移、更换服务器等。</p><h5 id="动态添加节点"><a href="#动态添加节点" class="headerlink" title="动态添加节点"></a>动态添加节点</h5><p>&emsp;&emsp;同步之前 Redis node 的配置文件到 192.168.32.86 Redis 编译安装目录， 注意修改配置文件的监听 IP。<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp redis.conf <span class="number">192.168</span>.<span class="number">32.86</span><span class="symbol">:/apps/redis/etc/</span></span><br><span class="line">scp redis_638<span class="number">0</span>.conf <span class="number">192.168</span>.<span class="number">32.86</span><span class="symbol">:/apps/redis/etc/</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;对预备加入的redis服务器清除数据并执行集群重置<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FLUSHALL</span><br><span class="line"><span class="keyword">cluster</span> <span class="keyword">reset</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<strong>redis3、4</strong> 中添加节点（Adding node 192.168.32.87:6379 to cluster 192.168.32.8:6379）<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-trib.rb<span class="built_in"> add-node </span>192.168.32.87:6379 192.168.32.8:6379</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<strong>redis5</strong> 中添加节点（Adding node 192.168.32.87:6379 to cluster 192.168.32.8:6379）<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --cluster<span class="built_in"> add-node </span>192.168.32.87:6379 192.168.32.8:6379</span><br></pre></td></tr></table></figure></p><h5 id="重新分配槽位"><a href="#重新分配槽位" class="headerlink" title="重新分配槽位"></a>重新分配槽位</h5><p>&emsp;&emsp;集群槽位迁移时，迁出的服务器中不能有数据，否则会迁移失败并终止，且<strong>需要修复集群</strong>，才可以进行第二次迁移。<br>&emsp;&emsp;<strong>redis3、4</strong> 中对新加的主机重新分配槽位(后可跟集群中任意主机ip:port):<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">redis-trib</span><span class="selector-class">.rb</span> <span class="selector-tag">reshard</span> 192<span class="selector-class">.168</span><span class="selector-class">.32</span><span class="selector-class">.8</span><span class="selector-pseudo">:6379</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<strong>redis5</strong> 对新加的主机重新分配槽位(后可跟集群中任意主机ip:port):<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --cluster reshard <span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">6379</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;输入命令后根据提示输入<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">How many slots <span class="keyword">do</span> you want <span class="keyword">to</span> <span class="keyword">move</span> (<span class="keyword">from</span> <span class="number">1</span> <span class="keyword">to</span> <span class="number">16384</span>)? <span class="number">4096</span>  <span class="comment">#需要迁移多少槽位</span></span><br><span class="line">What <span class="keyword">is</span> the receiving node <span class="keyword">ID</span>? <span class="number">5</span>d614e18da36f9d7b3536566205281743adc95c5 <span class="comment">#选择迁移到哪个redis主机</span></span><br><span class="line">What <span class="keyword">is</span> the receiving node <span class="keyword">ID</span>? <span class="number">6</span>bffc0037eea959f0dcc11aca657f928d86cfc75</span><br><span class="line">Please enter <span class="keyword">all</span> the <span class="keyword">source</span> node IDs.</span><br><span class="line">  <span class="keyword">Type</span> <span class="string">'all'</span> <span class="keyword">to</span> <span class="keyword">use</span> <span class="keyword">all</span> the nodes <span class="keyword">as</span> <span class="keyword">source</span> nodes <span class="keyword">for</span> the <span class="keyword">hash</span> slots.</span><br><span class="line">  <span class="keyword">Type</span> <span class="string">'done'</span> once you entered <span class="keyword">all</span> the <span class="keyword">source</span> nodes IDs.</span><br><span class="line"><span class="keyword">Source</span> node <span class="comment">#1:6bffc0037eea959f0dcc11aca657f928d86cfc75   #选择从哪个主机迁出</span></span><br><span class="line"><span class="keyword">Source</span> node <span class="comment">#2:done             #输入done结束选择</span></span><br><span class="line"><span class="keyword">Do</span> you want <span class="keyword">to</span> proceed <span class="keyword">with</span> the proposed reshard plan (yes/<span class="keyword">no</span>)? yes  <span class="comment">#是否执行，yes确认，之后就会迁移完毕</span></span><br></pre></td></tr></table></figure></p><h5 id="修复集群"><a href="#修复集群" class="headerlink" title="修复集群"></a>修复集群</h5><p>&emsp;&emsp;如果迁移失败，则需要修复集群。</p><p>&emsp;&emsp;<strong>redis3、4</strong> 中对对报错redis服务器进行单独修复(后跟需要修复的主机ip:port):<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">redis-trib</span><span class="selector-class">.rb</span> <span class="selector-tag">fix</span> 192<span class="selector-class">.168</span><span class="selector-class">.32</span><span class="selector-class">.82</span><span class="selector-pseudo">:6379</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<strong>redis5</strong> 中对对报错redis服务器进行单独修复(后跟需要修复的主机ip:port):<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --cluster fix <span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">6379</span></span><br></pre></td></tr></table></figure></p><h5 id="配置主从关系"><a href="#配置主从关系" class="headerlink" title="配置主从关系"></a>配置主从关系</h5><p>&emsp;&emsp;在整个 Redis cluster 集群中，每个 master 至少有一个 slave。也可以有多个，但是至少要有一个提供数据备份和服务高可用。<br>&emsp;&emsp;<code>redis-trib.rb info 192.168.32.8:6379</code><br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>CentOS8 ~]#redis-trib.rb info <span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">6379</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">6379</span> (<span class="number">5</span>d614e18...) -&gt; <span class="number">0</span> keys | <span class="number">4096</span> slots | <span class="number">1</span> slaves.</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">6379</span> (c65ab2a5...) -&gt; <span class="number">0</span> keys | <span class="number">4096</span> slots | <span class="number">0</span> slaves.</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">6379</span> (<span class="number">6fe42</span>df7...) -&gt; <span class="number">0</span> keys | <span class="number">4096</span> slots | <span class="number">1</span> slaves.</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.87</span>:<span class="number">6379</span> (<span class="number">6</span>bffc003...) -&gt; <span class="number">0</span> keys | <span class="number">4096</span> slots | <span class="number">1</span> slaves.</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.86</span>:<span class="number">6379</span> (e06732b2...) -&gt; <span class="number">0</span> keys | <span class="number">0</span> slots | <span class="number">0</span> slaves.</span><br><span class="line">[OK] <span class="number">0</span> keys <span class="keyword">in</span> <span class="number">5</span> masters.</span><br><span class="line"><span class="number">0.00</span> keys per slot on average.</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;我们看到之前的3主3从结构因为我们加了两个服务器变成了5主3从，新加的两个服务器，我们需要将它们设置为一主一从来实现高可用。于是我们要将192.168.32.86变为192.168.32.82的slave。<br>&emsp;&emsp;连接登陆192.168.32.86上的redis服务器，先查好192.168。32.82的ID为c65ab2a5e9d8a9435d54f0ef7db302c62b6f9308，执行<br><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cluster replicate <span class="keyword">c</span><span class="number">65</span>ab<span class="number">2</span>a<span class="number">5e9</span>d<span class="number">8</span>a<span class="number">9435</span>d<span class="number">54</span>f<span class="number">0</span>ef<span class="number">7</span>db<span class="number">302</span><span class="keyword">c</span><span class="number">62</span>b<span class="number">6</span>f<span class="number">9308</span></span><br></pre></td></tr></table></figure></p><h5 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h5><p>&emsp;&emsp;<strong>删除节点，需要先将redis主机上的槽位都迁移到其他主机上才可以操作。</strong><br>&emsp;&emsp;迁移完成后，<strong>redis3、4</strong> 删除节点（要删除的redis主机要写节点号，集群可以写集群中任意主机ip+port）</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>CentOS8 ~]#redis-trib.rb del-node <span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">6379</span> <span class="number">6</span>bffc0037eea959f0dcc11aca657f928d86cfc75</span><br><span class="line">&gt;&gt;&gt; Removing node <span class="number">6</span>bffc0037eea959f0dcc11aca657f928d86cfc75 <span class="keyword">from</span> cluster <span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">6379</span></span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER FORGET messages to the cluster...</span><br><span class="line">&gt;&gt;&gt; SHUTDOWN the node.</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;<strong>redis5</strong> 删除节点<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --cluster del-node <span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">6379</span> <span class="number">6</span>bffc0037eea959f0dcc11aca657f928d86cfc75</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;主节点被删除之后，其之前它的 slave 自动称为了 Redis 集群中其他 master的 slave，此节点如果不需要也可以一并删除。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;redis高可用一般有两种方式实现：哨兵和集群。在哨兵 sentinel 机制中，可以解决 redis 高可用的问题， 即当 master 故障后可以自动将 slave 提升为 master 从而可以保证 redis 服务的正常使用，但是无法解决 redis 单机写入的瓶颈问题， 即单机的 redis 写入性能受限于单机的内存大小、 并发数量、 网卡速率等因素。&lt;br&gt;&amp;emsp;&amp;emsp;redis 官方在 redis 3.0 版本之后推出了无中心架构的 redis cluster机制， 在无中心的 redis 集群当中，其每个节点保存当前节点数据和整个集群状态,每个节点都和其他所有节点连接， 特点如下：&lt;br&gt;
    
    </summary>
    
      <category term="NotOnlySQL" scheme="https://hewanyue.com/categories/NotOnlySQL/"/>
    
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="redis" scheme="https://hewanyue.com/tags/redis/"/>
    
      <category term="高可用" scheme="https://hewanyue.com/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
      <category term="集群" scheme="https://hewanyue.com/tags/%E9%9B%86%E7%BE%A4/"/>
    
      <category term="Sentinel" scheme="https://hewanyue.com/tags/Sentinel/"/>
    
  </entry>
  
  <entry>
    <title>一键源码编译安装redis</title>
    <link href="https://hewanyue.com//blog/f2c1a89e.html"/>
    <id>https://hewanyue.com//blog/f2c1a89e.html</id>
    <published>2019-11-13T03:06:46.000Z</published>
    <updated>2019-12-04T02:02:46.558Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;Redis 和 Memcached 是非关系型数据库也称为 NoSQL 数据库， MySQL、 Mariadb、 SQLServer、 PostgreSQL、 Oracle 数据库属于关系型数据(RDBMS, Relational Database Management System)。<br>&emsp;&emsp;Redis(Remote Dictionary Server)在 2009 年发布， 开发者 Salvatore Sanfilippo 是意大利开发者， 他本想为自己的公司开发一个用于替换 MySQL 的产品 Redis， 但是没有想到他把 Redis 开源后大受欢迎，短短几年， Redis 就有了很大的用户群体，目前国内外使用的公司有知乎&gt;网、新浪微博、 GitHub 等。<br>&emsp;&emsp;redis 是一个开源的、 遵循 BSD 协议的、 基于内存的而且目前比较流行的键值数据库(key-value database)，是一个非关系型数据库，redis 提供将内存通过网络远程共享的一种服务，提供类似功能的还有 memcache，但相比 memcache， redis 还提供了易扩展、高性能、 具备数据持久性等功能。<br>&emsp;&emsp;Redis 在高并发、低延迟环境要求比较高的环境使用量非常广泛， 目前 redis 在 DBEngine 月排行榜 <a href="https://db-engines.com/en/ranking" rel="noopener" target="_blank">https://db-engines.com/en/ranking</a> 中一直比较靠前，而且一直是键值型存储类的首位。<br><a id="more"></a></p><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><p>&emsp;&emsp;redis在centos版本自带的yum源中版本比较低，一般都需要我们编译安装更高版本的redis。</p><h4 id="准备源码包"><a href="#准备源码包" class="headerlink" title="准备源码包"></a>准备源码包</h4><p>&emsp;&emsp;可以先用下载工具去官网下载好源码包，下载链接为 <a href="https://db-engines.com/en/ranking" rel="noopener" target="_blank">https://db-engines.com/en/ranking</a>  。<br>&emsp;&emsp;出于稳定性要求，一般来说实际生产中不会选用最新版的redis，避免因为漏洞造成服务器的安全隐患，所以本次演示，我们选用目前redis4的最新版本，redis-4.0.14来安装。</p><h4 id="编译安装-1"><a href="#编译安装-1" class="headerlink" title="编译安装"></a>编译安装</h4><p>&emsp;&emsp;<code>tar xf redis-4.0.14..tar.gz</code><br>&emsp;&emsp;<code>cd redis-4.0.14</code><br>&emsp;&emsp;编译安装redis的依赖包不多，有make和gcc就够了。<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> make gcc -y</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;如果是最小化安装的新系统，忘记安装gcc的话直接去尝试编译安装redis，就会遇到报错：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">make[<span class="number">3</span>]: Entering directory <span class="string">'/root/redis-4.0.14/deps/hiredis'</span></span><br><span class="line">gcc -std=c99 -pedantic -c -O3 -fPIC  -Wall -W -Wstrict-prototypes -Wwrite-<span class="built_in">string</span>s -g -ggdb  net.c</span><br><span class="line">make[<span class="number">3</span>]: gcc: Command <span class="keyword">not</span> found</span><br><span class="line">make[<span class="number">3</span>]: *** [Makefile:<span class="number">156</span>: net.o] Error <span class="number">127</span></span><br><span class="line">make[<span class="number">3</span>]: Leaving directory <span class="string">'/root/redis-4.0.14/deps/hiredis'</span></span><br><span class="line">make[<span class="number">2</span>]: *** [Makefile:<span class="number">46</span>: hiredis] Error <span class="number">2</span></span><br><span class="line">make[<span class="number">2</span>]: Leaving directory <span class="string">'/root/redis-4.0.14/deps'</span></span><br><span class="line">make[<span class="number">1</span>]: [Makefile:<span class="number">180</span>: persist-settings] Error <span class="number">2</span> (ignored)</span><br><span class="line">    CC adlist.o</span><br><span class="line">/bin/sh: cc: command <span class="keyword">not</span> found</span><br><span class="line">make[<span class="number">1</span>]: *** [Makefile:<span class="number">228</span>: adlist.o] Error <span class="number">127</span></span><br><span class="line">make[<span class="number">1</span>]: Leaving directory <span class="string">'/root/redis-4.0.14/src'</span></span><br><span class="line">make: *** [Makefile:<span class="number">9</span>: install] Error <span class="number">2</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;提示没装gcc，再回头补上,<code>yum install gcc -y</code>，也还是会报错的。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS8 redis-4.0.14]<span class="comment">#make PREFIX=/apps/redis install</span></span><br><span class="line">cd src &amp;&amp; make <span class="keyword">install</span></span><br><span class="line">make[<span class="number">1</span>]: Entering <span class="keyword">directory</span> <span class="string">'/root/redis-4.0.14/src'</span></span><br><span class="line">    CC adlist.o</span><br><span class="line"><span class="keyword">In</span> <span class="keyword">file</span> included <span class="keyword">from</span> adlist.c:<span class="number">34</span>:</span><br><span class="line">zmalloc.h:<span class="number">50</span>:<span class="number">10</span>: fatal <span class="keyword">error</span>: jemalloc/jemalloc.h: <span class="keyword">No</span> such <span class="keyword">file</span> <span class="keyword">or</span> <span class="keyword">directory</span></span><br><span class="line"> <span class="comment">#include &lt;jemalloc/jemalloc.h&gt;</span></span><br><span class="line">          ^~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">compilation terminated.</span><br><span class="line">make[<span class="number">1</span>]: *** [Makefile:<span class="number">228</span>: adlist.o] <span class="keyword">Error</span> <span class="number">1</span></span><br><span class="line">make[<span class="number">1</span>]: Leaving <span class="keyword">directory</span> <span class="string">'/root/redis-4.0.14/src'</span></span><br><span class="line">make: *** [Makefile:<span class="number">9</span>: <span class="keyword">install</span>] <span class="keyword">Error</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;这是因为上次的编译失败，有残留的文件，我们需要清理下，<code>make distclean</code>，然后重新编译就可以了，<code>make PREFIX=/apps/redis install</code>。<br>&emsp;&emsp;网上也有说可以通过加选项make MALLOC=libc来解决，不过其实是有一些隐患的。首先我们要知道redis 需要使用内存分配器的， 默认是指定内存分配器为 jemalloc ，make MALLOC=libc 就是指定内存分配器为 libc ，而jemalloc 内存分配器在实践中处理内存碎片是要比libc 好的，而且在README.md 文档也说明到了，jemalloc内存分配器也是包含在源码包里面的，可以在deps 目录下看到 jemalloc 目录。<br>&emsp;&emsp;编译完成后，接下来我们还需要几步操作。<br>&emsp;&emsp;创建目录结构<code>mkdir /apps/redis/{etc,logs,data,run}</code><br>&emsp;&emsp;从源码包中复制配置文件<code>cp redis.conf /apps/redis/etc/</code><br>&emsp;&emsp;创建systemctl服务启动脚本，为了避免安全隐患，我们还要将redis服务设为以redis身份启动，所以还要修改目录权限<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/redis.service &lt;&lt;<span class="string">"END"</span></span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=Redis persistent key-value database</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"><span class="attribute">After</span>=network-online.target</span><br><span class="line"><span class="attribute">Wants</span>=network-online.target</span><br><span class="line">[Service]</span><br><span class="line"><span class="comment">#ExecStart=/usr/bin/redis-server /etc/redis.conf --supervised systemd</span></span><br><span class="line"><span class="attribute">ExecStart</span>=/apps/redis/bin/redis-server /apps/redis/etc/redis.conf --supervised systemd</span><br><span class="line"><span class="attribute">ExecReload</span>=/bin/kill -s HUP <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attribute">ExecStop</span>=/bin/kill -s QUIT <span class="variable">$MAINPID</span></span><br><span class="line"><span class="attribute">Type</span>=notify</span><br><span class="line"><span class="attribute">User</span>=redis</span><br><span class="line"><span class="attribute">Group</span>=redis</span><br><span class="line"><span class="attribute">RuntimeDirectory</span>=redis</span><br><span class="line"><span class="attribute">RuntimeDirectoryMode</span>=0755</span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">END</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;创建redis用户，并修改redis目录属主属组。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd -g <span class="number">379</span> redis &amp;&amp; useradd -u <span class="number">379</span> -g <span class="number">379</span> redis -s /sbin/nologin</span><br><span class="line">chown redis.redis -R /apps/redis</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;修改PATH变量或者直接用软链接的方式(用一个即可，效果一样)，方便执行redis命令。<br>&emsp;&emsp;<code>ln -sv /apps/redis/bin/* /usr/local/bin/</code>(软链接)<br>&emsp;&emsp;<code>echo &quot;PATH=/apps/redis/bin:$PATH&quot; &gt; /etc/profile.d/redis.sh；. /etc/profile.d/redis.sh</code>(改PATH变量)</p><h3 id="修改内核参数"><a href="#修改内核参数" class="headerlink" title="修改内核参数"></a>修改内核参数</h3><p>&emsp;&emsp;这时redis服务就其实已经搭建完成了，已经可以通过服务脚本进行启动了。可是如果直接启动会有一些[warning]信息，而且很有可能在高并发的时候导致redis崩溃。<br><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">13636</span>:M <span class="number">13</span> Nov <span class="number">10</span>:<span class="number">37</span>:<span class="number">06.195</span> # WARNING: The TCP backlog setting of <span class="number">511</span> cannot be enforced because /<span class="keyword">proc</span>/sys/net/core/somaxconn<span class="title"> is</span> set<span class="title"> to</span> the<span class="title"> lower</span> value<span class="title"> of</span> 128.</span><br><span class="line">13636:M 13<span class="title"> Nov</span> 10:37:06.195 #<span class="title"> Server</span> initialized</span><br><span class="line">13636:M 13<span class="title"> Nov</span> 10:37:06.195 #<span class="title"> WARNING</span> overcommit_memory<span class="title"> is</span> set<span class="title"> to</span> 0!<span class="title"> Background</span> save<span class="title"> may</span> fail<span class="title"> under</span> low<span class="title"> memory</span> condition.<span class="title"> To</span> fix<span class="title"> this</span> issue<span class="title"> add</span> 'vm.overcommit_memory = 1'<span class="title"> to</span> /etc/sysctl.conf<span class="title"> and</span> then<span class="title"> reboot</span> or<span class="title"> run</span> the<span class="title"> command</span> 'sysctl<span class="title"> vm.overcommit_memory=1'</span> for<span class="title"> this</span> to<span class="title"> take</span> effect.</span><br><span class="line">13636:M 13<span class="title"> Nov</span> 10:37:06.195 #<span class="title"> WARNING</span> you<span class="title"> have</span> Transparent<span class="title"> Huge</span> Pages (THP)<span class="title"> support</span> enabled<span class="title"> in</span> your<span class="title"> kernel.</span> This<span class="title"> will</span> create<span class="title"> latency</span> and<span class="title"> memory</span> usage<span class="title"> issues</span> with<span class="title"> Redis.</span> To<span class="title"> fix</span> this<span class="title"> issue</span> run<span class="title"> the</span> command 'echo<span class="title"> never</span> &gt; /sys/kernel/mm/transparent_hugepage/enabled'<span class="title"> as</span> root,<span class="title"> and</span> add<span class="title"> it</span> to<span class="title"> your</span> /etc/rc.local<span class="title"> in</span> order<span class="title"> to</span> retain<span class="title"> the</span> setting<span class="title"> after</span> a<span class="title"> reboot.</span> Redis<span class="title"> must</span> be<span class="title"> restarted</span> after<span class="title"> THP</span> is<span class="title"> disabled.</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;我们可以通过修改一些内核参数来避免这一风险。</p><ul><li>TCP backlog 参数控制的是三次握手的时候 server 端收到 client ack 确认号之后的队列值，redis默认为511。我们需要将内核的net.core.somaxconn值(系统默认128)更改为大于511，或将redis的队列之修改小于128.</li><li>将vm.overcommit_memory值改为1<br>0、表示内核将检查是否有足够的可用内存供应用进程使用；如果有足够的可用内存，内存申请允许；否则，内存申请失败，并把错误返回给应用进程。<br>1、表示内核允许分配所有的物理内存，而不管当前的内存状态如何。<br>2、表示内核允许分配超过所有物理内存和交换空间总和的内存</li><li>transparent hugepage：<br>开启大页内存动态分配，需要关闭让 redis 负责内存管理。</li></ul><p>&emsp;&emsp;所以，我们执行下面操作<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /etc/sysctl<span class="selector-class">.conf</span> &lt;&lt; END</span><br><span class="line">net<span class="selector-class">.core</span><span class="selector-class">.somaxconn</span> = <span class="number">512</span></span><br><span class="line">vm<span class="selector-class">.overcommit_memory</span> = <span class="number">1</span></span><br><span class="line">END</span><br></pre></td></tr></table></figure></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo never &gt; <span class="regexp">/sys/</span>kernel<span class="regexp">/mm/</span>transparent_hugepage<span class="regexp">/enabled</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;至此，redis就正式调试完成，可以正常使用了。</p><h3 id="附：一键编译安装redis脚本"><a href="#附：一键编译安装redis脚本" class="headerlink" title="附：一键编译安装redis脚本"></a>附：一键编译安装redis脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">DST=<span class="string">"/apps"</span></span><br><span class="line"><span class="comment">#[ -d $DST ] || &#123; echo "install into $DST fail,No such file or directory" ;exit 10;&#125;</span></span><br><span class="line">[ -a redis-*.tar.* ] || &#123; <span class="built_in">echo</span> <span class="string">' the absence of redis.tar.gz'</span> ;<span class="built_in">exit</span> 1;&#125;</span><br><span class="line">[ -a /usr/lib/systemd/system/redis.service ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">'redis.service is exist,redis is aready installed'</span> ;<span class="built_in">exit</span> 2;&#125;</span><br><span class="line">[ -d <span class="variable">$DST</span>/redis* ] &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">"redis is aready installed into <span class="variable">$DST</span>/redis"</span> ;<span class="built_in">exit</span> 3;&#125;</span><br><span class="line">id redis &amp;&gt;/dev/null &amp;&amp; &#123; <span class="built_in">echo</span> <span class="string">'user redis is exist,redis is aready installed'</span> ; <span class="built_in">exit</span> 4;&#125; || &#123; groupadd -g 379 redis &amp;&amp; useradd -u 379 -g 379 redis -s /sbin/nologin || &#123; <span class="built_in">echo</span> user 379 is exist ;<span class="built_in">exit</span> 5; &#125; &#125;</span><br><span class="line">mkdir -p <span class="variable">$DST</span>/redis</span><br><span class="line">yum  install  -y make gcc</span><br><span class="line"><span class="comment">#yum  install  -y make gcc wget</span></span><br><span class="line"><span class="comment">#wget http://download.redis.io/releases/redis-4.0.14.tar.gz</span></span><br><span class="line">tar xf redis-*.tar.*</span><br><span class="line">PTH=`find . -name <span class="string">"redis*"</span> -<span class="built_in">type</span> d |head -n1`</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$PTH</span></span><br><span class="line">make PREFIX=<span class="variable">$DST</span>/redis install</span><br><span class="line">mkdir <span class="variable">$DST</span>/redis/&#123;etc,logs,data,run&#125;</span><br><span class="line">cp redis.conf /apps/redis/etc/</span><br><span class="line">chown redis.redis -R /apps/redis</span><br><span class="line">cat &gt; /usr/lib/systemd/system/redis.service &lt;&lt; END</span><br><span class="line">[Unit]</span><br><span class="line">Description=Redis persistent key-value database</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">[Service]</span><br><span class="line"><span class="comment">#ExecStart=/usr/bin/redis-server /etc/redis.conf --supervised systemd</span></span><br><span class="line">ExecStart=<span class="variable">$DST</span>/redis/bin/redis-server <span class="variable">$DST</span>/redis/etc/redis.conf --supervised systemd</span><br><span class="line">ExecReload=/bin/<span class="built_in">kill</span> -s HUP \<span class="variable">$MAINPID</span></span><br><span class="line">ExecStop=/bin/<span class="built_in">kill</span> -s QUIT \<span class="variable">$MAINPID</span></span><br><span class="line">Type=notify</span><br><span class="line">User=redis</span><br><span class="line">Group=redis</span><br><span class="line">RuntimeDirectory=redis</span><br><span class="line">RuntimeDirectoryMode=0755</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">END</span><br><span class="line"></span><br><span class="line">ln -sv <span class="variable">$DST</span>/redis/bin/* /usr/<span class="built_in">local</span>/bin/</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; /etc/sysctl.conf &lt;&lt; END</span><br><span class="line">net.core.somaxconn = 512</span><br><span class="line">vm.overcommit_memory = 1</span><br><span class="line">END</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> --now redis</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;Redis 和 Memcached 是非关系型数据库也称为 NoSQL 数据库， MySQL、 Mariadb、 SQLServer、 PostgreSQL、 Oracle 数据库属于关系型数据(RDBMS, Relational Database Management System)。&lt;br&gt;&amp;emsp;&amp;emsp;Redis(Remote Dictionary Server)在 2009 年发布， 开发者 Salvatore Sanfilippo 是意大利开发者， 他本想为自己的公司开发一个用于替换 MySQL 的产品 Redis， 但是没有想到他把 Redis 开源后大受欢迎，短短几年， Redis 就有了很大的用户群体，目前国内外使用的公司有知乎&amp;gt;网、新浪微博、 GitHub 等。&lt;br&gt;&amp;emsp;&amp;emsp;redis 是一个开源的、 遵循 BSD 协议的、 基于内存的而且目前比较流行的键值数据库(key-value database)，是一个非关系型数据库，redis 提供将内存通过网络远程共享的一种服务，提供类似功能的还有 memcache，但相比 memcache， redis 还提供了易扩展、高性能、 具备数据持久性等功能。&lt;br&gt;&amp;emsp;&amp;emsp;Redis 在高并发、低延迟环境要求比较高的环境使用量非常广泛， 目前 redis 在 DBEngine 月排行榜 &lt;a href=&quot;https://db-engines.com/en/ranking&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;https://db-engines.com/en/ranking&lt;/a&gt; 中一直比较靠前，而且一直是键值型存储类的首位。&lt;br&gt;
    
    </summary>
    
      <category term="NotOnlySQL" scheme="https://hewanyue.com/categories/NotOnlySQL/"/>
    
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="一键安装" scheme="https://hewanyue.com/tags/%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85/"/>
    
      <category term="redis" scheme="https://hewanyue.com/tags/redis/"/>
    
      <category term="源码编译" scheme="https://hewanyue.com/tags/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"/>
    
      <category term="内核参数" scheme="https://hewanyue.com/tags/%E5%86%85%E6%A0%B8%E5%8F%82%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>故障:/etc/fstab中NFS自动挂载失败</title>
    <link href="https://hewanyue.com//blog/219b1607.html"/>
    <id>https://hewanyue.com//blog/219b1607.html</id>
    <published>2019-11-11T11:17:33.000Z</published>
    <updated>2019-12-09T02:46:45.608Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;之前配置了一个web集群(其实就3个服务器)，想实现数据共享和动静分离，感觉配置分布式存储比较复杂，也没必要，就打算在搭建一个NFS服务器，共享几个目录，挂载在几个web服务器上。<br>&emsp;&emsp;搭建NFS服务过程很顺利，手动挂载也没问题，然后打算将挂载信息写进<code>/etc/fstab</code>配置文件，实现开机自动挂载。<br><a id="more"></a><br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line"># /etc/fstab</span><br><span class="line"># Created by anaconda on Wed Oct  <span class="number">9</span> <span class="number">08</span>:<span class="number">35</span>:<span class="number">16</span> <span class="number">2019</span></span><br><span class="line">#</span><br><span class="line"># Accessible filesystems, by <span class="built_in">ref</span>erence, are maintained under <span class="string">'/dev/disk/'</span>.</span><br><span class="line"># See man pages fstab(<span class="number">5</span>), findfs(<span class="number">8</span>), mount(<span class="number">8</span>) <span class="keyword">and</span>/<span class="keyword">or</span> blkid(<span class="number">8</span>) <span class="keyword">for</span> more info.</span><br><span class="line">#</span><br><span class="line"># After editing <span class="keyword">this</span> file, run <span class="string">'systemctl daemon-reload'</span> to update systemd</span><br><span class="line"># units generated <span class="keyword">from</span> <span class="keyword">this</span> file.</span><br><span class="line">#</span><br><span class="line">/dev/mapper/cl-root     /                       xfs     defaults        <span class="number">0</span> <span class="number">0</span></span><br><span class="line">UUID=<span class="number">100</span>a90e3<span class="number">-01</span>ac<span class="number">-43</span>aa-b6da-a10a6c105282 /boot                   ext4    defaults        <span class="number">1</span> <span class="number">2</span></span><br><span class="line">/dev/mapper/cl-data     /data                   xfs     defaults        <span class="number">0</span> <span class="number">0</span></span><br><span class="line">/dev/mapper/swap-swap   swap                    swap    defaults        <span class="number">0</span> <span class="number">0</span></span><br><span class="line">/dev/sr0                /cdrom                  iso9660 defaults        <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.85</span>:/data/nfsshare /apps/nginx/html/wordpress/wp-content/uploads nfs defaults,_netdev  <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;以为一切万事大吉之后，重启了机子测试下,<code>df</code>命令一看，发现竟然没有显示，用<code>mount -l</code>命令看了下，也没有挂载信息——竟然没有自动挂载。<br>&emsp;&emsp;开始以为配置文件格式写错了，结果尝试一下<code>mount -a</code>发现一下就挂载成功了。<br>&emsp;&emsp;这就很奇怪了，说明配置文件格式也没问题。<br>&emsp;&emsp;NFS服务器也没任何报错，应该跟NFS服务器没有关系，只是出于某种原因不能自动挂载而已。<br>&emsp;&emsp;可是本地光盘确实可以开机正常挂载的，于是我怀疑是参数写的有问题，不过仔细确认了下，之前参数就是这样的也是可以成功挂载的，抑或是CentOS8有些新特性和改动。上面确实提示<code>After editing this file, run &#39;systemctl daemon-reload&#39; to update systemd units generated from this file</code>，我也尝试了，没有效果，不过既然其他挂载项都没问题，说明问题就在NFS这一行。<br>&emsp;&emsp;于是去查看下系统日志，发现了问题的端倪<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="symbol">CentOS8</span> ~]#tail /var/log/boot.log</span><br><span class="line"><span class="symbol">See</span> <span class="string">'systemctl status "apps-nginx-html-wordpress-wp\\x2dcontent-uploads.mount"'</span> for details.</span><br><span class="line">[<span class="symbol">DEPEND</span>] <span class="symbol">Dependency</span> failed for <span class="symbol">Remote</span> <span class="symbol">File</span> <span class="symbol">Systems</span>.</span><br><span class="line">         <span class="symbol">Starting</span> <span class="symbol">Permit</span> <span class="symbol">User</span> <span class="symbol">Sessions</span>...</span><br><span class="line">         <span class="symbol">Starting</span> <span class="symbol">The</span> nginx <span class="symbol">HTTP</span> and reverse proxy server...</span><br><span class="line">         <span class="symbol">Starting</span> <span class="symbol">Crash</span> recovery kernel arming...</span><br><span class="line">[  <span class="symbol">OK</span>  ] <span class="symbol">Started</span> <span class="symbol">OpenSSH</span> server daemon.</span><br><span class="line">[  <span class="symbol">OK</span>  ] <span class="symbol">Started</span> <span class="symbol">Permit</span> <span class="symbol">User</span> <span class="symbol">Sessions</span>.</span><br><span class="line">         <span class="symbol">Starting</span> <span class="symbol">Terminate</span> <span class="symbol">Plymouth</span> <span class="symbol">Boot</span> <span class="symbol">Screen</span>...</span><br><span class="line">         <span class="symbol">Starting</span> <span class="symbol">Hold</span> until boot process finishes up...</span><br><span class="line">[  <span class="symbol">OK</span>  ] <span class="symbol">Started</span> <span class="symbol">Command</span> <span class="symbol">Scheduler</span>.</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;显示远程服务系统也就是NFS服务挂载失败，查看详细信息。<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>CentOS8 ~]#systemctl status <span class="string">"apps-nginx-html-wordpress-wp\\x2dcontent-uploads.mount"</span></span><br><span class="line">● apps-nginx-html-wordpress-wp\x2dcontent-uploads.mount - /apps/nginx/html/wordpress/wp-content/uploads</span><br><span class="line">   Loaded: loaded (/etc/fstab; generated)</span><br><span class="line">   Active: failed (Result: resources)</span><br><span class="line">    Where: /apps/nginx/html/wordpress/wp-content/uploads</span><br><span class="line">     What: <span class="number">192.168</span><span class="number">.32</span><span class="number">.85</span>:/data/nfsshare</span><br><span class="line">     Docs: man:fstab(<span class="number">5</span>)</span><br><span class="line">           man:systemd-fstab-generator(<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">Nov <span class="number">11</span> <span class="number">16</span>:<span class="number">02</span>:<span class="number">39</span> CentOS8 systemd[<span class="number">1</span>]: apps-nginx-html-wordpress-wp\x2dcontent-uploads.mount: Mount path /apps/nginx/html/wordpress/wp-content/uploads <span class="keyword">is</span> <span class="keyword">not</span> canonical (contains a symlink).</span><br><span class="line">Nov <span class="number">11</span> <span class="number">16</span>:<span class="number">02</span>:<span class="number">39</span> CentOS8 systemd[<span class="number">1</span>]: apps-nginx-html-wordpress-wp\x2dcontent-uploads.mount: Failed to run <span class="string">'mount'</span> task: Too many levels of symbolic links</span><br><span class="line">Nov <span class="number">11</span> <span class="number">16</span>:<span class="number">02</span>:<span class="number">39</span> CentOS8 systemd[<span class="number">1</span>]: apps-nginx-html-wordpress-wp\x2dcontent-uploads.mount: Failed with result <span class="string">'resources'</span>.</span><br><span class="line">Nov <span class="number">11</span> <span class="number">16</span>:<span class="number">02</span>:<span class="number">39</span> CentOS8 systemd[<span class="number">1</span>]: Failed to mount /apps/nginx/html/wordpress/wp-content/uploads.</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;说挂载失败，挂载路径不符合规范<code>is not canonical (contains a symlink).</code>。路径写法应该没问题的，难道是因为<code>Too many levels of symbolic links</code>，层级太多了吗？我记得之前挂载点目录层级结构，比这还长都可以挂载成功的，难道又要归结为CentOS8的新特性了么。<br>&emsp;&emsp;一通百度、google之后，竟然没有人和我遇到的问题一样，挂载点的最大层级数是多大也没人提到过，官方文档也没有查到。<br>&emsp;&emsp;正当我打算将层数改小一些再尝试下的时候，突然看到一篇博客提到<code>Too many levels of symbolic links</code>，不过是在软链接中的报错。我突然想起来，当时我安装完系统后，规划的是讲文档和应用都装在/data目录下，可是我实际操作中比较习惯使用/apps/目录来找各种应用，于是之前编译安装nginx及php之前，我创建了一个软链接<code>ln -s /data/apps /apps</code>，以便/apps下的数据跟系统分区隔离开，在一个单独分区。或许这个<code>is not canonical (contains a symlink).</code>中的symlink说的就是指软链接。<br>&emsp;&emsp;将配置文件修改为<code>192.168.32.85:/data/nfsshare /data/apps/nginx/html/wordpress/wp-content/uploads nfs defaults,_netdev  0 0</code>后，再次重启。<code>df</code>命令查看<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>CentOS8 ~]#df</span><br><span class="line">Filesystem                   <span class="number">1</span>K-blocks    Used Available Use% Mounted on</span><br><span class="line">devtmpfs                        <span class="number">393080</span>       <span class="number">0</span>    <span class="number">393080</span>   <span class="number">0</span>% /dev</span><br><span class="line">tmpfs                           <span class="number">408620</span>       <span class="number">0</span>    <span class="number">408620</span>   <span class="number">0</span>% /dev/shm</span><br><span class="line">tmpfs                           <span class="number">408620</span>    <span class="number">5816</span>    <span class="number">402804</span>   <span class="number">2</span>% /run</span><br><span class="line">tmpfs                           <span class="number">408620</span>       <span class="number">0</span>    <span class="number">408620</span>   <span class="number">0</span>% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/cl-root           <span class="number">52399108</span> <span class="number">2700076</span>  <span class="number">49699032</span>   <span class="number">6</span>% /</span><br><span class="line">/dev/sr0                       <span class="number">6967726</span> <span class="number">6967726</span>         <span class="number">0</span> <span class="number">100</span>% /cdrom</span><br><span class="line">/dev/nvme0n1p1                 <span class="number">8191416</span>  <span class="number">163348</span>   <span class="number">7592256</span>   <span class="number">3</span>% /boot</span><br><span class="line">/dev/mapper/cl-data           <span class="number">41926656</span>  <span class="number">585412</span>  <span class="number">41341244</span>   <span class="number">2</span>% /data</span><br><span class="line"><span class="number">192.168</span><span class="number">.32</span><span class="number">.85</span>:/data/nfsshare  <span class="number">41926656</span>  <span class="number">535040</span>  <span class="number">41391616</span>   <span class="number">2</span>% /data/apps/nginx/html/wordpress/wp-content/uploads</span><br><span class="line">tmpfs                            <span class="number">81724</span>       <span class="number">0</span>     <span class="number">81724</span>   <span class="number">0</span>% /run/user/<span class="number">0</span></span><br><span class="line">[<span class="symbol">root@</span>CentOS8 ~]#</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;挂载成功~问题解决！原来纯属自己挖的坑！<br>&emsp;&emsp;记录一下，也算，增长点见识，吸取些教训。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;之前配置了一个web集群(其实就3个服务器)，想实现数据共享和动静分离，感觉配置分布式存储比较复杂，也没必要，就打算在搭建一个NFS服务器，共享几个目录，挂载在几个web服务器上。&lt;br&gt;&amp;emsp;&amp;emsp;搭建NFS服务过程很顺利，手动挂载也没问题，然后打算将挂载信息写进&lt;code&gt;/etc/fstab&lt;/code&gt;配置文件，实现开机自动挂载。&lt;br&gt;
    
    </summary>
    
      <category term="故障记录" scheme="https://hewanyue.com/categories/%E6%95%85%E9%9A%9C%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="故障" scheme="https://hewanyue.com/tags/%E6%95%85%E9%9A%9C/"/>
    
      <category term="记录" scheme="https://hewanyue.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="排错" scheme="https://hewanyue.com/tags/%E6%8E%92%E9%94%99/"/>
    
      <category term="NFS" scheme="https://hewanyue.com/tags/NFS/"/>
    
      <category term="挂载" scheme="https://hewanyue.com/tags/%E6%8C%82%E8%BD%BD/"/>
    
      <category term="软链接" scheme="https://hewanyue.com/tags/%E8%BD%AF%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>企业级应用：负载均衡层——haproxy(二)</title>
    <link href="https://hewanyue.com//blog/f5daec50.html"/>
    <id>https://hewanyue.com//blog/f5daec50.html</id>
    <published>2019-11-08T07:09:10.000Z</published>
    <updated>2019-11-24T09:55:00.342Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;继续讲解HAProxy的一些进阶配置及用法，包括报文修改，日志配置，压缩功能，后端服务器状态监测及ACL等功能应用。配置环境及配置文件均延续上一篇<a href="https://hewanyue.com/blog/5aeb7732.html">《企业级应用：负载均衡层——haproxy(一)》</a>,有任何疑问可以先看上一篇博客。</p><a id="more"></a><h3 id="haproxy的进阶配置"><a href="#haproxy的进阶配置" class="headerlink" title="haproxy的进阶配置"></a>haproxy的进阶配置</h3><h4 id="haproxy报文修改"><a href="#haproxy报文修改" class="headerlink" title="haproxy报文修改"></a>haproxy报文修改</h4><p>&emsp;&emsp;在http模式下，基于实际需求修改客户端的请求报文与响应报文，通过reqadd和reqdel在请求报文添加删除字段，通过rspadd与rspidel在响应报文中添加与删除字段。<br><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在请求报文尾部添加指定首部</span><br><span class="line">    reqadd <span class="variable">&amp;ltstring</span><span class="variable">&amp;gt</span> [&#123;<span class="meta">if</span> | unless&#125; <span class="variable">&amp;ltcond</span><span class="variable">&amp;gt</span>]</span><br><span class="line">从请求报文中删除匹配正则表达式的首部</span><br><span class="line">    reqdel <span class="variable">&amp;ltsearch</span><span class="variable">&amp;gt</span> [&#123;<span class="meta">if</span> | unless&#125; <span class="variable">&amp;ltcond</span><span class="variable">&amp;gt</span>]</span><br><span class="line">    reqidel <span class="variable">&amp;ltsearch</span><span class="variable">&amp;gt</span> [&#123;<span class="meta">if</span> | unless&#125; <span class="variable">&amp;ltcond</span><span class="variable">&amp;gt</span>]</span><br><span class="line">在响应报文尾部添加指定首部</span><br><span class="line">    rspadd <span class="variable">&amp;ltstring</span><span class="variable">&amp;gt</span> [&#123;<span class="meta">if</span> | unless&#125; <span class="variable">&amp;ltcond</span><span class="variable">&amp;gt</span>]</span><br><span class="line">示例：</span><br><span class="line">    rspadd <span class="meta">X</span>-Via:\ HAPorxy</span><br><span class="line">从响应报文中删除匹配正则表达式的首部</span><br><span class="line">    rspdel <span class="variable">&amp;ltsearch</span><span class="variable">&amp;gt</span> [&#123;<span class="meta">if</span> | unless&#125; <span class="variable">&amp;ltcond</span><span class="variable">&amp;gt</span>]</span><br><span class="line">    rspidel <span class="variable">&amp;ltsearch</span><span class="variable">&amp;gt</span> [&#123;<span class="meta">if</span> | unless&#125; <span class="variable">&amp;ltcond</span><span class="variable">&amp;gt</span>]</span><br><span class="line">示例：</span><br><span class="line">    rspidel server.<span class="comment">* #从相应报文删除server信息</span></span><br><span class="line"><span class="comment">    rspidel X-Powered-By:.* #从响应报文删除X-Powered-By信息</span></span><br></pre></td></tr></table></figure></p><h4 id="HAProxy日志"><a href="#HAProxy日志" class="headerlink" title="HAProxy日志"></a>HAProxy日志</h4><h5 id="HAProxy日志配置"><a href="#HAProxy日志配置" class="headerlink" title="HAProxy日志配置"></a>HAProxy日志配置</h5><p>&emsp;&emsp;需在HAProxy和Rsyslog中分别配置。</p><ul><li>HAProxy配置<figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在global配置项定义：</span><br><span class="line">log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local&#123;<span class="number">1</span><span class="number">-7</span>&#125; info #基于syslog记录日志到指定设备，级别有(err、warning、info、debug)</span><br><span class="line">listen web_port</span><br><span class="line">bind <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">80</span></span><br><span class="line">mode http</span><br><span class="line">log global</span><br><span class="line">server web1 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8080</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></li></ul><p>&emsp;&emsp;然后重启HAProxy<code>systemctl restart haproxy</code></p><ul><li>Rsyslog配置</li></ul><p>&emsp;&emsp;编辑配置文件<code>vim /etc/rsyslog.conf</code><br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$ModLoad</span> imudp</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$UDPServerRun</span> 514</span></span><br><span class="line">local3.* /var/<span class="built-in">log</span>/haproxy.<span class="built-in">log</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后重启Rsyslog<code>systemctl restart rsyslog</code></p><h5 id="HAProxy日志格式"><a href="#HAProxy日志格式" class="headerlink" title="HAProxy日志格式"></a>HAProxy日志格式</h5><p>&emsp;&emsp;将特定信息记录在日志中<br>&emsp;&emsp;配置选项：<br>&emsp;&emsp;<code>capture cookie &amp;ltname&amp;gt len &amp;ltlength&amp;gt</code> #捕获请求和响应报文中的 cookie并记录日志<br>&emsp;&emsp;<code>capture request header &amp;ltname&amp;gt len &amp;ltlength&amp;gt</code> #捕获请求报文中指定的首部内容和长度并记录日志<br>&emsp;&emsp;<code>capture response header &amp;ltname&amp;gt len &amp;ltlength&amp;gt</code> #捕获响应报文中指定的内容和长度首部并记录日志<br>&emsp;&emsp;示例：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">capture request <span class="selector-tag">header</span> Host len <span class="number">256</span></span><br><span class="line">capture request <span class="selector-tag">header</span> User-Agent len <span class="number">512</span></span><br><span class="line">capture request <span class="selector-tag">header</span> Referer len <span class="number">15</span></span><br></pre></td></tr></table></figure></p><h5 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h5><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">172.18</span><span class="number">.32</span><span class="number">.249</span>:<span class="number">80</span></span><br><span class="line">    mode http</span><br><span class="line">    balance roundrobin</span><br><span class="line">    log global</span><br><span class="line">    option httplog #日志格式选项</span><br><span class="line">    capture request header X-Forwarded-For len <span class="number">15</span></span><br><span class="line">    capture request header User-Agent len <span class="number">512</span></span><br><span class="line">    cookie SERVER-COOKIE insert indirect nocache</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">80</span> cookie web1 check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">80</span> cookie web2 check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure><h4 id="压缩功能"><a href="#压缩功能" class="headerlink" title="压缩功能"></a>压缩功能</h4><p>&emsp;&emsp;启用功能可以对响应给客户端的报文进行压缩，以节省网络带宽，但是会占用部分CPU性能。</p><h5 id="配置选项"><a href="#配置选项" class="headerlink" title="配置选项"></a>配置选项</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">compression algo #启用http协议中的压缩机制，常用算法有gzip deflate</span><br><span class="line">   <span class="built_in"> identity </span>#调试使用的压缩方式</span><br><span class="line">    gzip #常用的压缩方式，与各浏览器兼容较好</span><br><span class="line">    deflate #有些浏览器不支持</span><br><span class="line">    raw-deflate #新出的压缩方式</span><br><span class="line">compression<span class="built_in"> type </span>#要压缩的文件类型</span><br></pre></td></tr></table></figure><h5 id="配置示例-1"><a href="#配置示例-1" class="headerlink" title="配置示例"></a>配置示例</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind 172.18.32.249:80</span><br><span class="line">    mode http</span><br><span class="line">    balance roundrobin</span><br><span class="line">    log global</span><br><span class="line">    option httplog</span><br><span class="line"><span class="comment">#    capture request header X-Forwarded-For len 15</span></span><br><span class="line"><span class="comment">#    capture request header User-Agent len 512</span></span><br><span class="line">    compression algo gzip</span><br><span class="line">    compression<span class="built_in"> type </span>compression<span class="built_in"> type </span>text/plain text/html text/css text/xml text/javascript application/javascript</span><br><span class="line">cookie SERVER-COOKIE insert indirect nocache</span><br><span class="line">server web1 192.168.32.81:80 cookie web1 check inter 3000 fall 3 rise 5</span><br><span class="line">server web2 192.168.32.82:80 cookie web2 check inter 3000 fall 3 rise 5</span><br></pre></td></tr></table></figure><h3 id="后端服务器状态监测"><a href="#后端服务器状态监测" class="headerlink" title="后端服务器状态监测"></a>后端服务器状态监测</h3><p>&emsp;&emsp;haproxy能对后端服务器状态进行检测，如果发现后端服务器异常，可以自动将该服务器下线，实现高可用。<br>&emsp;&emsp;haproxy对后端服务器有三种检测方式：</p><ul><li>基于四层的传输端口做状态监测</li><li>基于指定URI 做状态监测</li><li>基于指定URI的request请求头部内容做状态监测<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">option httpchk</span><br><span class="line">option httpchk <span class="variable">&amp;lturi</span><span class="variable">&amp;gt</span></span><br><span class="line">option httpchk <span class="variable">&amp;ltmethod</span><span class="variable">&amp;gt</span> <span class="variable">&amp;lturi</span><span class="variable">&amp;gt</span></span><br><span class="line">option httpchk <span class="variable">&amp;ltmethod</span><span class="variable">&amp;gt</span> <span class="variable">&amp;lturi</span><span class="variable">&amp;gt</span> <span class="variable">&amp;ltversion</span><span class="variable">&amp;gt</span></span><br></pre></td></tr></table></figure></li></ul><p>&emsp;&emsp;之前我们的配置都是基于传输IP加端口对检测，所以status状态页的后端检测状态里显示的是L4，基于指定URI做状态监测，需要持续从服务器get指定页面，会占用消耗一些带宽资源，所以基于指定URI的request请求头部内容做状态监测最为合理，配置如下：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">172.18</span><span class="number">.32</span><span class="number">.249</span>:<span class="number">80</span></span><br><span class="line">    mode http</span><br><span class="line">    balance roundrobin</span><br><span class="line">    log global</span><br><span class="line">    option httplog</span><br><span class="line">#    option httpchk GET /app/monitor/check.html HTTP/<span class="number">1.0</span></span><br><span class="line">    option httpchk HEAD /app/monitor/check.html HTTP/<span class="number">1.0</span>\r\nHost:\ <span class="number">192.168</span><span class="number">.7</span><span class="number">.102</span></span><br><span class="line">    cookie SERVER-COOKIE insert indirect nocache</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">80</span> cookie web1 check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">80</span> cookie web2 check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;这时再去看9999端口的status页，就会看到后端服务器的检测状态为L7OK了</p><h3 id="HAProxy的ACL功能"><a href="#HAProxy的ACL功能" class="headerlink" title="HAProxy的ACL功能"></a>HAProxy的ACL功能</h3><p>&emsp;&emsp;访问控制列表（ACL，Access Control Lists）是一种基于包过滤的访问控制技术，它可以根据设定的条件对经过服务器传输的数据包进行过滤(条件匹配)，即对接收到的报文进行匹配和过滤，基于请求报文头部中的源地址、源端口、目标地址、目标端口、请求方法、URL、文件后缀等信息内容进行匹配并执行进一步操作，允许其通过或丢弃。</p><h4 id="ACL配置选项："><a href="#ACL配置选项：" class="headerlink" title="ACL配置选项："></a>ACL配置选项：</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">acl <span class="variable">&amp;ltaclname</span><span class="variable">&amp;gt</span> <span class="variable">&amp;ltcriterion</span><span class="variable">&amp;gt</span> [flags] [operator] [<span class="variable">&amp;ltvalue</span><span class="variable">&amp;gt</span>]</span><br><span class="line">acl 名称 匹配规范 匹配模式 具体操作符 操作对象类型</span><br></pre></td></tr></table></figure><h5 id="ACL-Name"><a href="#ACL-Name" class="headerlink" title="ACL-Name"></a>ACL-Name</h5><p>&emsp;&emsp;实例：<code>acl image_service hdr_dom(host) -i img.example.com</code><br>&emsp;&emsp;ACL名称，可以使用大字母A-Z、小写字母a-z、数字0-9、冒号：、点.、中横线和下划线，并且严格区分大小写，比如Image_site和image_site完全是两个acl。</p><h5 id="ACL-criterion"><a href="#ACL-criterion" class="headerlink" title="ACL-criterion"></a>ACL-criterion</h5><p>&emsp;&emsp;定义ACL匹配规范<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hdr（[<span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span> [，<span class="variable">&amp;ltocc</span><span class="variable">&amp;gt</span>]]）：完全匹配字符串</span><br><span class="line">hdr_beg（[<span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span> [，<span class="variable">&amp;ltocc</span><span class="variable">&amp;gt</span>]]）：前缀匹配</span><br><span class="line">hdr_dir（[<span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span> [，<span class="variable">&amp;ltocc</span><span class="variable">&amp;gt</span>]]）：路径匹配</span><br><span class="line">hdr_dom（[<span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span> [，<span class="variable">&amp;ltocc</span><span class="variable">&amp;gt</span>]]）：域匹配</span><br><span class="line">hdr_end（[<span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span> [，<span class="variable">&amp;ltocc</span><span class="variable">&amp;gt</span>]]）：后缀匹配</span><br><span class="line">hdr_len（[<span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span> [，<span class="variable">&amp;ltocc</span><span class="variable">&amp;gt</span>]]）：长度匹配</span><br><span class="line">hdr_reg（[<span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span> [，<span class="variable">&amp;ltocc</span><span class="variable">&amp;gt</span>]]）：正则表达式匹配</span><br><span class="line">hdr_sub（[<span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span> [，<span class="variable">&amp;ltocc</span><span class="variable">&amp;gt</span>]]）：子串匹配</span><br><span class="line">dst 目标IP</span><br><span class="line">dst_port 目标PORT</span><br><span class="line">src 源IP</span><br><span class="line">src_port 源PORT</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;示例:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hdr &amp;ltstring&amp;gt用于测试请求头部首部指定内容</span><br><span class="line"><span class="function"><span class="title">hdr_dom</span><span class="params">(host)</span></span> 请求的host名称，如 www<span class="selector-class">.example</span><span class="selector-class">.com</span></span><br><span class="line"><span class="function"><span class="title">hdr_beg</span><span class="params">(host)</span></span> 请求的host开头，如 www. <span class="selector-tag">img</span>. <span class="selector-tag">video</span>. download. ftp.</span><br><span class="line"><span class="function"><span class="title">hdr_end</span><span class="params">(host)</span></span> 请求的host结尾，如 <span class="selector-class">.com</span> <span class="selector-class">.net</span> .cn</span><br><span class="line">path_beg 请求的URL开头，如/static、/images、/img、/css</span><br><span class="line">path_end 请求的URL中资源的结尾，如 <span class="selector-class">.gif</span> <span class="selector-class">.png</span> <span class="selector-class">.css</span> <span class="selector-class">.js</span> <span class="selector-class">.jpg</span> .jpeg</span><br></pre></td></tr></table></figure></p><h5 id="ACL-flags"><a href="#ACL-flags" class="headerlink" title="ACL-flags"></a>ACL-flags</h5><p>&emsp;&emsp;ACL匹配模式<br>&emsp;&emsp;&emsp;&emsp;-i 不区分大小写<br>&emsp;&emsp;&emsp;&emsp;-m 使用指定的pattern匹配方法<br>&emsp;&emsp;&emsp;&emsp;-n 不做DNS解析<br>&emsp;&emsp;&emsp;&emsp;-u 禁止acl重名，否则多个同名ACL匹配或关系</p><h5 id="ACL-operator"><a href="#ACL-operator" class="headerlink" title="ACL-operator"></a>ACL-operator</h5><p>&emsp;&emsp;ACL 操作符<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">整数比较：eq、ge、gt、le、lt</span><br><span class="line">字符比较：</span><br><span class="line">  exact match (-m str) :字符串必须完全匹配模式</span><br><span class="line">  substring match (-m sub) :在提取的字符串中查找模式，如果其中任何一个被发现，ACL将匹配</span><br><span class="line"> <span class="built_in"> prefix </span>match (-m beg) :在提取的字符串首部中查找模式，如果其中任何一个被发现，ACL将匹配</span><br><span class="line">  suffix match (-m end) :将模式与提取字符串的尾部进行比较，如果其中任何一个匹配，则ACL进行匹配</span><br><span class="line">  subdir match (-m dir) :查看提取出来的用斜线分隔（“/”）的字符串，如果其中任何一个匹配，则ACL进行匹配</span><br><span class="line">  domain match (-m dom) :查找提取的用点（“.”）分隔字符串，如果其中任何一个匹配，则ACL进行匹配</span><br></pre></td></tr></table></figure></p><h5 id="ACL-value"><a href="#ACL-value" class="headerlink" title="ACL-value"></a>ACL-value</h5><p>&emsp;&emsp;value的类型<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">The ACL engine can match these types against patterns of the following types :</span><br><span class="line">  Boolean #布尔值</span><br><span class="line">  integer <span class="keyword">or</span> integer range #整数或整数范围，比如用于匹配端口范围</span><br><span class="line"> <span class="built_in"> IP address </span>/<span class="built_in"> network </span>#IP地址或IP范围, 192.168.0.1 ,192.168.0.1/24</span><br><span class="line">  string</span><br><span class="line">      exact –精确比较</span><br><span class="line">      substring—子串 www.example.com</span><br><span class="line">      suffix-后缀比较</span><br><span class="line">      prefix-前缀比较</span><br><span class="line">      subdir-路径， /wp-includes/js/jquery/jquery.js</span><br><span class="line">      domain-域名，www.example.com</span><br><span class="line">  regular expression #正则表达式</span><br><span class="line">  hex block #16进制</span><br></pre></td></tr></table></figure></p><h4 id="ACL调用方式"><a href="#ACL调用方式" class="headerlink" title="ACL调用方式"></a>ACL调用方式</h4><p>&emsp;&emsp;ACL调用方式：</p><ul><li>与：隐式（默认）使用</li><li>或：使用“or” 或 “||”表示</li><li>否定：使用“!“ 表示</li></ul><p>&emsp;&emsp;示例：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> valid_src valid_port <span class="comment">#与关系</span></span><br><span class="line"><span class="keyword">if</span> invalid_src <span class="params">||</span> invalid_port <span class="comment">#或</span></span><br><span class="line"><span class="keyword">if</span> ! invalid_src <span class="comment">#非</span></span><br></pre></td></tr></table></figure></p><h4 id="ACL具体示例"><a href="#ACL具体示例" class="headerlink" title="ACL具体示例"></a>ACL具体示例</h4><h5 id="域名匹配"><a href="#域名匹配" class="headerlink" title="域名匹配:"></a>域名匹配:</h5><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">172.18</span><span class="number">.32</span><span class="number">.249</span>:<span class="number">80</span></span><br><span class="line">    mode http</span><br><span class="line">    balance roundrobin</span><br><span class="line">    log global</span><br><span class="line">    option httplog</span><br><span class="line">    acl web_host hdr_dom(host) www.example.net</span><br><span class="line">    use_backend example_host <span class="keyword">if</span> web_host</span><br><span class="line">    default_backend default_web</span><br><span class="line">backend example_host</span><br><span class="line">    mode http</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">80</span> check <span class="built_in">int</span>er <span class="number">2000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br><span class="line">    backend default_web</span><br><span class="line">    mode http</span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">80</span> check <span class="built_in">int</span>er <span class="number">2000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure><h5 id="匹配浏览器类型"><a href="#匹配浏览器类型" class="headerlink" title="匹配浏览器类型:"></a>匹配浏览器类型:</h5><p>&emsp;&emsp;匹配客户端浏览器，将不同类型的浏览器调动至不同的服务器组<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind 172.18.32.249:80</span><br><span class="line">    mode http</span><br><span class="line">    balance roundrobin</span><br><span class="line">    log global</span><br><span class="line">    option httplog</span><br><span class="line">    acl web_host hdr_dom(host) www.example.net</span><br><span class="line">    use_backend example_host<span class="built_in"> if </span>web_host</span><br><span class="line">    acl redirect_test hdr(User-Agent) -m<span class="built_in"> sub </span>-i <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64;Trident/7.0; rv:11.0) like Gecko"</span></span><br><span class="line">    redirect prefix http://192.168.7.103<span class="built_in"> if </span>redirect_test</span><br><span class="line">    default_backend default_web</span><br><span class="line">backend example_host</span><br><span class="line">    mode http</span><br><span class="line">    server web1 192.168.32.81:80<span class="built_in"> check </span>inter 2000 fall 3 rise 5</span><br><span class="line">backend default_web</span><br><span class="line">    mode http</span><br><span class="line">    server web2 192.168.32.82:80<span class="built_in"> check </span>inter 2000 fall 3 rise 5</span><br></pre></td></tr></table></figure></p><h5 id="基于文件后缀名实现动静分离"><a href="#基于文件后缀名实现动静分离" class="headerlink" title="基于文件后缀名实现动静分离:"></a>基于文件后缀名实现动静分离:</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind 172.18.32.249:80</span><br><span class="line">    mode http</span><br><span class="line">    balance roundrobin</span><br><span class="line">    log global</span><br><span class="line">    option httplog</span><br><span class="line">    acl php_server path_end -i .php</span><br><span class="line">    use_backend php_server_host <span class="keyword">if</span> php_server</span><br><span class="line">    acl image_server path_end -i .jpg .png .jpeg .gif</span><br><span class="line">    use_backend image_server_host <span class="keyword">if</span> image_server</span><br><span class="line">    default_backend default_web</span><br><span class="line">backend php_server_host</span><br><span class="line">    mode http</span><br><span class="line">   <span class="built_in"> server </span>web1 192.168.32.81 check inter 2000 fall 3 rise 5</span><br><span class="line">backend image_server_host</span><br><span class="line">    mode http</span><br><span class="line">   <span class="built_in"> server </span>web1 192.168.32.82 check inter 2000 fall 3 rise 5</span><br><span class="line">backend default_web</span><br><span class="line">    mode http</span><br><span class="line">   <span class="built_in"> server </span>web1 192.168.32.8:80 check inter 2000 fall 3 rise 5</span><br></pre></td></tr></table></figure><h5 id="匹配访问路径实现动静分离"><a href="#匹配访问路径实现动静分离" class="headerlink" title="匹配访问路径实现动静分离:"></a>匹配访问路径实现动静分离:</h5><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind 172.18.32.249:80</span><br><span class="line">    mode http</span><br><span class="line">    balance roundrobin</span><br><span class="line">    log global</span><br><span class="line">    option httplog</span><br><span class="line">    acl<span class="keyword"> static</span>_path path_beg -i /static /images /javascript</span><br><span class="line">    use_backend<span class="keyword"> static</span>_path_host<span class="built_in"> if </span>static_path</span><br><span class="line">    default_backend default_web</span><br><span class="line">backend<span class="keyword"> static</span>_path_host</span><br><span class="line">    mode http</span><br><span class="line">    server web1 192.168.32.81<span class="built_in"> check </span>inter 2000 fall 3 rise 5</span><br><span class="line">backend default_web</span><br><span class="line">    mode http</span><br><span class="line">    server web1 192.168.32.8:80<span class="built_in"> check </span>inter 2000 fall 3 rise 5</span><br></pre></td></tr></table></figure><h5 id="预定义ACL"><a href="#预定义ACL" class="headerlink" title="预定义ACL"></a>预定义ACL</h5><p>预定义ACL：</p><table><thead><tr><th>ACLname</th><th>Equivalent to</th><th>Usage</th></tr></thead><tbody><tr><td>FALSE</td><td>always_false</td><td>never match</td></tr><tr><td>HTTP</td><td>req_proto_http</td><td>match if protocol is valid HTTP</td></tr><tr><td>HTTP_1.0</td><td>req_ver 1.0</td><td>match HTTP version 1.0</td></tr><tr><td>HTTP_1.1</td><td>req_ver 1.1</td><td>match HTTP version 1.1</td></tr><tr><td>HTTP_CONTENT</td><td>hdr_val(content-length) gt 0</td><td>match an existing content-length</td></tr><tr><td>HTTP_URL_ABS</td><td>url_reg ^[^/:]*: //</td><td>match absolute URL with scheme</td></tr><tr><td>HTTP_URL_SLASH</td><td>url_beg /</td><td>match URL beginning with “/“</td></tr><tr><td>HTTP_URL_STAR</td><td>url *</td><td>match URL equal to “*”</td></tr><tr><td>LOCALHOST</td><td>src 127.0.0.1/8</td><td>match connection from local host</td></tr><tr><td>METH_CONNECT</td><td>method CONNECT</td><td>match HTTP CONNECT method</td></tr><tr><td>METH_DELETE</td><td>method DELETE</td><td>match HTTP DELETE method</td></tr><tr><td>METH_GET</td><td>method GET HEAD</td><td>match HTTP GET or HEAD method</td></tr><tr><td>METH_HEAD</td><td>method HEAD</td><td>match HTTP HEAD method</td></tr><tr><td>METH_OPTIONS</td><td>method OPTIONS</td><td>match HTTP OPTIONS method</td></tr><tr><td>METH_POST</td><td>method POST</td><td>match HTTP POST method</td></tr><tr><td>METH_PUT</td><td>method PUT</td><td>match HTTP PUT method</td></tr><tr><td>METH_TRACE</td><td>method TRACE match</td><td>HTTP TRACE method</td></tr><tr><td>RDP_COOKIE</td><td>req_rdp_cookie_cnt gt 0</td><td>match presence of an RDP cookie</td></tr><tr><td>REQ_CONTENT</td><td>req_len gt 0</td><td>match data in the request buffer</td></tr><tr><td>TRUE</td><td>always_true</td><td>always match</td></tr><tr><td>WAIT_END</td><td>wait_end</td><td>wait for end of content analysis</td></tr></tbody></table><p>&emsp;&emsp;预定义ACL使用示例<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind 172.18.32.249:80</span><br><span class="line">    mode http</span><br><span class="line">    balance roundrobin</span><br><span class="line">    log global</span><br><span class="line">    option httplog</span><br><span class="line">    acl<span class="keyword"> static</span>_path path_beg -i /static /images /javascript</span><br><span class="line">    use_backend<span class="keyword"> static</span>_path_host<span class="built_in"> if </span>HTTP_1.1 TRUE<span class="keyword"> static</span>_path</span><br><span class="line">    default_backend default_web</span><br><span class="line">backend php_server_host</span><br><span class="line">    mode http</span><br><span class="line">    server web1 192.168.32.81<span class="built_in"> check </span>inter 2000 fall 3 rise 5</span><br><span class="line">backend<span class="keyword"> static</span>_path_host</span><br><span class="line">    mode http</span><br><span class="line">    server web1 192.168.32.82<span class="built_in"> check </span>inter 2000 fall 3 rise 5</span><br><span class="line">backend default_web</span><br><span class="line">    mode http</span><br><span class="line">    server web1 192.168.32.8:80<span class="built_in"> check </span>inter 2000 fall 3 rise 5</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;详细信息查看官网<a href="http://cbonte.github.io/haproxy-dconv/2.0/configuration.html#7.4" rel="noopener" target="_blank">http://cbonte.github.io/haproxy-dconv/2.0/configuration.html#7.4</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;继续讲解HAProxy的一些进阶配置及用法，包括报文修改，日志配置，压缩功能，后端服务器状态监测及ACL等功能应用。配置环境及配置文件均延续上一篇&lt;a href=&quot;https://hewanyue.com/blog/5aeb7732.html&quot;&gt;《企业级应用：负载均衡层——haproxy(一)》&lt;/a&gt;,有任何疑问可以先看上一篇博客。&lt;/p&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="https://hewanyue.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="高可用" scheme="https://hewanyue.com/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
      <category term="HAProxy" scheme="https://hewanyue.com/tags/HAProxy/"/>
    
      <category term="负载均衡" scheme="https://hewanyue.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
      <category term="调度算法" scheme="https://hewanyue.com/tags/%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>企业级应用：负载均衡层——haproxy(一)</title>
    <link href="https://hewanyue.com//blog/5aeb7732.html"/>
    <id>https://hewanyue.com//blog/5aeb7732.html</id>
    <published>2019-11-04T09:22:26.000Z</published>
    <updated>2019-12-09T03:07:00.649Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;HAProxy是法国开发者 威利塔罗(Willy Tarreau) 在2000年使用C语言开发的一个开源软件，是一款具备高并发(一万以上)、高性能的TCP&gt;和HTTP负载均衡器，支持基于cookie的持久性，自动故障切换，支持正则表达式及web状态统计。<br>&emsp;&emsp;HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。<br>&emsp;&emsp;包括 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter和 Tuenti[7]在内的知名网站，及亚马逊网络服务系统都使用了HAProxy。<br><a id="more"></a></p><h3 id="HAProxy功能"><a href="#HAProxy功能" class="headerlink" title="HAProxy功能"></a>HAProxy功能</h3><h4 id="HAProxy功能："><a href="#HAProxy功能：" class="headerlink" title="HAProxy功能："></a>HAProxy功能：</h4><ul><li>TCP和HTTP反向代理</li><li>SSL/TSL服务器</li><li>可以针对HTTP请求添加cookie，进行路由后端服务器</li><li>可平衡负载至后端服务器，并支持持久连接</li><li>支持所有主服务器故障切换至备用服务器</li><li>支持专用端口实现监控服务</li><li>支持不影响现有连接情况下停止接受新连接请求</li><li>可以在双向添加，修改或删除HTTP报文首部</li><li>响应报文压缩</li><li>支持基于pattern实现连接请求的访问控制</li><li>通过特定的URI为授权用户提供详细的状态信息</li></ul><h4 id="不具备的功能："><a href="#不具备的功能：" class="headerlink" title="不具备的功能："></a>不具备的功能：</h4><ul><li>正向代理–squid，nginx</li><li>缓存代理–varnish</li><li>web服务–nginx、tengine、apache、php、tomcat</li><li>UDP–目前不支持UDP协议，2.1版本会支持UDP协议代理</li><li>单机性能–LVS</li></ul><h3 id="HAProxy安装"><a href="#HAProxy安装" class="headerlink" title="HAProxy安装"></a>HAProxy安装</h3><p>&emsp;&emsp;HAProxy 支持基于lua实现功能扩展，lua是一种小巧的脚本语言，于1993年由巴西里约热内卢天主教大学（Pontifical Catholic University of Rio de Janeiro）里的一个研究小组开发，其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。<br>&emsp;&emsp;由于centos自带的lua版本比较低并不符合HAProxy要求的lua最低版本(5.3)的要求，因此需要编译安装较新版本的lua环境，然后才能编译安装HAProxy。</p><h4 id="安装lua环境"><a href="#安装lua环境" class="headerlink" title="安装lua环境"></a>安装lua环境</h4><p>&emsp;&emsp;配置lua环境<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> libtermcap-devel ncurses-devel libevent-devel readline-devel gcc make</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;下载lua源码tar包<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="regexp">//</span>www.lua.org<span class="regexp">/ftp/</span>lua-<span class="number">5.3</span>.<span class="number">5</span>.tar.gz</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;编译安装lua<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">xvf</span> <span class="selector-tag">lua-5</span><span class="selector-class">.3</span><span class="selector-class">.5</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line"><span class="selector-tag">cd</span> <span class="selector-tag">lua-5</span><span class="selector-class">.3</span><span class="selector-class">.5</span></span><br><span class="line"><span class="selector-tag">make</span> <span class="selector-tag">linux</span> <span class="selector-tag">test</span></span><br></pre></td></tr></table></figure></p><h4 id="安装HAProxy"><a href="#安装HAProxy" class="headerlink" title="安装HAProxy"></a>安装HAProxy</h4><p>&emsp;&emsp;下载haproxy源码包<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="regexp">//</span>www.haproxy.org<span class="regexp">/download/</span><span class="number">2.0</span><span class="regexp">/src/</span>haproxy-<span class="number">2.0</span>.<span class="number">8</span>.tar.gz</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;安装依赖包<br><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">yum</span> <span class="comment">install</span> <span class="comment">gcc</span> <span class="comment">gcc</span><span class="literal">-</span><span class="comment">c</span><span class="literal">+</span><span class="literal">+</span> <span class="comment">glibc</span> <span class="comment">glibc</span><span class="literal">-</span><span class="comment">devel</span> <span class="comment">pcre</span> <span class="comment">pcre</span><span class="literal">-</span><span class="comment">devel</span> <span class="comment">openssl</span> <span class="comment">openssl</span><span class="literal">-</span><span class="comment">devel</span> <span class="comment">systemd</span><span class="literal">-</span><span class="comment">devel</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;（附加工具包<code>net-tools vim iotop bc zip unzip zlib-devel lrzsz tree screen lsof tcpdump wget ntpdate</code>）<br>&emsp;&emsp;编译安装haproxy<br>&emsp;&emsp;<code>cd haproxy-2.0.8</code><br>&emsp;&emsp;HAProxy 1.8及1.9版本编译参数：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">make <span class="attribute">ARCH</span>=x86_64 \</span><br><span class="line"><span class="attribute">TARGET</span>=linux2628 \</span><br><span class="line"><span class="attribute">USE_PCRE</span>=1 \</span><br><span class="line"><span class="attribute">USE_OPENSSL</span>=1 \</span><br><span class="line"><span class="attribute">USE_ZLIB</span>=1 \</span><br><span class="line"><span class="attribute">USE_SYSTEMD</span>=1 \</span><br><span class="line"><span class="attribute">USE_CPU_AFFINITY</span>=1 \</span><br><span class="line"><span class="attribute">PREFIX</span>=/apps/haproxy</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;HAProxy 2.0编译参数：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">make <span class="attribute">ARCH</span>=x86_64 \</span><br><span class="line"><span class="attribute">TARGET</span>=linux-glibc <span class="attribute">USE_PCRE</span>=1 \</span><br><span class="line"><span class="attribute">USE_OPENSSL</span>=1 \</span><br><span class="line"><span class="attribute">USE_ZLIB</span>=1 \</span><br><span class="line"><span class="attribute">USE_SYSTEMD</span>=1 \</span><br><span class="line"><span class="attribute">USE_CPU_AFFINITY</span>=1 \</span><br><span class="line"><span class="attribute">USE_LUA</span>=1 \</span><br><span class="line"><span class="attribute">LUA_INC</span>=/data/tar/lua-5.3.5/src/ \</span><br><span class="line"><span class="attribute">LUA_LIB</span>=/data/tar/lua-5.3.5/src/ \</span><br><span class="line"><span class="attribute">PREFIX</span>=/apps/haproxy</span><br></pre></td></tr></table></figure></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make install PREFIX=<span class="regexp">/apps/</span>haproxy</span><br><span class="line">cp haproxy <span class="regexp">/usr/</span>sbin<span class="regexp">/</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;haproxy启动脚本<br>&emsp;&emsp;<code>vim /usr/lib/systemd/system/haproxy.service</code><br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=HAProxy Load Balancer</span><br><span class="line">After=syslog.target network.target</span><br><span class="line">[Service]</span><br><span class="line">ExecStartPre=<span class="regexp">/usr/sbin</span><span class="regexp">/haproxy -f /etc</span><span class="regexp">/haproxy/haproxy</span>.cfg -c -q</span><br><span class="line">ExecStart=<span class="regexp">/usr/sbin</span><span class="regexp">/haproxy -Ws -f /etc</span><span class="regexp">/haproxy/haproxy</span>.cfg -p /var/<span class="class"><span class="keyword">lib</span>/<span class="title">haproxy</span>/<span class="title">haproxy</span>.<span class="title">pid</span></span></span><br><span class="line">ExecReload=<span class="regexp">/bin/kill</span> -USR2 $MAINPID</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target\</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;haproxy配置文件(基本配置文件)<br>&emsp;&emsp;<code>mkdir /etc/haproxy</code><br>&emsp;&emsp;<code>vim /etc/haproxy/haproxy.cfg</code><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">global</span><br><span class="line">    chroot /apps/haproxy   #锁定运行目录</span><br><span class="line">    stats socket /var/lib/haproxy/haproxy.sock mode 600 level admin   #socket文件</span><br><span class="line">    uid 99       #运行haproxy的用户身份，也可设user，group</span><br><span class="line">    gid 99</span><br><span class="line">    daemon    #以守护进程运行</span><br><span class="line"><span class="comment">#    nbproc 4    #指定每个haproxy进程开启的线程数，默认为每个进程一个线程</span></span><br><span class="line"><span class="comment">#    cpu-map 1 0    #绑定haproxy 进程至指定CPU</span></span><br><span class="line"><span class="comment">#    cpu-map 2 1</span></span><br><span class="line"><span class="comment">#    cpu-map 3 2</span></span><br><span class="line"><span class="comment">#    cpu-map 4 3</span></span><br><span class="line">maxconn 100000   #每个haproxy进程的最大并发连接数</span><br><span class="line"><span class="comment">#maxsslconn          #每个haproxy进程ssl最大连接数,用于haproxy配置了证书的场景下</span></span><br><span class="line"><span class="comment">#spread-checks      #后端server状态check随机提前或延迟百分比时间，建议2-5(20%-50%)之间</span></span><br><span class="line">pidfile /var/lib/haproxy/haproxy.pid</span><br><span class="line">log 127.0.0.1 local3 <span class="builtin-name">info</span>   #定义全局的syslog服务器；最多可以定义两个</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">    option http-keep-alive</span><br><span class="line">    option forwardfor</span><br><span class="line">    maxconn 100000</span><br><span class="line">    mode http</span><br><span class="line">    timeout connect 300000ms</span><br><span class="line">    timeout<span class="built_in"> client </span>300000ms</span><br><span class="line">    timeout<span class="built_in"> server </span>300000ms</span><br><span class="line"></span><br><span class="line">listen stats</span><br><span class="line">    mode http</span><br><span class="line">    bind 0.0.0.0:9999</span><br><span class="line">    stats enable</span><br><span class="line">    log global</span><br><span class="line">    stats uri /haproxy-status</span><br><span class="line">    stats auth haadmin:q1w2e3r4ys</span><br><span class="line">listen web_port</span><br><span class="line">    bind 192.168.32.84:80</span><br><span class="line">    mode http</span><br><span class="line">    log global</span><br><span class="line">   <span class="built_in"> server </span>web1 127.0.0.1:8080 check inter 3000 fall 2 rise 5</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;设置haproxypid及socket创建权限<br>&emsp;&emsp;<code>useradd -s /sbin/nologin -r -u 99 haproxy</code><br>&emsp;&emsp;<code>mkdir /var/lib/haproxy</code><br>&emsp;&emsp;<code>chown 99.99 /var/lib/haproxy/ -R</code></p><p>&emsp;&emsp;至此，才完成haproxy的安装与配置,启动并查看haproxy的状态是否正常吧。<br>&emsp;&emsp;<code>systemctl enable --now haproxy</code><br>&emsp;&emsp;<code>systemctl status haproxy</code></p><h3 id="配置web均衡"><a href="#配置web均衡" class="headerlink" title="配置web均衡"></a>配置web均衡</h3><p>&emsp;&emsp;haproxy最主要的功能就是为后端服务器做反向代理，例如我们要为后面的四个web服务器做反向代理，配置文件如下：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">global</span><br><span class="line">    maxconn <span class="number">100000</span></span><br><span class="line">    chroot /apps/haproxy</span><br><span class="line">    stats socket /var/lib/haproxy/haproxy.sock1 mode <span class="number">600</span> level admin process <span class="number">1</span></span><br><span class="line">    stats socket /var/lib/haproxy/haproxy.sock2 mode <span class="number">600</span> level admin process <span class="number">2</span></span><br><span class="line">    uid <span class="number">99</span></span><br><span class="line">    gid <span class="number">99</span></span><br><span class="line">    daemon</span><br><span class="line">    nbproc <span class="number">2</span>       #指定每个haproxy进程开启的线程数，默认为每个进程一个线程</span><br><span class="line">    cpu-map <span class="number">1</span> <span class="number">0</span>    #cpu工作线程绑定</span><br><span class="line">    cpu-map <span class="number">2</span> <span class="number">1</span></span><br><span class="line">#    cpu-map <span class="number">3</span> <span class="number">2</span></span><br><span class="line">#    cpu-map <span class="number">4</span> <span class="number">3</span></span><br><span class="line">    pidfile /var/lib/haproxy/haproxy.pid</span><br><span class="line">    log <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> local3 info</span><br><span class="line"></span><br><span class="line">defaults</span><br><span class="line">    option redispatch      #当server Id对应的服务器挂掉后，强制定向到其他健康的服务器</span><br><span class="line">    option abortonclose    #当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接</span><br><span class="line">    option http-keep-alive #开启与客户端的会话保持</span><br><span class="line">    option  forwardfor     #透传客户端真实IP至后端web服务器</span><br><span class="line">    mode http #默认工作类型</span><br><span class="line">    timeout connect <span class="number">600</span>s  #客户端请求到后端server的最长连接等待时间(TCP之前)</span><br><span class="line">    timeout server  <span class="number">600</span>s  #客户端请求到后端服务端的超时超时时长（TCP之后）</span><br><span class="line">    timeout client  <span class="number">600</span>s  #与客户端的最长非活动时间</span><br><span class="line">    timeout http-keep-alive <span class="number">120</span>s #session会话保持超时时间，范围内会转发到相同的后端服务器</span><br><span class="line">    timeout  check   <span class="number">50</span>s   #对后端服务器的检测超时时间option http-keep-alive</span><br><span class="line"></span><br><span class="line">#frontend WEB_PORT_80</span><br><span class="line">#    bind <span class="number">192.168</span><span class="number">.32</span><span class="number">.84</span>:<span class="number">80</span></span><br><span class="line">#    mode http</span><br><span class="line">#    use_backend web_prot_http_nodes</span><br><span class="line"></span><br><span class="line">#backend web_prot_http_nodes</span><br><span class="line">#    mode http</span><br><span class="line">#    option forwardfor</span><br><span class="line">#    balance static-rr</span><br><span class="line">#    server web0 <span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">80</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br><span class="line">#    server web3 <span class="number">192.168</span><span class="number">.32</span><span class="number">.83</span>:<span class="number">80</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br><span class="line">#    server web2 <span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">80</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br><span class="line">#    server web1 <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">80</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">listen stats</span><br><span class="line">    bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">9999</span></span><br><span class="line">    mode http</span><br><span class="line">    stats enable</span><br><span class="line">    log global</span><br><span class="line">    stats uri /proxy_status         #进入后台状态页url路径</span><br><span class="line">    stats auth haadmin:hapasswd     #进入后台的账号密码</span><br><span class="line"></span><br><span class="line">listen web_host       #使用listen替换frontend+backend的配置方式</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.32</span><span class="number">.84</span>:<span class="number">80</span></span><br><span class="line">    mode http</span><br><span class="line">    log global</span><br><span class="line">    balance roundrobin  #定义调度算法为roundrobin</span><br><span class="line">    server web0 <span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span>:<span class="number">80</span> weight <span class="number">1</span> check  addr <span class="number">192.168</span><span class="number">.32</span><span class="number">.8</span> port <span class="number">9000</span> <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">80</span> weight <span class="number">1</span> check addr <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span> port <span class="number">9000</span> <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">80</span> weight <span class="number">1</span> check addr <span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span> port <span class="number">9000</span> <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web3 <span class="number">192.168</span><span class="number">.32</span><span class="number">.83</span>:<span class="number">80</span> weight <span class="number">1</span> check addr <span class="number">192.168</span><span class="number">.32</span><span class="number">.83</span> port <span class="number">9000</span> <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;重启服务<code>systemctl restart haproxy</code>,便可登陆本机的状态页(haadmin:hapasswd)查看后端服务器状态。</p><p><img src="https://img-blog.csdnimg.cn/20191104184953377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;刷新几次可以看到，不同pid也就是不同线程提供的status页面。<br><img src="https://img-blog.csdnimg.cn/20191104185004804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="配置详解"><a href="#配置详解" class="headerlink" title="配置详解"></a>配置详解</h4><h5 id="globe-全局配置段"><a href="#globe-全局配置段" class="headerlink" title="globe 全局配置段"></a>globe 全局配置段</h5><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">进程及安全配置相关的参数</span><br><span class="line">性能调整相关参数</span><br><span class="line"><span class="keyword">Debug</span>参数</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;全局配置一般大多类似不用多说，须注意的是nbproc若开启多线程，socket设置最好也分开设置，最好每个线程用process #指定固定的socket，方便后期用命令行socat工具管理(<code>echo &quot;disable server web_host/web1&quot; | socat stdio /var/lib/haproxy/haproxy.sock2</code>)，例如：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">global</span><br><span class="line">maxconn <span class="number">100000</span></span><br><span class="line">chroot /apps/haproxy</span><br><span class="line">stats socket /var/<span class="class"><span class="keyword">lib</span>/<span class="title">haproxy</span>/<span class="title">haproxy</span>.<span class="title">sock1</span> <span class="title">mode</span> 600 <span class="title">level</span> <span class="title">admin</span> <span class="title">process</span> 1</span></span><br><span class="line">stats socket /var/<span class="class"><span class="keyword">lib</span>/<span class="title">haproxy</span>/<span class="title">haproxy</span>.<span class="title">sock2</span> <span class="title">mode</span> 600 <span class="title">level</span> <span class="title">admin</span> <span class="title">process</span> 2</span></span><br><span class="line">uid <span class="number">99</span></span><br><span class="line">gid <span class="number">99</span></span><br><span class="line">daemon</span><br><span class="line">nbproc <span class="number">2</span>       <span class="comment">#指定每个haproxy进程开启的线程数，默认为每个进程一个线程</span></span><br><span class="line">cpu-map <span class="number">1</span> <span class="number">0</span>    <span class="comment">#cpu工作线程绑定</span></span><br><span class="line">cpu-map <span class="number">2</span> <span class="number">1</span></span><br><span class="line">pidfile /var/<span class="class"><span class="keyword">lib</span>/<span class="title">haproxy</span>/<span class="title">haproxy</span>.<span class="title">pid</span></span></span><br><span class="line">log <span class="number">127.0</span>.<span class="number">0.1</span> local3 info</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;其他详细信息参见官方文档：<a href="https://cbonte.github.io/haproxy-dconv/2.0/intro.html" rel="noopener" target="_blank">https://cbonte.github.io/haproxy-dconv/2.0/intro.html</a></p><h5 id="proxies：代理配置段"><a href="#proxies：代理配置段" class="headerlink" title="proxies：代理配置段"></a>proxies：代理配置段</h5><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">defaults [<span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span>]  <span class="meta">#默认配置项，针对以下的frontend、backend和lsiten生效，可以多个name</span></span><br><span class="line">frontend <span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span>  <span class="meta">#前端servername，类似于Nginx的一个虚拟主机 server。</span></span><br><span class="line">backend <span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span>  <span class="meta">#后端服务器组，等于nginx的upstream</span></span><br><span class="line">listen <span class="variable">&amp;ltname</span><span class="variable">&amp;gt</span>  <span class="meta">#将frontend和backend合并在一起配置</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;注：name字段只能使用”-”、”_”、”.”、和”:”，并且严格区分大小写，例如：Web和web是完全不同的两组服务器。</p><ul><li><strong>defaults</strong><br><strong>option redispatch</strong> #当server Id对应的服务器挂掉后，强制定向到其他健康的服务器<br><strong>option abortonclose</strong> #当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接<br><strong>option http-keep-alive</strong> #开启与客户端的会话保持<br><strong>option forwardfor</strong> #透传客户端真实IP至后端web服务器<br><strong>mode http</strong> #默认工作类型<br>timeout connect 120s #客户端请求到后端server的最长连接等待时间(TCP之前)<br>timeout server 600s #客户端请求到后端服务端的超时超时时长（TCP之后）<br>timeout client 600s #与客户端的最长非活动时间<br>timeout http-keep-alive 120s #session 会话保持超时时间，范围内会转发到相同的后端服务器<br>timeout check 5s #对后端服务器的检测超时时间</li><li><strong>frontend</strong><br><strong>bind</strong>：指定HAProxy的监听地址，可以是IPV4或IPV6，可以同时监听多个IP或端口，可同时用于listen字段中</li></ul><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bind [<span class="variable">&amp;ltaddress</span><span class="variable">&amp;gt</span>]:<span class="variable">&amp;ltport_range</span><span class="variable">&amp;gt</span> [, ...] [param*]</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">listen http_proxy #监听http的多个IP的多个端口和sock文件</span><br><span class="line">    bind :<span class="number">80</span>,:<span class="number">443</span>,:<span class="number">8801</span><span class="number">-8810</span></span><br><span class="line">    bind <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">10080</span>,<span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">10443</span></span><br><span class="line">    bind /var/run/ssl-frontend.sock user root mode <span class="number">600</span> accept-proxy</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">listen</span> http_https_proxy <span class="comment">#https监听</span></span><br><span class="line">    <span class="keyword">bind</span> :<span class="number">80</span></span><br><span class="line">    <span class="keyword">bind</span> :<span class="number">443</span> ssl crt /etc/haproxy/site.pem</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">listen http_https_proxy_explicit #监听ipv6、ipv4和unix sock文件</span><br><span class="line">    bind ipv6@:80</span><br><span class="line">    bind ipv4@public_ssl:443 ssl crt /etc/haproxy/site.pem</span><br><span class="line">    bind unix@ssl-frontend.sock<span class="built_in"> user </span>root mode 600 accept-proxy</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen external_bind_app1 <span class="comment">#监听file descriptor</span></span><br><span class="line">    <span class="built_in">bind</span> <span class="string">"fd@<span class="variable">$&#123;FD_APP1&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;<strong>企业生产示例：</strong><br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">frontend WEB_PORT</span><br><span class="line">    bind :<span class="number">80</span>,:<span class="number">8080</span></span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.102</span>:<span class="number">10080</span>,:<span class="number">8801</span><span class="number">-8810</span>,<span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">9001</span><span class="number">-9010</span></span><br><span class="line">    mode http/tcp #指定负载协议类型</span><br><span class="line">    use_backend backend_name #调用的后端服务器组名称</span><br></pre></td></tr></table></figure></p><ul><li><strong>backend</strong><br>定义一组后端服务器，backend服务器将被frontend进行调用。</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mode http/tcp #指定负载协议类型</span><br><span class="line">option #配置选项</span><br><span class="line">server #定义后端real server</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;注意：<strong>mode要与frontend一致</strong>。option后面加httpchk，smtpchk,mysql-check,pgsql-check，ssl-hello-chk方法，可用于实现更多应用层检测功能。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">check</span> <span class="comment">#对指定real进行健康状态检查，默认不开启</span></span><br><span class="line">    addr IP <span class="comment">#可指定的健康状态监测IP</span></span><br><span class="line">    port <span class="keyword">num</span> <span class="comment">#指定的健康状态监测端口</span></span><br><span class="line">    inter <span class="keyword">num</span> <span class="comment">#健康状态检查间隔时间，默认2000 ms</span></span><br><span class="line">    fall <span class="keyword">num</span> <span class="comment">#后端服务器失效检查次数，默认为3</span></span><br><span class="line">    rise <span class="keyword">num</span> <span class="comment">#后端服务器从下线恢复检查次数，默认为2</span></span><br><span class="line">weight <span class="comment">#默认为1，最大值为256，0表示不参与负载均衡</span></span><br><span class="line"><span class="keyword">backup</span> <span class="comment">#将后端服务器标记为备份状态</span></span><br><span class="line">disabled <span class="comment">#将后端服务器标记为不可用状态</span></span><br><span class="line">redirect prefix <span class="keyword">http</span>://www.example.net/ <span class="comment">#将请求临时重定向至其它URL，只适用于http模式</span></span><br><span class="line">maxconn &amp;ltmaxconn&amp;gt：当前后端<span class="keyword">server</span>的最大并发连接数</span><br><span class="line">backlog &amp;ltbacklog&amp;gt：当<span class="keyword">server</span>的连接数达到上限后的后援队列长度</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<strong>frontend+backend配置实例：</strong><br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#官网业务访问入口======================================</span><br><span class="line">frontend WEB_PORT_80</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.248</span>:<span class="number">80</span></span><br><span class="line">    mode http</span><br><span class="line">    use_backend web_prot_http_nodes</span><br><span class="line">backend web_prot_http_nodes</span><br><span class="line">    mode http</span><br><span class="line">    option forwardfor</span><br><span class="line">    server <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span> <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">8080</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br><span class="line">    server <span class="number">192.168</span><span class="number">.7</span><span class="number">.102</span> <span class="number">192.168</span><span class="number">.7</span><span class="number">.102</span>:<span class="number">8080</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></p><ul><li><strong>listen</strong><br>listen相当于frontend+backend的结合，即定义前端监听代理，又定义了后端服务器，例如上面的frontend+backend组合可用下面这种listen方式代替：</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#官网业务访问入口=====================================</span></span><br><span class="line">listen WEB_PORT_80</span><br><span class="line">    bind 192.168.7.102:80</span><br><span class="line">    mode http</span><br><span class="line">    option forwardfor</span><br><span class="line">   <span class="built_in"> server </span>web1 192.168.7.101:80 check inter 3000 fall 3 rise 5</span><br><span class="line">   <span class="built_in"> server </span>web2 192.168.7.101:80 check inter 3000 fall 3 rise 5</span><br></pre></td></tr></table></figure><h3 id="haproxy调度算法"><a href="#haproxy调度算法" class="headerlink" title="haproxy调度算法"></a>haproxy调度算法</h3><p>&emsp;&emsp;HAProxy通过固定参数balance指明对后端服务器的调度算法，该参数可以配置在<strong>listen或backend选项中</strong>。<br>&emsp;&emsp;HAProxy的调度算法分为静态和动态调度算法，但是有些算法可以根据参数在静态和动态算法中相互转换。</p><h4 id="静态算法"><a href="#静态算法" class="headerlink" title="静态算法"></a>静态算法</h4><ul><li>static-rr<br>基于权重的轮询调度，不支持权重的运行时调整及后端服务器慢启动，其后端主机数量没有限制</li><li>first<br>根据服务器在列表中的位置，自上而下进行调度，但是其只会当第一台服务器的连接数达到上限，新请求才会分配给下一台服务，因此会忽略服务器的权重设置。（生产不常用）</li></ul><h4 id="动态算法"><a href="#动态算法" class="headerlink" title="动态算法"></a>动态算法</h4><ul><li>roundrobin<br>基于权重的轮询动态调度算法，支持权重的运行时调整，不完全等于lvs中的rr轮训模式，HAProxy中的roundrobin支持慢启动(新加的服务器会逐渐增加转发数)，其每个后端backend中最多支持4095个real server，roundrobin为<strong>默认调度算法</strong>，且支持对real server权重动态调整。</li><li>leastconn<br>加权的最少连接的动态，支持权重的运行时调整和慢启动，即当前后端服务器连接最少的优先调度(新客户端连接)，比较适合长连接的场景使用，比如MySQL等场景。</li></ul><h4 id="其他算法"><a href="#其他算法" class="headerlink" title="其他算法"></a>其他算法</h4><h5 id="source"><a href="#source" class="headerlink" title="source"></a>source</h5><p>&emsp;&emsp;源地址hash，基于用户源地址hash并将请求转发到后端服务器，默认为静态即取模方式，但是可以通过hash-type支持的选项更改，后续同一个源地址请求将被转发至同一个后端web服务器，比较适用于session保持/缓存业务等场景。<br>&emsp;&emsp;源地址有两种转发客户端请求到后端服务器的服务器选取计算方式，分别是取模法和一致性hash</p><ul><li><p>map-base取模法<br>&emsp;&emsp;map-based：取模法，基于服务器总权重的hash数组取模，该hash是静态的即不支持在线调整权重，不支持慢启动，其对后端服务器调度均衡，缺点是当服务器的总权重发生变化时，即有服务器上线或下线，都会因权重发生变化而导致调度结果整体改变。<br>&emsp;&emsp;所谓取模运算，就是计算两个数相除之后的余数，10%7=3, 7%4=3，(2^32-1)%(1+1+2)<br>&emsp;&emsp;取模法示意图：<br><img src="https://img-blog.csdnimg.cn/201911042153353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">取模法配置示例：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">80</span>,:<span class="number">8801</span><span class="number">-8810</span>,<span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">9001</span><span class="number">-9010</span></span><br><span class="line">    mode tcp</span><br><span class="line">    log global</span><br><span class="line">    balance source</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.7</span><span class="number">.103</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.7</span><span class="number">.104</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></li><li><p>一致性hash<br>&emsp;&emsp;一致性哈希，该hash是动态的，支持在线调整权重，支持慢启动，优点在于当服务器的总权重发生变化时，对调度结果影响是局部的，不会引起大的变动，hash（o）mod n 。<br>&emsp;&emsp;Hash对象到后端服务器的映射关系：<br><img src="https://img-blog.csdnimg.cn/20191104221807725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">&emsp;&emsp;一致性hash后端服务器在线与离线的调度方式示意图：<br><img src="https://img-blog.csdnimg.cn/20191104221921281.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;一致性hash配置示例：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">80</span>,:<span class="number">8801</span><span class="number">-8810</span>,<span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">9001</span><span class="number">-9010</span></span><br><span class="line">    mode tcp</span><br><span class="line">    log global</span><br><span class="line">    balance source</span><br><span class="line">    hash-type consistent</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.7</span><span class="number">.103</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.7</span><span class="number">.104</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="uri"><a href="#uri" class="headerlink" title="uri"></a>uri</h5><p>&emsp;&emsp;基于对用户请求的uri做hash并将请求转发到后端指定服务器，也可以通过map-based和consistent定义使用取模法还是一致性hash。<br>&emsp;&emsp;uri 取模法配置示例：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">80</span>,:<span class="number">8801</span><span class="number">-8810</span>,<span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">9001</span><span class="number">-9010</span></span><br><span class="line">    mode http</span><br><span class="line">    log global</span><br><span class="line">    balance uri</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.7</span><span class="number">.103</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.7</span><span class="number">.104</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;uri 一致性hash配置示例：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">80</span>,:<span class="number">8801</span><span class="number">-8810</span>,<span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">9001</span><span class="number">-9010</span></span><br><span class="line">    mode http</span><br><span class="line">    log global</span><br><span class="line">    balance uri</span><br><span class="line">    hash-type consistent</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.7</span><span class="number">.103</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.7</span><span class="number">.104</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></p><h5 id="url-param"><a href="#url-param" class="headerlink" title="url_param"></a>url_param</h5><p>&emsp;&emsp;url_param对用户请求的url中的 params 部分中的参数name作hash计算，并由服务器总权重相除以后派发至某挑出的服务器；通常用于追踪用户，以确保来自同一个用户的请求始终发往同一个real server<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">假设url = http://www.example.com/foo/bar/index.php?k1=v1&amp;k2=v2</span><br><span class="line">则：</span><br><span class="line">host = <span class="string">"www.example.com"</span></span><br><span class="line">url_param = <span class="string">"k1=v1&amp;k2=v2"</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;url_param取模法配置示例:<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">80</span>,:<span class="number">8801</span><span class="number">-8810</span>,<span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">9001</span><span class="number">-9010</span></span><br><span class="line">    mode http</span><br><span class="line">    log global</span><br><span class="line">    balance url_param name,age #支持对单个及多个url_param 值hash</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.7</span><span class="number">.103</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.7</span><span class="number">.104</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;url_param一致性hash配置示例：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">80</span>,:<span class="number">8801</span><span class="number">-8810</span>,<span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">9001</span><span class="number">-9010</span></span><br><span class="line">    mode http</span><br><span class="line">    log global</span><br><span class="line">    balance url_param name,age #支持对单个及多个url_param 值hash</span><br><span class="line">    hash-type consistent</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.7</span><span class="number">.103</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.7</span><span class="number">.104</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></p><h5 id="hdr"><a href="#hdr" class="headerlink" title="hdr"></a>hdr</h5><p>&emsp;&emsp;针对用户每个http头部(header)请求中的指定信息做hash，此处由 name 指定的http首部将会被取出并做hash计算，然后由服务器总权重相除以后派发至某挑出的服务器，假如无有效的值，则会使用默认的轮询调度。<br>&emsp;&emsp;hdr取模法配置示例：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">80</span>,:<span class="number">8801</span><span class="number">-8810</span>,<span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">9001</span><span class="number">-9010</span></span><br><span class="line">    mode http</span><br><span class="line">    log global</span><br><span class="line">    balance hdr(User-Agent)</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.7</span><span class="number">.103</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.7</span><span class="number">.104</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></p><p>一致性hash配置示例：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">80</span>,:<span class="number">8801</span><span class="number">-8810</span>,<span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">9001</span><span class="number">-9010</span></span><br><span class="line">    mode http</span><br><span class="line">    log global</span><br><span class="line">    balance hdr(User-Agent)</span><br><span class="line">    hash-type consistent</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.7</span><span class="number">.103</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.7</span><span class="number">.104</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></p><h5 id="rdp-cookie"><a href="#rdp-cookie" class="headerlink" title="rdp-cookie"></a>rdp-cookie</h5><p>&emsp;&emsp;rdp-cookie对远程桌面的负载，使用cookie保持会话<br>&emsp;&emsp;rdp-cookie取模法配置示例：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen RDP</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">3389</span></span><br><span class="line">    balance rdp-cookie</span><br><span class="line">    mode tcp</span><br><span class="line">    server rdp0 <span class="number">172.18</span><span class="number">.132</span><span class="number">.20</span>:<span class="number">3389</span> check fall <span class="number">3</span> rise <span class="number">5</span> <span class="built_in">int</span>er <span class="number">2000</span> weight <span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;rdp-cookie一致性hash配置示例：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">listen RDP</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">3389</span></span><br><span class="line">    balance rdp-cookie</span><br><span class="line">    hash-type consistent</span><br><span class="line">    mode tcp</span><br><span class="line">    server rdp0 <span class="number">172.18</span><span class="number">.132</span><span class="number">.20</span>:<span class="number">3389</span> check fall <span class="number">3</span> rise <span class="number">5</span> <span class="built_in">int</span>er <span class="number">2000</span> weight <span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;基于iptables实现：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.ip_forward = <span class="number">1</span></span><br><span class="line"># iptables -t nat -A PREROUTING -d <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span> -p tcp --dport <span class="number">3389</span> -j DNAT --todestination <span class="number">172.18</span><span class="number">.139</span><span class="number">.20</span>:<span class="number">3389</span></span><br><span class="line"># iptables -t nat -A POSTROUTING -s <span class="number">192.168</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">21</span> -j SNAT --to-source <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span></span><br></pre></td></tr></table></figure></p><h5 id="random"><a href="#random" class="headerlink" title="random"></a>random</h5><p>&emsp;&emsp;在1.9版本开始增加一个叫做random的负载平衡算法，其基于一个随机数作为一致性hash的key，随机负载平衡对于大型服务器场或经常添加或删除服务器非常有用，因为它可以避免在这种情况下由roundrobin或leastconn导致的锤击效应。<br>&emsp;&emsp;random配置实例：<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">80</span>,:<span class="number">8801</span><span class="number">-8810</span>,<span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">9001</span><span class="number">-9010</span></span><br><span class="line">    mode http</span><br><span class="line">    log global</span><br><span class="line">    balance random</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.7</span><span class="number">.103</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.7</span><span class="number">.104</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure></p><h4 id="算法总结"><a href="#算法总结" class="headerlink" title="算法总结"></a>算法总结</h4><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">static</span>-rr---------&gt;</span>tcp/http 静态</span><br><span class="line"><span class="function"><span class="title">first</span>-------------&gt;</span>tcp/http 静态</span><br><span class="line"><span class="function"><span class="title">roundrobin</span>--------&gt;</span>tcp/http 动态</span><br><span class="line"><span class="function"><span class="title">leastconn</span>---------&gt;</span>tcp/http 动态</span><br><span class="line"><span class="function"><span class="title">random</span>------------&gt;</span>tcp/http 动态</span><br><span class="line"><span class="function"><span class="title">source</span>------------&gt;</span>tcp/http</span><br><span class="line">U<span class="function"><span class="title">ri</span>---------------&gt;</span>http</span><br><span class="line"><span class="function"><span class="title">url_param</span>---------&gt;</span>http 取决于hash_type是否consistent</span><br><span class="line"><span class="function"><span class="title">hdr</span>---------------&gt;</span>http</span><br><span class="line"><span class="function"><span class="title">rdp</span>-cookie--------&gt;</span>tcp</span><br></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">first</span> <span class="comment">#使用较少</span></span><br><span class="line">static-rr <span class="comment">#做了session共享的web集群</span></span><br><span class="line">roundrobin</span><br><span class="line"><span class="built_in">random</span></span><br><span class="line">leastconn <span class="comment">#数据库</span></span><br><span class="line">source <span class="comment">#基于客户端公网IP的会话保持</span></span><br><span class="line">Uri<span class="comment">---------------&gt;http #缓存服务器，CDN服务商，蓝汛、百度、阿里云、腾讯</span></span><br><span class="line">url_param<span class="comment">---------&gt;http</span></span><br><span class="line">hdr <span class="comment">#基于客户端请求报文头部做下一步处理</span></span><br><span class="line">rdp-cookie <span class="comment">#很少使用</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;详细可参见官方文档：<a href="https://cbonte.github.io/haproxy-dconv/2.0/configuration.html#4" rel="noopener" target="_blank">https://cbonte.github.io/haproxy-dconv/2.0/configuration.html#4</a> </p><h3 id="haproxy工作模式"><a href="#haproxy工作模式" class="headerlink" title="haproxy工作模式"></a>haproxy工作模式</h3><h4 id="tcp：四层负载"><a href="#tcp：四层负载" class="headerlink" title="tcp：四层负载"></a>tcp：四层负载</h4><p>&emsp;&emsp;在四层负载设备中，把client发送的报文目标地址(原来是负载均衡设备的IP地址)，根据均衡设备设置的选择web服务器的规则选择对应的web服务器IP地址，这样client就可以直接跟此服务器建立TCP连接并发送数据。</p><h5 id="四层工作模式的IP透传："><a href="#四层工作模式的IP透传：" class="headerlink" title="四层工作模式的IP透传："></a>四层工作模式的IP透传：</h5><p>&emsp;&emsp;haproxy配置中在后端服务器定义中加入关键字<code>send-proxy</code>（注意不要加在check关键字属性的中间了），并重启服务。<br>&emsp;&emsp;在后端nginx服务器配置中监听端口处也加上协议名<code>proxy_protocol</code>,并修改日志格式，在开头加入变量<code>$proxy_protocol_addr</code>，重启服务后即可在日志中看到访问的源地址。<br>&emsp;&emsp;<code>send-proxy</code>是haproxy后端设置的关键字，写错会报错，可以用来启用代理协议<code>Proxy protocol</code>。Proxy protocol是HAProxy的作者Willy Tarreau于2010年开发和设计的一个Internet协议，通过为tcp添加一个很小的头信息，来方便的传递客户端信息（协议栈、源IP、目的IP、源端口、目的端口等)，在网络情况复杂又需要获取用户真实IP时非常有用。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">haproxy</span> 配置：</span><br><span class="line">listen web_prot_http_nodes</span><br><span class="line">    bind <span class="number">172.18.32.249:80</span></span><br><span class="line">    mode tcp</span><br><span class="line">    balance roundrobin</span><br><span class="line">    server web1 <span class="number">192.168.32.81:80</span> send-proxy check inter <span class="number">3000</span> fall <span class="number">3</span> rise <span class="number">5</span></span><br><span class="line"></span><br><span class="line">nginx配置：</span><br><span class="line">http &#123;</span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$proxy_protocol_addr</span>  <span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" '</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span> proxy_protocol; </span><br><span class="line">    <span class="comment">#listen 80;</span></span><br></pre></td></tr></table></figure></p><h5 id="内核参数优化"><a href="#内核参数优化" class="headerlink" title="内核参数优化"></a>内核参数优化</h5><p>&emsp;&emsp;haproxy在做四层负载时，如果要监听bind由keepalived生成的虚拟IP（VIP）时，需要修改内核参数，支持监听非本机IP，否则监听VIP的80端口时会导致haproxy服务无法启动。。<br>&emsp;&emsp;<code>vim /etc/sysctl.conf</code><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.ip_nonlocal_bind</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;如果多网卡，且VIP与后端VIP不在一个网段，还需要加上地址转发参数。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.ip_forward</span> = <span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;然后<code>sysctl -p</code>使配置文件生效。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS8 ~]<span class="selector-id">#sysctl</span> -p</span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.ip_nonlocal_bind</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.ipv4</span><span class="selector-class">.ip_forward</span> = <span class="number">1</span></span><br><span class="line">[root@CentOS8 ~]#</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;当然，也可以将haproxy改为监听0.0.0.0:80，表示监听本机所有网卡的IP的80端口，当keepalived的VIP漂到本机是，自然也可以被haproxy监听，没有时也不影响启动。不过这样的话，haproxy只能对一个项目集群做负载均衡了，而我们实际生产中，都是同时代理多个服务项目集群的转发，需通过bind不同IP的80/443端口来实现，如果直接一个服务bind0.0.0.0：80，占用了所有的80/443端口，显然就没法和其他项目共存了。<br>&emsp;&emsp;<strong>所以我们建议在四层负载工作模式下，不要监听0.0.0.0:80，而是监听指定的VIP。</strong></p><h4 id="http：七层代理"><a href="#http：七层代理" class="headerlink" title="http：七层代理"></a>http：七层代理</h4><p>&emsp;&emsp;七层负载均衡服务器起了一个反向代理服务器的作用，服务器建立一次TCP连接要三次握手，而client要访问webserver要先与七层负载设备进行三次握手后建立TCP连接，把要访问的报文信息发送给七层负载均衡；然后七层负载均衡再根据设置的均衡规则选择特定的webserver，然后通过三次握手与此台webserver建立TCP连接，然后webserver把需要的数据发送给七层负载均衡设备，负载均衡设备再把数据发送给client；所以，七层负载均衡设备起到了代理服务器的作用。</p><h5 id="七层工作模式的IP透传："><a href="#七层工作模式的IP透传：" class="headerlink" title="七层工作模式的IP透传："></a>七层工作模式的IP透传：</h5><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">haproxy 配置：</span><br><span class="line">defaults</span><br><span class="line">    option forwardfor</span><br><span class="line">或者：</span><br><span class="line">    option forwardfor header X-Forwarded-xxx #自定义传递IP参数,后端web服务器写X-Forwardedxxx</span><br><span class="line">    #如果写option forwardfor则后端服务器web格式为X-Forwarded-For</span><br><span class="line">listen配置：</span><br><span class="line">listen web_host</span><br><span class="line">    bind <span class="number">192.168</span><span class="number">.7</span><span class="number">.101</span>:<span class="number">80</span></span><br><span class="line">    mode http</span><br><span class="line">    log global</span><br><span class="line">    balance random</span><br><span class="line">    server web1 <span class="number">192.168</span><span class="number">.32</span><span class="number">.81</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br><span class="line">    server web2 <span class="number">192.168</span><span class="number">.32</span><span class="number">.82</span>:<span class="number">80</span> weight <span class="number">1</span> check <span class="built_in">int</span>er <span class="number">3000</span> fall <span class="number">2</span> rise <span class="number">5</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;配置web服务器，记录负载均衡透传的客户端IP地址<br><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#apache 配置：</span></span><br><span class="line">    LogFormat <span class="string">"%&#123;X-Forwarded-For&#125;i %a %l %u %t \"</span>%r\<span class="string">" %&gt;s %b \"</span>%&#123;Referer&#125;i\<span class="string">" \"</span>%&#123;UserAgent&#125;i\<span class="string">""</span> combined</span><br><span class="line"><span class="comment">#tomcat 配置：</span></span><br><span class="line">    pattern=<span class="string">'%&#123;X-Forwarded-For&#125;i %l %T %t &amp;quot;%r&amp;quot; %s %b &amp;quot;%&#123;UserAgent&#125;i&amp;quot;'</span>/&gt;</span><br><span class="line"><span class="comment">#nginx 日志格式：</span></span><br><span class="line">    http &#123;</span><br><span class="line">        log_format  main  <span class="string">'"<span class="variable">$http_x_forwarded_For</span>" - <span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" '</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></p><h3 id="haproxy功能实现"><a href="#haproxy功能实现" class="headerlink" title="haproxy功能实现"></a>haproxy功能实现</h3><p>&emsp;&emsp;初步调整好haproxy的配置文件之后，启动haproxy服务，就已经可以对后端服务器进行代理来实现负载均衡了，不过很多情况下我们需要对后端服务器进行动态操作，例如修改某些主机的负载权重，对某些主机上线或下线等等，而这时，再不影响业务正常访问的情况下，对haproxy动态操作方式一般有两种：在图形界面status状态页下操作，以及使用socat命令行工具通过socket通信。</p><h4 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h4><p>&emsp;&emsp;想实现在status界面拥有修改权限，需在配置文件中加入选项<code>stats admin if TRUE</code>。注意，TRUE要大写，否则服务起不来会报错<code>parsing [/etc/haproxy/haproxy.cfg:52] : error detected while parsing a &#39;stats admin&#39; rule : no such ACL : &#39;true&#39;.</code><br>&emsp;&emsp;最终如下面所示<br><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">listen</span> <span class="string">stats</span></span><br><span class="line">    <span class="attr">mode</span> <span class="string">http</span></span><br><span class="line">    <span class="attr">bind</span> <span class="string">0.0.0.0:9999</span></span><br><span class="line">    <span class="attr">stats</span> <span class="string">enable</span></span><br><span class="line">    <span class="attr">log</span> <span class="string">global</span></span><br><span class="line">    <span class="attr">stats</span> <span class="string">uri /proxy_status</span></span><br><span class="line">    <span class="attr">stats</span> <span class="string">auth haadmin:hapasswd</span></span><br><span class="line">    <span class="attr">stats</span> <span class="string">admin if TRUE</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;这是再刷新status界面，就可以看到界面已经发生了变化<br><img src="https://img-blog.csdnimg.cn/20191106151518987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191106151645858.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;就可以对选择的主机进行操作了。</p><h4 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h4><p>&emsp;&emsp;这是通过直接与haproxy的socekt通信，socket路径就是配置文件中指定的socket路径了，只支持本地通信。而且这需要借主socat的工具，需要先进行安装socat工具。<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> socat</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;用echo信息的方式通过管道传递给socat工具指定haproxy的socket，就可以发送与接收haproxy的信息了。<br>&emsp;&emsp;查看haproxy工作的详细信息<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">"show info"</span> | socat stdio /var/<span class="class"><span class="keyword">lib</span>/<span class="title">haproxy</span>/<span class="title">haproxy</span>.<span class="title">sock1</span></span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;查看haproxy控制命令<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">"help"</span> | socat stdio /var/<span class="class"><span class="keyword">lib</span>/<span class="title">haproxy</span>/<span class="title">haproxy</span>.<span class="title">sock1</span></span></span><br></pre></td></tr></table></figure></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">help</span>           : this message</span><br><span class="line"><span class="keyword">prompt</span>         : toggle interactive <span class="keyword">mode</span> <span class="keyword">with</span> <span class="keyword">prompt</span></span><br><span class="line">quit           : <span class="keyword">disconnect</span></span><br><span class="line"><span class="keyword">show</span> tls-<span class="keyword">keys</span> [<span class="keyword">id</span>|*]: <span class="keyword">show</span> tls <span class="keyword">keys</span> <span class="keyword">references</span> <span class="keyword">or</span> dump tls ticket <span class="keyword">keys</span> <span class="keyword">when</span> <span class="keyword">id</span> specified</span><br><span class="line"><span class="keyword">set</span> ssl tls-<span class="keyword">key</span> [<span class="keyword">id</span>|keyfile] &amp;lttlskey&amp;gt: <span class="keyword">set</span> the <span class="keyword">next</span> TLS <span class="keyword">key</span> <span class="keyword">for</span> the &amp;ltid&amp;gt <span class="keyword">or</span> &amp;ltkeyfile&amp;gt listener <span class="keyword">to</span> &amp;lttlskey&amp;gt</span><br><span class="line"><span class="keyword">show</span> sess [<span class="keyword">id</span>] : report the <span class="keyword">list</span> <span class="keyword">of</span> <span class="keyword">current</span> sessions <span class="keyword">or</span> dump this <span class="keyword">session</span></span><br><span class="line"><span class="keyword">shutdown</span> <span class="keyword">session</span> : <span class="keyword">kill</span> a specific <span class="keyword">session</span></span><br><span class="line"><span class="keyword">shutdown</span> sessions <span class="keyword">server</span> : <span class="keyword">kill</span> sessions <span class="keyword">on</span> a <span class="keyword">server</span></span><br><span class="line"><span class="keyword">clear</span> counters : <span class="keyword">clear</span> <span class="keyword">max</span> <span class="keyword">statistics</span> counters (<span class="keyword">add</span> <span class="string">'all'</span> <span class="keyword">for</span> <span class="keyword">all</span> counters)</span><br><span class="line"><span class="keyword">show</span> info      : report information about the running process [<span class="keyword">json</span>|typed]</span><br><span class="line"><span class="keyword">show</span> stat      : report counters <span class="keyword">for</span> <span class="keyword">each</span> proxy <span class="keyword">and</span> <span class="keyword">server</span> [<span class="keyword">json</span>|typed]</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">schema</span> <span class="keyword">json</span> : report <span class="keyword">schema</span> used <span class="keyword">for</span> stats</span><br><span class="line"><span class="keyword">disable</span> <span class="keyword">agent</span>  : <span class="keyword">disable</span> <span class="keyword">agent</span> checks (<span class="keyword">use</span> <span class="string">'set server'</span> instead)</span><br><span class="line"><span class="keyword">disable</span> health : <span class="keyword">disable</span> health checks (<span class="keyword">use</span> <span class="string">'set server'</span> instead)</span><br><span class="line"><span class="keyword">disable</span> <span class="keyword">server</span> : <span class="keyword">disable</span> a <span class="keyword">server</span> <span class="keyword">for</span> maintenance (<span class="keyword">use</span> <span class="string">'set server'</span> instead)</span><br><span class="line"><span class="keyword">enable</span> <span class="keyword">agent</span>   : <span class="keyword">enable</span> <span class="keyword">agent</span> checks (<span class="keyword">use</span> <span class="string">'set server'</span> instead)</span><br><span class="line"><span class="keyword">enable</span> health  : <span class="keyword">enable</span> health checks (<span class="keyword">use</span> <span class="string">'set server'</span> instead)</span><br><span class="line"><span class="keyword">enable</span> <span class="keyword">server</span>  : <span class="keyword">enable</span> a disabled <span class="keyword">server</span> (<span class="keyword">use</span> <span class="string">'set server'</span> instead)</span><br><span class="line"><span class="keyword">set</span> maxconn <span class="keyword">server</span> : <span class="keyword">change</span> a <span class="keyword">server</span><span class="string">'s maxconn setting</span></span><br><span class="line"><span class="string">set server     : change a server'</span>s state, weight <span class="keyword">or</span> address</span><br><span class="line"><span class="keyword">get</span> weight     : report a <span class="keyword">server</span><span class="string">'s current weight</span></span><br><span class="line"><span class="string">set weight     : change a server'</span>s weight (deprecated)</span><br><span class="line"><span class="keyword">show</span> resolvers [<span class="keyword">id</span>]: dumps counters <span class="keyword">from</span> <span class="keyword">all</span> resolvers <span class="keyword">section</span> <span class="keyword">and</span> associated <span class="keyword">name</span> servers</span><br><span class="line"><span class="keyword">clear</span> <span class="keyword">table</span>    : remove an entry <span class="keyword">from</span> a <span class="keyword">table</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">table</span> [<span class="keyword">id</span>] : <span class="keyword">update</span> <span class="keyword">or</span> <span class="keyword">create</span> a <span class="keyword">table</span> entry<span class="string">'s data</span></span><br><span class="line"><span class="string">show table [id]: report table usage stats or dump this table'</span>s <span class="keyword">contents</span></span><br><span class="line"><span class="keyword">show</span> peers [peers <span class="keyword">section</span>]: dump <span class="keyword">some</span> information about <span class="keyword">all</span> the peers <span class="keyword">or</span> this peers <span class="keyword">section</span></span><br><span class="line"><span class="keyword">disable</span> frontend : temporarily <span class="keyword">disable</span> specific frontend</span><br><span class="line"><span class="keyword">enable</span> frontend : re-<span class="keyword">enable</span> specific frontend</span><br><span class="line"><span class="keyword">set</span> maxconn frontend : <span class="keyword">change</span> a frontend<span class="string">'s maxconn setting</span></span><br><span class="line"><span class="string">show servers state [id]: dump volatile server information (for backend &amp;ltid&amp;gt)</span></span><br><span class="line"><span class="string">show backend   : list backends in the current running config</span></span><br><span class="line"><span class="string">shutdown frontend : stop a specific frontend</span></span><br><span class="line"><span class="string">set dynamic-cookie-key backend : change a backend secret key for dynamic cookies</span></span><br><span class="line"><span class="string">enable dynamic-cookie backend : enable dynamic cookies on a specific backend</span></span><br><span class="line"><span class="string">disable dynamic-cookie backend : disable dynamic cookies on a specific backend</span></span><br><span class="line"><span class="string">show errors    : report last request and response errors for each proxy</span></span><br><span class="line"><span class="string">set maxconn global : change the per-process maxconn setting</span></span><br><span class="line"><span class="string">set rate-limit : change a rate limiting value</span></span><br><span class="line"><span class="string">set severity-output [none|number|string] : set presence of severity level in feedback information</span></span><br><span class="line"><span class="string">set timeout    : change a timeout setting</span></span><br><span class="line"><span class="string">show env [var] : dump environment variables known to the process</span></span><br><span class="line"><span class="string">show cli sockets : dump list of cli sockets</span></span><br><span class="line"><span class="string">show cli level   : display the level of the current CLI session</span></span><br><span class="line"><span class="string">show fd [num] : dump list of file descriptors in use</span></span><br><span class="line"><span class="string">show activity : show per-thread activity stats (for support/developers)</span></span><br><span class="line"><span class="string">operator       : lower the level of the current CLI session to operator</span></span><br><span class="line"><span class="string">user           : lower the level of the current CLI session to user</span></span><br><span class="line"><span class="string">show startup-logs : report logs emitted during HAProxy startup</span></span><br><span class="line"><span class="string">show cache     : show cache status</span></span><br><span class="line"><span class="string">add acl        : add acl entry</span></span><br><span class="line"><span class="string">clear acl &amp;ltid&amp;gt : clear the content of this acl</span></span><br><span class="line"><span class="string">del acl        : delete acl entry</span></span><br><span class="line"><span class="string">get acl        : report the patterns matching a sample for an ACL</span></span><br><span class="line"><span class="string">show acl [id]  : report available acls or dump an acl'</span>s <span class="keyword">contents</span></span><br><span class="line"><span class="keyword">add</span> <span class="keyword">map</span>        : <span class="keyword">add</span> <span class="keyword">map</span> entry</span><br><span class="line"><span class="keyword">clear</span> <span class="keyword">map</span> &amp;ltid&amp;gt : <span class="keyword">clear</span> the <span class="keyword">content</span> <span class="keyword">of</span> this <span class="keyword">map</span></span><br><span class="line">del <span class="keyword">map</span>        : <span class="keyword">delete</span> <span class="keyword">map</span> entry</span><br><span class="line"><span class="keyword">get</span> <span class="keyword">map</span>        : report the <span class="keyword">keys</span> <span class="keyword">and</span> <span class="keyword">values</span> matching a <span class="keyword">sample</span> <span class="keyword">for</span> a <span class="keyword">map</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">map</span>        : <span class="keyword">modify</span> <span class="keyword">map</span> entry</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">map</span> [<span class="keyword">id</span>]  : report available maps <span class="keyword">or</span> dump a <span class="keyword">map</span><span class="string">'s contents</span></span><br><span class="line"><span class="string">show pools     : report information about the memory pools usage</span></span><br><span class="line"><span class="string">show profiling : show CPU profiling options</span></span><br><span class="line"><span class="string">set  profiling : enable/disable CPU profiling</span></span><br><span class="line"><span class="string">show threads   : show some threads debugging information</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;查看线程1工作下的web_host集群中web1主机的权重<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@CentOS8</span> ~]<span class="meta">#echo <span class="string">"get weight web_host/web1"</span> | socat stdio /var/lib/haproxy/haproxy.sock1</span></span><br><span class="line"><span class="number">1</span> (initial <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">[root<span class="symbol">@CentOS8</span> ~]<span class="meta">#</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;设置线程2工作下的web_host集群中web1主机的权重为2。设置时，不回应信息，说明设置成功。<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@CentOS8</span> ~]<span class="meta">#echo <span class="string">"set weight web_host/web1 2"</span> | socat stdio /var/lib/haproxy/haproxy.sock2</span></span><br><span class="line"></span><br><span class="line">[root<span class="symbol">@CentOS8</span> ~]<span class="meta">#</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;需要注意的一点就是，多线程工作模式下，<strong>每个线程是独立的</strong>，设置1线程的权重，在其他线程上并不生效。这就意味着，如果想将某个服务器下线的话，需要在每个线程上都分别下线，上线是，也需要在每个线程中enable server。可以用脚本写一个循环来实现。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;HAProxy是法国开发者 威利塔罗(Willy Tarreau) 在2000年使用C语言开发的一个开源软件，是一款具备高并发(一万以上)、高性能的TCP&amp;gt;和HTTP负载均衡器，支持基于cookie的持久性，自动故障切换，支持正则表达式及web状态统计。&lt;br&gt;&amp;emsp;&amp;emsp;HAProxy特别适用于那些负载特大的web站点，这些站点通常又需要会话保持或七层处理。HAProxy运行在当前的硬件上，完全可以支持数以万计的并发连接。并且它的运行模式使得它可以很简单安全的整合进您当前的架构中， 同时可以保护你的web服务器不被暴露到网络上。&lt;br&gt;&amp;emsp;&amp;emsp;包括 GitHub、Bitbucket、Stack Overflow、Reddit、Tumblr、Twitter和 Tuenti[7]在内的知名网站，及亚马逊网络服务系统都使用了HAProxy。&lt;br&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="https://hewanyue.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="高可用" scheme="https://hewanyue.com/tags/%E9%AB%98%E5%8F%AF%E7%94%A8/"/>
    
      <category term="HAProxy" scheme="https://hewanyue.com/tags/HAProxy/"/>
    
      <category term="负载均衡" scheme="https://hewanyue.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
      <category term="调度算法" scheme="https://hewanyue.com/tags/%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>报错：Header V3 RSA_SHA256 Signature, key ID 2f86d6a1_ NOKEY</title>
    <link href="https://hewanyue.com//blog/5da16ceb.html"/>
    <id>https://hewanyue.com//blog/5da16ceb.html</id>
    <published>2019-11-02T12:04:29.000Z</published>
    <updated>2019-12-09T02:46:56.358Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;博主在CentOS8上dnf安装PHP的依赖包libmcrypt-devel的时候，死活装不上，一直报错。看了下说是依赖项libmcrypt装不上，报错原因说的是是秘钥校验时缺少主机名。这很奇怪，因为用的是阿里的epel源，之前安装各种软件包都没问题，这次突然就秘钥验证不过了。</p><a id="more"></a><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>CentOS8 php<span class="number">-7.3</span><span class="number">.10</span>]#yum install libmcrypt-devel -y</span><br><span class="line">Last metadata expiration check: <span class="number">0</span>:<span class="number">01</span>:<span class="number">31</span> ago on Sat <span class="number">02</span> Nov <span class="number">2019</span> <span class="number">07</span>:<span class="number">47</span>:<span class="number">12</span> PM CST.</span><br><span class="line">Dependencies resolved.</span><br><span class="line">=====================================================================================================================================</span><br><span class="line"> Package                             Arch                       Version                             Repository                  Size</span><br><span class="line">=====================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> libmcrypt-devel                     x86_64                     <span class="number">2.5</span><span class="number">.8</span><span class="number">-26.</span>el8                        aliyun                      <span class="number">18</span> k</span><br><span class="line">Installing dependencies:</span><br><span class="line"> libmcrypt                           x86_64                     <span class="number">2.5</span><span class="number">.8</span><span class="number">-26.</span>el8                        aliyun                     <span class="number">109</span> k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=====================================================================================================================================</span><br><span class="line">Install  <span class="number">2</span> Packages</span><br><span class="line"></span><br><span class="line">Total size: <span class="number">127</span> k</span><br><span class="line">Installed size: <span class="number">320</span> k</span><br><span class="line">Downloading Packages:</span><br><span class="line">[SKIPPED] libmcrypt<span class="number">-2.5</span><span class="number">.8</span><span class="number">-26.</span>el8.x86_64.rpm: Already downloaded                                                                     </span><br><span class="line">[SKIPPED] libmcrypt-devel<span class="number">-2.5</span><span class="number">.8</span><span class="number">-26.</span>el8.x86_64.rpm: Already downloaded                                                               </span><br><span class="line">warning: /var/cache/dnf/aliyun-a19d7e5a690d289a/packages/libmcrypt<span class="number">-2.5</span><span class="number">.8</span><span class="number">-26.</span>el8.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID <span class="number">2f</span>86d6a1: NOKEY</span><br><span class="line">aliyun                                                                                               <span class="number">0.0</span>  B/s |   <span class="number">0</span>  B     <span class="number">00</span>:<span class="number">00</span>    </span><br><span class="line">Curl error (<span class="number">3</span>): URL using bad/illegal format <span class="keyword">or</span> missing URL <span class="keyword">for</span> file:<span class="comment">//https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-8 [Invalid file://hostname/, expected localhost or 127.0.0.1 or none]</span></span><br><span class="line">The downloaded packages were saved <span class="keyword">in</span> cache until the next successful transaction.</span><br><span class="line">You can remove cached packages by executing <span class="string">'dnf clean packages'</span>.</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;查了下网上很多说法，不过都没有解决疑问。解决方案也五花八门，类似<code>rpm --import  /etc/pki/rpm-gpg/RPM*</code>导入秘钥的，也有建议安装时加选项<code>--force --nodeps</code>忽略依赖关系的。秘钥导入没用，我本身yum源仓库配置文件也填写了阿里云镜像源的秘钥路径的。忽略依赖关系强制安装的话，担心会不按依赖项，导致其他别的问题，而且这个选项本身也报错了。<br>&emsp;&emsp;后来只能干脆把秘钥检查关了，确实能装上了。<br>&emsp;&emsp;<code>vim /etc/yum.repos.d/aliyun.repo</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name=aliyun</span><br><span class="line">baseurl=https://mirrors.aliyun.com/epel/$releasever/Everything/$basearch/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file://https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-$releasever</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;希望不是因为阿里的安装包被人动过而导致秘钥检查不通过吧，姑且相信吧。记录一下，等后期如果有问题或者有空再来排查原因。<br>&emsp;&emsp;<br>&emsp;&emsp;<br>——————————————后记 ———————————–<br>&emsp;&emsp;原来当时配置yum源文件的时候不小心画蛇添足了，导致gpgkey文件路径不对，应为<code>gpgkey=https://mirrors.aliyun.com/epel/RPM-GPG-KEY-EPEL-$releaseve</code>，用file://的话，就不需要加协议了，直接写主机名或IP加路径。<br>&emsp;&emsp;要时刻提醒自己还是要仔细，一直不出错不代表没错。<br>&emsp;&emsp;<br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;2019.11.10</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;博主在CentOS8上dnf安装PHP的依赖包libmcrypt-devel的时候，死活装不上，一直报错。看了下说是依赖项libmcrypt装不上，报错原因说的是是秘钥校验时缺少主机名。这很奇怪，因为用的是阿里的epel源，之前安装各种软件包都没问题，这次突然就秘钥验证不过了。&lt;/p&gt;
    
    </summary>
    
      <category term="故障记录" scheme="https://hewanyue.com/categories/%E6%95%85%E9%9A%9C%E8%AE%B0%E5%BD%95/"/>
    
    
      <category term="故障" scheme="https://hewanyue.com/tags/%E6%95%85%E9%9A%9C/"/>
    
      <category term="记录" scheme="https://hewanyue.com/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="排错" scheme="https://hewanyue.com/tags/%E6%8E%92%E9%94%99/"/>
    
      <category term="epel" scheme="https://hewanyue.com/tags/epel/"/>
    
      <category term="阿里云" scheme="https://hewanyue.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>nginx防盗链设置的一些细节</title>
    <link href="https://hewanyue.com//blog/e4415633.html"/>
    <id>https://hewanyue.com//blog/e4415633.html</id>
    <published>2019-10-30T06:08:19.000Z</published>
    <updated>2019-11-10T04:33:36.888Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;防盗链的必要性，我这里就不再赘述了，这是网站设计的最基本要求。而在nginx中，一般比较容易实现的防盗链手段就是通过ungx_http_referer_module模块<a href="https://nginx.org/en/docs/http/ngx_http_referer_module.html#valid_referers" rel="noopener" target="_blank">（查看官方文档）</a> 检查访问请求的referer信息是否有效来实现防盗链功能。<br>&emsp;&emsp;所谓referer检查，举个例子来说，在正常情况下当用户在浏览<code>http://example.com/abc.html</code>时点击一个链接去到<code>http://example.com/123.mp3</code>文件时，浏览器在发出请求123.mp3 资源时还会附带当刻浏览器所处的页面地址（即<code>http://example.com/abc.html</code>），所以当你的网站程序接收到下载 jacky.mp3 资源请求的时候，先判断http的referer字段的值，如果是从 自己的域名（example.com）过来的，则可以认为是合法的连接请求，否则就返回一个错误的提示信息。<br><a id="more"></a><br>&emsp;&emsp;这种方法通常用于图片、mp3这种容易被人用html“嵌入”到其他网站的资源，使用这种方法可以防止你的图片直接出现在别人的网页里（或者防止mp3直接被其他网站嵌入到flash播放器里），不过访客使用下载工具还是可以轻松下载，因为现在的下载工具一般会自动用你的域名构造一个引用地址，所以如果想再进一步防范的话，可以使用一个对应表限制每个资源的引用地址，例如将 123.mp3 的引用地址限制为<code>http://example.com/abc.htmlid=123456</code>，这样下载工具就不太可能构造一个“正确”的引用地址了。</p><h3 id="referer"><a href="#referer" class="headerlink" title="referer"></a>referer</h3><p>&emsp;&emsp;要过滤掉盗链访问的referer信息，首先要明确知道，正常访问的referer有哪些。一般来说，正常的referer信息有以下四种：</p><ul><li>none：请求报文首部没有referer首部，比如用户直接在浏览器输入域名访问web网站，就没有referer信息。</li><li>blocked：请求报文有referer首部，但无有效值，比如为空。</li><li>本站链接：referer首部中包含本站域名。</li><li>搜索引擎跳转：referer中为 <em> .baidu. </em>  、 <em> .google. </em> 、及其他搜索引擎（如360、必应）（具体图片或mp3媒体文件，不希望被搜索引擎引用，可单独设置，主页等html页面建议允许搜索引擎跳转）<br>&emsp;&emsp;所以根据官方文档,我们只需制定合适的匹配规则，将正常的访问放过，对那些“非正常的”盗链访问，返回403错误代码，即可实现防盗链。<blockquote>undefined</blockquote><h3 id="过滤规则设置"><a href="#过滤规则设置" class="headerlink" title="过滤规则设置"></a>过滤规则设置</h3>&emsp;&emsp;打开nginx配置文件，找到想要定义的location下，加入下面设置<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span>  /blog/ &#123;</span><br><span class="line">    <span class="attribute">root</span> /apps/nginx/html/;    <span class="comment">#定义路径</span></span><br><span class="line">    <span class="attribute">valid_referers</span> <span class="literal">none</span> <span class="literal">blocked</span> server_names <span class="regexp">*.example.com</span>  ~\.google\. ~\.baidu\.;  </span><br><span class="line">    <span class="comment">#设置允许访问的匹配规则,匹配规则可以写在一行，也可以分行写。</span></span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$invalid_referer</span>) &#123;     <span class="comment">#设置条件判断，不符合上述规则的，返回403状态码</span></span><br><span class="line">        <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span><span class="regexp"> ^~</span> /mp3/ &#123;</span><br><span class="line">    <span class="attribute">alias</span> /apps/nginx/html/blog/mp3/;    <span class="comment">#定义路径，也可用root</span></span><br><span class="line">    <span class="attribute">valid_referers</span> <span class="literal">none</span> <span class="literal">blocked</span> server_names <span class="regexp">*.example.com</span> ;   </span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$invalid_referer</span>) &#123;     <span class="comment">#设置条件判断，不符合上述规则的，返回403状态码</span></span><br><span class="line">        <span class="attribute">return</span> <span class="number">403</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>&emsp;&emsp;也可在全局配置server中做设置，不过还是建议每个location单独设置，因为对于图片和或者音频视频文件本身，还是不希望直接被搜索引擎所引用，造成网站资源的无意义的消耗。</p><h3 id="跳转设置"><a href="#跳转设置" class="headerlink" title="跳转设置"></a>跳转设置</h3><p>&emsp;&emsp;对于盗链者，也可以予以反击，允许他们请求我们的资源，不过，只给他们我们指定的资源，例如百度使用的防盗链图：</p><p>&emsp;&emsp;<img src="https://img-blog.csdnimg.cn/20191030165321571.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;配置上只需将<code>return 403</code>;改为<code>rewrite ^/ http://www.example/images/return.jpg</code>; 例如：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span>  <span class="regexp">~ return\.jpg$</span> &#123;</span><br><span class="line">    <span class="attribute">root</span> /apps/nginx/html/blog/images/</span><br><span class="line">｝</span><br><span class="line">location  <span class="regexp">~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span> &#123;</span><br><span class="line">    <span class="attribute">access_log</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">root</span> /apps/nginx/html/blog/images/; </span><br><span class="line">    <span class="attribute">valid_referers</span> <span class="literal">none</span> <span class="literal">blocked</span> server_names <span class="regexp">*.example.com</span>  ~\.google\. ~\.baidu\.; </span><br><span class="line">    <span class="attribute">if</span> (<span class="variable">$invalid_referer</span>) &#123; </span><br><span class="line">        <span class="attribute">rewrite</span><span class="regexp"> ^/</span> http://www.example/images/return.jpg;</span><br><span class="line">                    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;<strong>PS：return.jpg要设置规则优先匹配到，这个图片不能被防盗链，不然会无限重定向，导致显示不正常。</strong></p><h3 id="规则细节"><a href="#规则细节" class="headerlink" title="规则细节"></a>规则细节</h3><p>&emsp;&emsp;设置匹配规则时，根据官方文档，只有none、blocked、server_names、arbitrary string和regular expression五种规则。</p><blockquote><p> Parameters can be as follows:</p><p><strong>none</strong><br>&emsp;&emsp;the “Referer” field is missing in the request header;<br><strong>blocked</strong><br>&emsp;&emsp;the “Referer” field is present in the request header, but its value has  been deleted by a firewall or proxy server; such values are strings that do  not start with “http://” or “https://”;<br><strong>server_names</strong><br>&emsp;&emsp;the “Referer” request header field contains one of the server names;<br><strong>arbitrary string</strong><br>&emsp;&emsp;defines a server name and an optional URI prefix. A server name can  have an “* ” at the beginning or end. During the checking, the server’s port in the “Referer” field is ignored;<br><strong>regular expression</strong><br>&emsp;&emsp;the first symbol should be a “~”. It should be noted that an expression  will be matched against the text starting after the “http://” or “https://”. </p></blockquote><p>&emsp;&emsp;这就要求我们在设置匹配规则的时候，要按照这个五种方式来，none、blocked直接写上就可以了，没有什么可说的，我们重点理解下剩下三种。</p><h4 id="server-names"><a href="#server-names" class="headerlink" title="server_names"></a>server_names</h4><p>&emsp;&emsp;server names字面上理解很容易，就是匹配的域名。注意：<strong>这里的域名，指本服务器上所有监听的域名</strong>。而且这是一个包含的关系，只要referer头部信息中包含有本服务器的监听的任意域名，即可通过匹配。</p><h4 id="arbitrary-string"><a href="#arbitrary-string" class="headerlink" title="arbitrary string"></a>arbitrary string</h4><p>&emsp;&emsp;翻译过来是任意字符串，其实就是任意可以匹配到到字符串，这里支持通配符。大致有2种写法：</p><ul><li><p>直接写域名<br>例如可以写<code>*.example.com</code>,也可写为<code>www.example.*</code>，可问题是为什么就偏偏<strong>不支持 <em> .example. </em> 呢</strong>。这我也很费解，不过确实不支持，有兴趣的朋友可以去试一下，也希望能有大佬告知这其中的原理是什么。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS8 ~]<span class="meta">#/apps/nginx/sbin/nginx -t</span></span><br><span class="line"><span class="symbol">nginx:</span> [emerg] invalid hostname or wildcard <span class="string">"*.example.*"</span> in <span class="meta-keyword">/apps/</span>nginx<span class="meta-keyword">/conf/</span>nginx.conf:<span class="number">95</span></span><br><span class="line"><span class="symbol">nginx:</span> configuration file <span class="meta-keyword">/apps/</span>nginx<span class="meta-keyword">/conf/</span>nginx.conf test failed</span><br></pre></td></tr></table></figure></li><li><p>定义匹配域名加路径<br>&emsp;&emsp;例如：<code>www.example.com/blog</code>;<br>&emsp;&emsp;而博主试验过很很多次，如果写成例如<code>www.example.com/*</code>，在<code>www.example.com/blog/</code>页面下去引用页面下的<code>/apps/nginx/html/mp3/123.mp3</code>文件时就会报403错误，而写域名加确切地址如<code>www.example.com/blog</code>时才可以访问。仔细查阅了官方文档，才知道，有个很关键的细节就是，<strong>这个通配符的位置，只能在域名里</strong>。可以再看一下官方文档，</p><blockquote><p>&emsp;&emsp;defines a server name and an optional URI prefix. A server name can have an “*” at the beginning or end. During the checking, the server’s port in the “Referer” field is ignored; </p></blockquote></li></ul><p>&emsp;&emsp;我们可以得知，只可以在域名的开头和结尾用 <em> 的通配符，而不是URI中，这也就是为什么我发现<code></code><a href="http://www.examlpe.com/" rel="noopener" target="_blank">www.examlpe.com/</a></em><code>无法匹配通过的原因。&amp;emsp;&amp;emsp;跟server_names一样，只要**包含**自定义字符串就可以,例如匹配规则写成</code><a href="http://www.example.com/mp3/``，在``www.example.com/mp3/``页面下就可以引用的``/apps/nginx/html/mp3/123.mp3``文件了，在``www.example.com/mp3/abc/efg/``页面下是同样可以跳转访问``/apps/nginx/html/mp3/123.mp3``文件的。" rel="noopener" target="_blank">www.example.com/mp3/``，在``www.example.com/mp3/``页面下就可以引用的``/apps/nginx/html/mp3/123.mp3``文件了，在``www.example.com/mp3/abc/efg/``页面下是同样可以跳转访问``/apps/nginx/html/mp3/123.mp3``文件的。</a></p><h4 id="regular-expression"><a href="#regular-expression" class="headerlink" title="regular expression"></a>regular expression</h4><p>&emsp;&emsp;被指定的正则表达式模式匹配到的字符串,要使用 ~ 开头，例如：~.*.google.com。这要严格按照正则表达式匹配到的referer写，否则就会无法访问。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>&emsp;&emsp;设置匹配规则时，必须符合其中的某一种，而不能想当然的把几种规则混合起来使用，想要放行的链接，一定要考虑好，到底确切适用于哪一种规则，才不会出现“误伤“、“漏网”的情况。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;防盗链的必要性，我这里就不再赘述了，这是网站设计的最基本要求。而在nginx中，一般比较容易实现的防盗链手段就是通过ungx_http_referer_module模块&lt;a href=&quot;https://nginx.org/en/docs/http/ngx_http_referer_module.html#valid_referers&quot; rel=&quot;noopener&quot; target=&quot;_blank&quot;&gt;（查看官方文档）&lt;/a&gt; 检查访问请求的referer信息是否有效来实现防盗链功能。&lt;br&gt;&amp;emsp;&amp;emsp;所谓referer检查，举个例子来说，在正常情况下当用户在浏览&lt;code&gt;http://example.com/abc.html&lt;/code&gt;时点击一个链接去到&lt;code&gt;http://example.com/123.mp3&lt;/code&gt;文件时，浏览器在发出请求123.mp3 资源时还会附带当刻浏览器所处的页面地址（即&lt;code&gt;http://example.com/abc.html&lt;/code&gt;），所以当你的网站程序接收到下载 jacky.mp3 资源请求的时候，先判断http的referer字段的值，如果是从 自己的域名（example.com）过来的，则可以认为是合法的连接请求，否则就返回一个错误的提示信息。&lt;br&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="https://hewanyue.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="nginx" scheme="https://hewanyue.com/tags/nginx/"/>
    
      <category term="防盗链" scheme="https://hewanyue.com/tags/%E9%98%B2%E7%9B%97%E9%93%BE/"/>
    
      <category term="referer" scheme="https://hewanyue.com/tags/referer/"/>
    
      <category term="配置文件" scheme="https://hewanyue.com/tags/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    
      <category term="细节" scheme="https://hewanyue.com/tags/%E7%BB%86%E8%8A%82/"/>
    
  </entry>
  
  <entry>
    <title>企业级应用：负载均衡层——LVS调度器详解</title>
    <link href="https://hewanyue.com//blog/159ef64c.html"/>
    <id>https://hewanyue.com//blog/159ef64c.html</id>
    <published>2019-10-24T14:26:16.000Z</published>
    <updated>2019-12-04T03:45:19.496Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;所谓LVS，是Linux Virtual Server的缩写，直译就是linux虚拟服务器。LVS说是虚拟服务器，并不是说这个服务器本身不存在，而是指一般用户访问企业web网站时，访问的都是LVS，而LVS本身上面没有任何web界面资源，真实的界面以及服务都在后端web服务器上，LVS服务器起到的是一个指引分流的作用，所以相对来说，后端的web服务器是real server,而LVS就被称为是virtual server（虚拟服务器）了。<br>&emsp;&emsp;既然这个服务器上没有页面资源，又无法提供服务，那为什么还有必要部署它来多此一举呢？因为通常来说，我们访问的web服务，都不是由单一服务器主机来支撑的，背后都有好几台、甚至成百上千台web服务器集群共同提供，一台单一主机是无法支撑大的访问并发的，需要很多台服务器来共同分担压力，这时就需要一个专门的服务器来进行调度，将大量访问请求分配到不同的web服务器上，减小每台服务器的压力，实现负载均衡。<br>&emsp;&emsp;本文将详细介绍LVS调度器的工作模式及配置实例。<br><a id="more"></a></p><h3 id="集群和分布式"><a href="#集群和分布式" class="headerlink" title="集群和分布式"></a>集群和分布式</h3><p>&emsp;&emsp;集群：同一个业务系统，部署在多台服务器上。集群中，每一台服务器实现的功能没有差别，数据和代码都是一样的。<br>&emsp;&emsp;分布式：一个业务被拆成多个子业务，或者本身就是不同的业务，部署在多台服务器上。分布式中，每一台服务器实现的功能是有差别的，数据和代码也是不一样的，分布式每台服务器功能加起来，才是完整的业务。<br>&emsp;&emsp;分布式是以缩短单个任务的执行时间来提升效率的，而集群则是通过提高单位时间内执行的任务数来提升效率。<br>&emsp;&emsp;对于大型网站，访问用户很多，实现一个群集，在前面部署一个负载均衡服务器，后面几台服务器完成同一业务。如果有用户进行相应业务访问时，负载均衡器根据后端哪台服务器的负载情况，决定由给哪一台去完成响应，并且一台服务器垮了，其它的服务器可以顶上来。分布式的每一个节点，都完成不同的业务，如果一个节点垮了，那这个业务可能就会失败。</p><h4 id="Cluster概念"><a href="#Cluster概念" class="headerlink" title="Cluster概念"></a>Cluster概念</h4><p>&emsp;&emsp;Cluster：集群,为解决某个特定问题将多台计算机组合起来形成的单个系统。<br>;Linux Cluster类型：</p><ul><li>LB：Load Balancing，负载均衡</li><li>HA：High Availiablity，高可用，SPOF（single Point Of failure）<br>MTBF:Mean Time Between Failure 平均无故障时间<br>MTTR:Mean Time To Restoration（ repair）平均恢复前时间<br>A=MTBF/（MTBF+MTTR(0,1)：99%,99.5%,99.9%,99.99%,99.999%</li><li>HPC：High-performance computing，高性能</li></ul><h5 id="LB-Cluster的实现"><a href="#LB-Cluster的实现" class="headerlink" title="LB Cluster的实现"></a>LB Cluster的实现</h5><ul><li>硬件<br>F5 Big-IP<br>Citrix Netscaler<br>A10 A10</li><li>软件<br>lvs：Linux Virtual Server，阿里四层SLB (Server Load Balance)使用网络传输的下四层,不支持应用层等数据的调度内核级:功能虽然弱,性能好,一般最为最前端的调度器.<br>nginx：支持七层调度，阿里七层SLB使用Tengine<br>haproxy：支持七层调度<br>ats：Apache Traffic Server，yahoo捐助给apache<br>perlbal：Perl 编写<br>pound</li></ul><h5 id="LB-Cluster基于工作的协议层次划分："><a href="#LB-Cluster基于工作的协议层次划分：" class="headerlink" title="LB Cluster基于工作的协议层次划分："></a>LB Cluster基于工作的协议层次划分：</h5><ul><li>传输层（通用）：DPORT<br>LVS：<br>nginx：stream<br>haproxy：mode tcp</li><li>应用层（专用）：针对特定协议，自定义的请求模型分类<br>proxy server：<br>http：nginx, httpd, haproxy(mode http), …<br>fastcgi：nginx, httpd, …<br>mysql：mysql-proxy, …</li></ul><h5 id="LB-Cluster中用户的会话保持"><a href="#LB-Cluster中用户的会话保持" class="headerlink" title="LB Cluster中用户的会话保持"></a>LB Cluster中用户的会话保持</h5><p>&emsp;&emsp;负载均衡之后，用户会话保持的解决方案：<br>&emsp;&emsp;(1) session sticky：同一用户调度固定服务器<br>&emsp;&emsp;      Source IP：LVS sh算法（对某一特定服务而言）(固定IP)<br>&emsp;&emsp;      Cookie   (LVS四层调度,无法识别cookie)<br>&emsp;&emsp;(2) session replication：每台服务器拥有全部session<br>&emsp;&emsp;      session multicast cluster<br>&emsp;&emsp;(3) session server：专门的session服务器，如Memcached，Redis</p><h4 id="分布式系统："><a href="#分布式系统：" class="headerlink" title="分布式系统："></a>分布式系统：</h4><p>常见的分布式存储： Ceph，GlusterFS，FastDFS，MogileFS<br>常见的分布式计算：hadoop，Spark<br>这里不多介绍。</p><h3 id="LVS介绍"><a href="#LVS介绍" class="headerlink" title="LVS介绍"></a>LVS介绍</h3><p>&emsp;&emsp;LVS：Linux Virtual Server，负载调度器，在linux内核集成。LVS项目在1998年5月由章文嵩博士成立，是中国国内最早出现的自由软件项目之一。<br>&emsp;&emsp;LVS实现负载均衡,自身的单点失败问题由keepalived解决(vrrp协议).<br>&emsp;&emsp;keepalived还可以实现检查后端服务器状态.</p><h4 id="lvs集群类型中的术语："><a href="#lvs集群类型中的术语：" class="headerlink" title="lvs集群类型中的术语："></a>lvs集群类型中的术语：</h4><ul><li>VS：Virtual Server，Director Server(DS)，Dispatcher(调度器)，Load Balancer</li><li>RS：Real Server(lvs),，upstream server(nginx)，backend server(haproxy)</li><li>CIP：Client IP</li><li>VIP: Virtual serve IP VS外网的IP  (一般也是内网IP,由防火墙DNAT指向)</li><li>DIP: Director IP VS内网的IP</li><li>RIP: Real server IP<br>&emsp;&emsp;访问流程：CIP <--> VIP == DIP <--> RIP    </--></--></li><li>lvs: ipvsadm/ipvs<br>&emsp;&emsp;ipvsadm：用户空间的命令行工具，规则管理器，用于管理集群服务及RealServer<br>&emsp;&emsp;ipvs：工作于内核空间netfilter的INPUT钩子上的框架</li></ul><h4 id="lvs的模式："><a href="#lvs的模式：" class="headerlink" title="lvs的模式："></a>lvs的模式：</h4><p>&emsp;&emsp;<strong>lvs-nat</strong>：修改请求报文的目标IP,多目标IP的DNAT<br>&emsp;&emsp;<strong>lvs-dr</strong>：操纵封装新的MAC地址<br>&emsp;&emsp;<strong>lvs-tun</strong>：在原请求IP报文之外新加一个IP首部<br>&emsp;&emsp;<strong>lvs-fullnat</strong>：修改请求报文的源和目标IP</p><h5 id="lvs-nat："><a href="#lvs-nat：" class="headerlink" title="lvs-nat："></a>lvs-nat：</h5><p>&emsp;&emsp;本质是多目标IP的DNAT，通过将请求报文中的目标地址和目标端口修改为某挑出的RS的RIP和PORT实现转发<br>    （1）RIP和DIP应在同一个IP网络，且应使用私网地址；RS的网关要指向DIP<br>    （2）请求报文和响应报文都必须经由Director转发，Director易于成为系统瓶颈<br>    （3）支持端口映射，可修改请求报文的目标PORT<br>    （4）VS必须是Linux系统，RS可以是任意OS系统</p><h5 id="LVS-DR："><a href="#LVS-DR：" class="headerlink" title="LVS-DR："></a>LVS-DR：</h5><p>&emsp;&emsp;Direct Routing，直接路由，LVS默认模式,应用最广泛,通过为请求报文重新封装一个MAC首部进行转发，源MAC是DIP所在的接口的MAC，目标MAC是某挑选出的RS的RIP所在接口的MAC地址；源IP/PORT，以及目标IP/PORT均保持不变<br>    （1） Director和各RS都配置有VIP<br>    （2） 确保前端路由器将目标IP为VIP的请求报文发往Director<br>        &emsp;&emsp;在前端网关做静态绑定VIP和Director的MAC地址<br>         &emsp;&emsp;在RS上使用arptables工具<br>            <code>arptables -A IN -d $VIP -j DROP</code><br>            <code>arptables -A OUT -s $VIP -j mangle --mangle-ip-s $RIP</code><br>         &emsp;&emsp;在RS上修改内核参数以限制arp通告及应答级别<br>            <code>/proc/sys/net/ipv4/conf/all/arp_ignore</code><br>            <code>/proc/sys/net/ipv4/conf/all/arp_announce</code><br>    （3）RS的RIP可以使用私网地址，也可以是公网地址；RIP与DIP在同一IP网络；RIP的网关不能指向DIP，以确保响应报文不会经由Director<br>    （4）RS和Director要在同一个物理网络<br>    （5）请求报文要经由Director，但响应报文不经由Director，而由RS直接发往Client<br>    （6）不支持端口映射（端口不能修败）<br>    （7）RS可使用大多数OS系统</p><h5 id="lvs-tun："><a href="#lvs-tun：" class="headerlink" title="lvs-tun："></a>lvs-tun：</h5><p>&emsp;&emsp;转发方式：不修改请求报文的IP首部（源IP为CIP，目标IP为VIP），而在原IP报文之外再封装一个IP首部（源IP是DIP，目标IP是RIP），将报文发往挑选出的目标RS；RS直接响应给客户端（源IP是VIP，目标IP是CIP）<br>&emsp;&emsp;    (1) DIP, VIP, RIP都应该是公网地址<br>&emsp;&emsp;    (2) RS的网关一般不能指向DIP<br>&emsp;&emsp;    (3) 请求报文要经由Director，但响应不经由Director<br>&emsp;&emsp;    (4) 不支持端口映射<br>&emsp;&emsp;    (5) RS的OS须支持隧道功能</p><h5 id="lvs-fullnat：通过同时修改请求报文的源IP地址和目标IP地址进行转发"><a href="#lvs-fullnat：通过同时修改请求报文的源IP地址和目标IP地址进行转发" class="headerlink" title="lvs-fullnat：通过同时修改请求报文的源IP地址和目标IP地址进行转发"></a>lvs-fullnat：通过同时修改请求报文的源IP地址和目标IP地址进行转发</h5><p>&emsp;&emsp;CIP –&gt; DIP<br>&emsp;&emsp;VIP –&gt; RIP<br>    (1) VIP是公网地址，RIP和DIP是私网地址，且通常不在同一IP网络；因此，RIP的网关一般不会指向DIP<br>    (2) RS收到的请求报文源地址是DIP，因此，只需响应给DIP；但Director还要将其发往Client<br>    (3) 请求和响应报文都经由Director<br>    (4) 支持端口映射<br><strong>注意：此类型kernel默认不支持</strong></p><h4 id="LVS调度算法"><a href="#LVS调度算法" class="headerlink" title="LVS调度算法"></a>LVS调度算法</h4><p>ipvs scheduler：<br>&emsp;&emsp;根据其调度时是否考虑各RS当前的负载状态分为两种：静态方法和动态方法</p><ul><li><p>静态方法：仅根据算法本身进行调度</p><pre><code>1、RR：roundrobin，轮询2、WRR：Weighted RR，加权轮询3、SH：Source Hashing，实现session sticky，源IP地址hash；将来自于同一个IP地址的请求始终发往第一次挑中的RS，从而实现会话绑定4、DH：Destination Hashing；目标地址哈希，第一次轮询调度至RS，后续将发往同一个目标地址的请求始终转发至第一次挑中的RS，典型使用场景是正向代理缓存场景中的负载均衡，如：宽带运营商</code></pre></li><li><p>动态方法：主要根据每RS当前的负载状态及调度算法进行调度Overhead=value较小的RS将被调度</p><pre><code>1、LC：least connections 适用于长连接应用Overhead=activeconns*256+inactiveconns2、WLC：Weighted LC，默认调度方法Overhead=(activeconns*256+inactiveconns)/weight3、SED：Shortest Expection Delay,初始连接高权重优先Overhead=(activeconns+1)*256/weight4、NQ：Never Queue，第一轮均匀分配，后续SED5、LBLC：Locality-Based LC，动态的DH算法，使用场景：根据负载状态实现正向代理6、LBLCR：LBLC with Replication，带复制功能的LBLC，解决LBLC负载不均衡问题，从负载重的复制到负载轻的RS</code></pre></li></ul><h4 id="ipvsadm-ipvs："><a href="#ipvsadm-ipvs：" class="headerlink" title="ipvsadm/ipvs："></a>ipvsadm/ipvs：</h4><h5 id="ipvs："><a href="#ipvs：" class="headerlink" title="ipvs："></a>ipvs：</h5><p>&emsp;&emsp;<code>grep -i -A 10 &quot;ipvs&quot; /boot/config-VERSION-RELEASE.x86_64</code><br>&emsp;&emsp;支持的协议：TCP， UDP， AH， ESP， AH_ESP, SCTP<br>ipvs集群：<br>&emsp;&emsp;管理集群服务<br>&emsp;&emsp;管理服务上的RS</p><h5 id="ipvsadm："><a href="#ipvsadm：" class="headerlink" title="ipvsadm："></a>ipvsadm：</h5><p>&emsp;&emsp;程序包：ipvsadm<br>&emsp;&emsp;Unit File: ipvsadm.service<br>&emsp;&emsp;主程序：/usr/sbin/ipvsadm<br>&emsp;&emsp;规则保存工具：/usr/sbin/ipvsadm-save<br>&emsp;&emsp;规则重载工具：/usr/sbin/ipvsadm-restore<br>&emsp;&emsp;配置文件：/etc/sysconfig/ipvsadm-config<br><strong>ipvsadm命令</strong>：<br>核心功能：</p><ul><li>集群服务管理：增、删、改</li><li>集群服务的RS管理：增、删、改</li><li>查看</li></ul><p>&emsp;&emsp;例：命令总结：<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ipvsadm -A|<span class="type">E</span> -t|<span class="type">u</span>|<span class="type">f</span> service-address [-s scheduler] [-p [<span class="built_in">timeout</span>]] [-M netmask] [--pepersistence_engine] [-b sched-flags]</span><br><span class="line">ipvsadm -D -t|<span class="type">u</span>|<span class="type">f</span> service-address 删除</span><br><span class="line">ipvsadm –C 清空</span><br><span class="line">ipvsadm –R 重载</span><br><span class="line">ipvsadm -S [-n] 保存</span><br><span class="line">ipvsadm -a|<span class="type">e</span> -t|<span class="type">u</span>|<span class="type">f</span> service-address -r server-address [options]</span><br><span class="line">ipvsadm -d -t|<span class="type">u</span>|<span class="type">f</span> service-address -r server-address</span><br><span class="line">ipvsadm -L|<span class="type">l</span> [options]</span><br><span class="line">ipvsadm -Z [-t|<span class="type">u</span>|<span class="type">f</span> service-address]</span><br></pre></td></tr></table></figure></p><h6 id="管理集群服务：增、改、删"><a href="#管理集群服务：增、改、删" class="headerlink" title="管理集群服务：增、改、删"></a>管理集群服务：增、改、删</h6><p>&emsp;&emsp;增、改：<br><code>ipvsadm -A|E -t|u|f service-address [-s scheduler] [-p [timeout]]</code><br>&emsp;&emsp;删除：<br><code>ipvsadm -D -t|u|f service-address</code><br>service-address： VIP<br>&emsp;&emsp;    -t|u|f：<br>&emsp;&emsp;    -t: TCP协议的端口，VIP:TCP_PORT<br>&emsp;&emsp;    -u: UDP协议的端口，VIP:UDP_PORT<br>&emsp;&emsp;    -f：firewall MARK，标记，一个数字<br>&emsp;&emsp;[-s scheduler]：指定集群的调度算法，默认为wlc</p><h6 id="管理集群上的RS：增、改、删"><a href="#管理集群上的RS：增、改、删" class="headerlink" title="管理集群上的RS：增、改、删"></a>管理集群上的RS：增、改、删</h6><p>&emsp;&emsp;增、改：<br><code>ipvsadm -a|e -t|u|f service-address -r server-address [-g|i|m] [-w    weight]</code><br>&emsp;&emsp;删：<br><code>ipvsadm -d -t|u|f service-address -r server-addressserver-address</code><br>&emsp;&emsp;rip[:port] 如省略port，不作端口映射<br>选项：<br>&emsp;&emsp;lvs类型：<br>&emsp;&emsp;-g: gateway, dr类型，默认<br>&emsp;&emsp;-i: ipip, tun类型<br>&emsp;&emsp;-m: masquerade, nat类型<br>&emsp;&emsp;-w weight：权重</p><p>&emsp;&emsp;清空定义的所有内容：<br><code>ipvsadm –C</code><br>清空计数器：<br><code>ipvsadm -Z [-t|u|f service-address]</code></p><h6 id="查看："><a href="#查看：" class="headerlink" title="查看："></a>查看：</h6><p><code>ipvsadm -L|l [options]</code><br>&emsp;&emsp;–numeric, -n：以数字形式输出地址和端口号<br>&emsp;&emsp;–exact：扩展信息，精确值<br>&emsp;&emsp;–connection，-c：当前IPVS连接输出<br>&emsp;&emsp;–stats：统计信息<br>&emsp;&emsp;–rate ：输出速率信息</p><p>ipvs规则：/proc/net/ip_vs<br>ipvs连接：/proc/net/ip_vs_conn</p><h4 id="保存及重载规则"><a href="#保存及重载规则" class="headerlink" title="保存及重载规则"></a>保存及重载规则</h4><p>&emsp;&emsp;保存：建议保存至/etc/sysconfig/ipvsadm<br><code>ipvsadm-save &gt; /PATH/TO/IPVSADM_FILE</code><br><code>ipvsadm -S &gt; /PATH/TO/IPVSADM_FILE</code><br><code>systemctl stop ipvsadm.service</code><br>&emsp;&emsp;重载：<br><code>ipvsadm-restore &lt; /PATH/FROM/IPVSADM_FILE</code><br><code>systemctl restart ipvsadm.service</code></p><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>负载均衡集群设计时要注意的问题<br>&emsp;&emsp;(1) 是否需要会话保持<br>&emsp;&emsp;(2) 是否需要共享存储<br>    共享存储：NAS， SAN， DS（分布式存储）<br>    数据同步：</p><h4 id="lvs-nat：-1"><a href="#lvs-nat：-1" class="headerlink" title="lvs-nat："></a>lvs-nat：</h4><p>设计要点：<br>&emsp;&emsp;(1) RIP与DIP在同一IP网络, RIP的网关要指向DIP<br>&emsp;&emsp;(2) 支持端口映射<br>&emsp;&emsp;(3) Director要打开核心转发功能</p><h4 id="LVS-DR"><a href="#LVS-DR" class="headerlink" title="LVS-DR"></a>LVS-DR</h4><p>DR模型中各主机上均需要配置VIP，解决地址冲突的方式有三种：</p><ul><li>(1) 在前端网关做静态绑定</li><li>(2) 在各RS使用arptables</li><li>(3) 在各RS修改内核参数，来限制arp响应和通告的级别<br>限制响应级别：arp_ignore<br>  0：默认值，表示可使用本地任意接口上配置的任意地址进行响应<br>  1: 仅在请求的目标IP配置在本地主机的接收到请求报文的接口上时，才给予响应<br>限制通告级别：arp_announce<br>  0：默认值，把本机所有接口的所有信息向每个接口的网络进行通告<br>  1：尽量避免将接口信息向非直接连接网络进行通告<br>  2：必须避免将接口信息向非本网络进行通告</li></ul><h5 id="附："><a href="#附：" class="headerlink" title="附："></a>附：</h5><p>&emsp;&emsp;RS的配置脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">vip=10.0.0.100</span><br><span class="line">mask=<span class="string">'255.255.255.255'</span></span><br><span class="line">dev=lo:1</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> 2 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"><span class="built_in">echo</span> 2 &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">ifconfig <span class="variable">$dev</span> <span class="variable">$vip</span> netmask <span class="variable">$mask</span> <span class="comment">#broadcast $vip up</span></span><br><span class="line"><span class="comment">#route add -host $vip dev $dev</span></span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">ifconfig <span class="variable">$dev</span> down</span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/lo/arp_ignore</span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/all/arp_announce</span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /proc/sys/net/ipv4/conf/lo/arp_announce</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Usage: <span class="variable">$(basename $0)</span> start|stop"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;VS的配置脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">vip=<span class="string">'10.0.0.100'</span></span><br><span class="line">iface=<span class="string">'lo:1'</span></span><br><span class="line">mask=<span class="string">'255.255.255.255'</span></span><br><span class="line">port=<span class="string">'80'</span></span><br><span class="line">rs1=<span class="string">'192.168.0.101'</span></span><br><span class="line">rs2=<span class="string">'192.168.0.102'</span></span><br><span class="line">scheduler=<span class="string">'wrr'</span></span><br><span class="line"><span class="built_in">type</span>=<span class="string">'-g'</span></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">ifconfig <span class="variable">$iface</span> <span class="variable">$vip</span> netmask <span class="variable">$mask</span> <span class="comment">#broadcast $vip up</span></span><br><span class="line">iptables -F</span><br><span class="line">ipvsadm -A -t <span class="variable">$&#123;vip&#125;</span>:<span class="variable">$&#123;port&#125;</span> -s <span class="variable">$scheduler</span></span><br><span class="line">ipvsadm -a -t <span class="variable">$&#123;vip&#125;</span>:<span class="variable">$&#123;port&#125;</span> -r <span class="variable">$&#123;rs1&#125;</span> <span class="variable">$type</span> -w 1</span><br><span class="line">ipvsadm -a -t <span class="variable">$&#123;vip&#125;</span>:<span class="variable">$&#123;port&#125;</span> -r <span class="variable">$&#123;rs2&#125;</span> <span class="variable">$type</span> -w 1</span><br><span class="line">;;</span><br><span class="line">stop)</span><br><span class="line">ipvsadm -C</span><br><span class="line">ifconfig <span class="variable">$iface</span> down</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Usage <span class="variable">$(basename $0)</span> start|stop“</span></span><br><span class="line"><span class="string">exit 1</span></span><br><span class="line"><span class="string">esac</span></span><br></pre></td></tr></table></figure></p><h3 id="FireWall-Mark"><a href="#FireWall-Mark" class="headerlink" title="FireWall Mark"></a>FireWall Mark</h3><p>&emsp;&emsp;FWM：FireWall Mark<br>&emsp;&emsp;MARK target 可用于给特定的报文打标记<br>&emsp;&emsp;–set-mark value<br>其中：value 可为0xffff格式，表示十六进制数字<br>&emsp;&emsp;借助于防火墙标记来分类报文，而后基于标记定义集群服务；可将多个不同的应用使用同一个集群服务进行调度<br>&emsp;&emsp;实现方法：<br>&emsp;&emsp;在Director主机打标记：<br><code>iptables -t mangle -A PREROUTING -d $vip -p $proto –m multiport --dports $port1,$port2,… -j MARK --set-mark NUMBER</code><br>&emsp;&emsp;在Director主机基于标记定义集群服务：<br><code>ipvsadm -A -f NUMBER [options]</code></p><h4 id="持久连接"><a href="#持久连接" class="headerlink" title="持久连接"></a>持久连接</h4><p>&emsp;&emsp;session 绑定：对共享同一组RS的多个集群服务，需要统一进行绑定，lvs sh算法无法实现<br>&emsp;&emsp;持久连接（ lvs persistence ）模板：实现无论使用任何调度算法，在一段时间内（默认360s ），能够实现将来自同一个地址的请求始终发往同一个RS<br><code>ipvsadm -A|E -t|u|f service-address [-s scheduler] [-p [timeout]]</code><br>&emsp;&emsp;持久连接实现方式：<br>&emsp;&emsp;每端口持久（PPC）：每个端口定义为一个集群服务，每集群服务单独调度<br>&emsp;&emsp;每防火墙标记持久（PFWMC）：基于防火墙标记定义集群服务；可实现将多个端口上的应用统一调度，即所谓的port Affinity<br>&emsp;&emsp;每客户端持久（PCC）：基于0端口（表示所有服务）定义集群服务，即将客户端对所有应用的请求都调度至后端主机，必须定义为持久模式</p><h3 id="LVS高可用性"><a href="#LVS高可用性" class="headerlink" title="LVS高可用性"></a>LVS高可用性</h3><ul><li>Director不可用，整个系统将不可用；SPoF Single Point of Failure<br>&emsp;&emsp;解决方案：高可用<br>&emsp;&emsp;keepalived heartbeat/corosync</li><li>某RS不可用时，Director依然会调度请求至此RS<br>&emsp;&emsp;解决方案： 由Director对各RS健康状态进行检查，失败时禁用，成功时启用keepalived heartbeat/corosync ldirectord<br>&emsp;&emsp;检测方式：<br>&emsp;&emsp;(a) 网络层检测，icmp<br>&emsp;&emsp;(b) 传输层检测，端口探测<br>&emsp;&emsp;(c) 应用层检测，请求某关键资源<br>&emsp;&emsp;RS全不用时：backup server, sorry server</li></ul><h4 id="ldirectord"><a href="#ldirectord" class="headerlink" title="ldirectord"></a>ldirectord</h4><p>&emsp;&emsp;ldirectord：监控和控制LVS守护进程，可管理LVS规则<br>&emsp;&emsp;包名：ldirectord-3.9.6-0rc1.1.1.x86_64.rpm<br>&emsp;&emsp;下载：<a href="http://download.opensuse.org/repositories/network:/haclustering:/Stable/CentOS_CentOS-7/x86_64/" rel="noopener" target="_blank">http://download.opensuse.org/repositories/network:/haclustering:/Stable/CentOS_CentOS-7/x86_64/</a><br>&emsp;&emsp;文件：<br>&emsp;&emsp;/etc/ha.d/ldirectord.cf 主配置文件<br>&emsp;&emsp;/usr/share/doc/ldirectord-3.9.6/ldirectord.cf 配置模版<br>&emsp;&emsp;/usr/lib/systemd/system/ldirectord.service 服务<br>&emsp;&emsp;/usr/sbin/ldirectord 主程序,Perl实现<br>&emsp;&emsp;/var/log/ldirectord.log 日志<br>&emsp;&emsp;/var/run/ldirectord.ldirectord.pid pid文件</p><p>&emsp;&emsp;Ldirectord配置文件示例<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">checktimeout</span>=3</span><br><span class="line"><span class="attribute">checkinterval</span>=1</span><br><span class="line"><span class="attribute">autoreload</span>=<span class="literal">yes</span></span><br><span class="line"><span class="attribute">logfile</span>=“/var/log/ldirectord.log“ #日志文件</span><br><span class="line"><span class="attribute">quiescent</span>=<span class="literal">no</span>   #down时<span class="literal">yes</span>权重为0，<span class="literal">no</span>为删除</span><br><span class="line"><span class="attribute">virtual</span>=5      #指定VS的FWM 或 IP:PORT</span><br><span class="line"><span class="attribute">real</span>=172.16.0.7:80 gate 2    #DR模型，权重为 2</span><br><span class="line"><span class="attribute">real</span>=172.16.0.8:80 gate 1</span><br><span class="line"><span class="attribute">fallback</span>=127.0.0.1:80 gate   #sorry server</span><br><span class="line"><span class="attribute">service</span>=http</span><br><span class="line"><span class="attribute">scheduler</span>=wrr</span><br><span class="line"><span class="attribute">checktype</span>=negotiate</span><br><span class="line"><span class="attribute">checkport</span>=80</span><br><span class="line"><span class="attribute">request</span>=<span class="string">"index.html"</span></span><br><span class="line"><span class="attribute">receive</span>=“Test Ldirectord<span class="string">"</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;所谓LVS，是Linux Virtual Server的缩写，直译就是linux虚拟服务器。LVS说是虚拟服务器，并不是说这个服务器本身不存在，而是指一般用户访问企业web网站时，访问的都是LVS，而LVS本身上面没有任何web界面资源，真实的界面以及服务都在后端web服务器上，LVS服务器起到的是一个指引分流的作用，所以相对来说，后端的web服务器是real server,而LVS就被称为是virtual server（虚拟服务器）了。&lt;br&gt;&amp;emsp;&amp;emsp;既然这个服务器上没有页面资源，又无法提供服务，那为什么还有必要部署它来多此一举呢？因为通常来说，我们访问的web服务，都不是由单一服务器主机来支撑的，背后都有好几台、甚至成百上千台web服务器集群共同提供，一台单一主机是无法支撑大的访问并发的，需要很多台服务器来共同分担压力，这时就需要一个专门的服务器来进行调度，将大量访问请求分配到不同的web服务器上，减小每台服务器的压力，实现负载均衡。&lt;br&gt;&amp;emsp;&amp;emsp;本文将详细介绍LVS调度器的工作模式及配置实例。&lt;br&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="https://hewanyue.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="企业级应用" scheme="https://hewanyue.com/tags/%E4%BC%81%E4%B8%9A%E7%BA%A7%E5%BA%94%E7%94%A8/"/>
    
      <category term="负载均衡" scheme="https://hewanyue.com/tags/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    
      <category term="调度算法" scheme="https://hewanyue.com/tags/%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="集群" scheme="https://hewanyue.com/tags/%E9%9B%86%E7%BE%A4/"/>
    
      <category term="LVS" scheme="https://hewanyue.com/tags/LVS/"/>
    
  </entry>
  
  <entry>
    <title>源码编译Apache和PHP实现lamp架构</title>
    <link href="https://hewanyue.com//blog/dcaccc5a.html"/>
    <id>https://hewanyue.com//blog/dcaccc5a.html</id>
    <published>2019-10-18T13:12:31.000Z</published>
    <updated>2019-12-04T06:13:26.626Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;企业中web业务最常见的架构就是lamp架构、lnmp架构或者lnmt架构。本文将详细讲解lamp架构的源码编译方式的部署实现。<br><a id="more"></a><br>&emsp;&emsp;所谓LAMP架构，是指：<br>&emsp;&emsp;&emsp;&emsp;<strong>L</strong>：linux<br>&emsp;&emsp;&emsp;&emsp;<strong>A</strong>：apache (httpd)<br>&emsp;&emsp;&emsp;&emsp;<strong>M</strong>：mysql, mariadb<br>&emsp;&emsp;&emsp;&emsp;（或M：memcached）<br>&emsp;&emsp;&emsp;&emsp;<strong>P</strong>：php, perl, python<br>&emsp;&emsp;WEB资源类型：<br>&emsp;&emsp;&emsp;&emsp;静态资源：原始形式与响应内容一致，在客户端浏览器执行<br>&emsp;&emsp;&emsp;&emsp;动态资源：原始形式通常为程序文件，需要在服务器端执行之后，将执行结果返回给客户端</p><h3 id="LAMP工作原理"><a href="#LAMP工作原理" class="headerlink" title="LAMP工作原理"></a>LAMP工作原理</h3><p><img src="https://img-blog.csdnimg.cn/20191018193028582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;httpd：接收用户的web请求；静态资源则直接响应；动态资源为php脚本，对此类资源的请求将交由php来运行<br>&emsp;&emsp;php：运行php程序<br>&emsp;&emsp;MariaDB：数据管理系统</p><h3 id="httpd与php结合的方式"><a href="#httpd与php结合的方式" class="headerlink" title="httpd与php结合的方式"></a>httpd与php结合的方式</h3><p>1、modules (将php编译成为httpd的模块,默认方式)<br> MPM:<br>prefork: libphp5.so<br>event, worker: libphp5-zts.so<br>2、FastCGI</p><p>&emsp;&emsp;本文将分别展示以模块方式以及FCGI的方式，源码编译apache、php、mariadb来实现LAMP架构。</p><h3 id="编译部署"><a href="#编译部署" class="headerlink" title="编译部署"></a>编译部署</h3><h4 id="编译安装mariadb"><a href="#编译安装mariadb" class="headerlink" title="编译安装mariadb"></a>编译安装mariadb</h4><p>&emsp;&emsp;之前曾<a href="https://hewanyue.com/blog/b124800c.html">详细介绍</a>，这里就不再赘述。</p><h4 id="编译安装apache"><a href="#编译安装apache" class="headerlink" title="编译安装apache"></a>编译安装apache</h4><p>&emsp;&emsp;先安装依赖包<code>yum install gcc pcre-devel openssl-devel expat-devel autoconf libtool gcc-c++</code><br>&emsp;&emsp;下载apache源码包以及apr包<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="string">https:</span><span class="comment">//archive.apache.org/dist/httpd/httpd-2.4.39.tar.gz</span></span><br><span class="line">wget <span class="string">https:</span><span class="comment">//www-us.apache.org/dist//apr/apr-1.7.0.tar.gz</span></span><br><span class="line">wget <span class="string">https:</span><span class="comment">//www-us.apache.org/dist//apr/apr-util-1.6.1.tar.gz</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;替换apr、apr-util文件<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xf apr<span class="number">-1.7</span><span class="number">.0</span>.tar.gz -C httpd<span class="number">-2.4</span><span class="number">.39</span>/srclib/ </span><br><span class="line">tar xf apr-util<span class="number">-1.6</span><span class="number">.1</span>.tar.gz -C httpd<span class="number">-2.4</span><span class="number">.39</span>/srclib/ </span><br><span class="line">cd httpd<span class="number">-2.4</span><span class="number">.39</span>/srclib/</span><br><span class="line">mv apr<span class="number">-1.7</span><span class="number">.0</span> apr</span><br><span class="line">mv apr-util<span class="number">-1.6</span><span class="number">.1</span> apr-util</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;编译安装<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/data/httpd24 <span class="string">\</span></span><br><span class="line">--enable-so <span class="string">\</span></span><br><span class="line">--enable-ssl <span class="string">\</span></span><br><span class="line">--enable-cgi <span class="string">\</span></span><br><span class="line">--enable-rewrite <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-zlib <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-pcre <span class="string">\</span></span><br><span class="line">--enable-modules=most <span class="string">\</span></span><br><span class="line">--enable-mpms-shared=all <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-mpm=prefork <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-included-apr</span><br></pre></td></tr></table></figure></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> -j <span class="number">4</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;写入PATH变量,并生效<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> /etc/<span class="keyword">profile</span>.d/httpd.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> PATH=/data/httpd24/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> /etc/<span class="keyword">profile</span>.d/httpd.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><h4 id="编译安装php"><a href="#编译安装php" class="headerlink" title="编译安装php"></a>编译安装php</h4><h5 id="模块方式"><a href="#模块方式" class="headerlink" title="模块方式"></a>模块方式</h5><p>&emsp;&emsp;先安装依赖包<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> -y libxml2-devel</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;在官网下载php最新版php-7.3.10.tar.xz包并解压<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//www.php.net/distributions/php-7.3.10.tar.xz</span></span><br><span class="line">tar xvf php-<span class="number">7.3</span>.<span class="number">10</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line">cd php-<span class="number">7.3</span>.<span class="number">10</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br></pre></td></tr></table></figure></p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.<span class="regexp">/configure --prefix=/data/php/</span> <span class="string">\</span></span><br><span class="line">--enable-mysqlnd <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-mysqli=mysqlnd <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-openssl <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-pdo-mysql=mysqlnd <span class="string">\</span></span><br><span class="line">--enable-mbstring <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-freetype-dir <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-jpeg-dir <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-png-dir <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-zlib <span class="string">\</span></span><br><span class="line">--enable-xml <span class="string">\</span></span><br><span class="line">--enable-sockets <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-apxs2=/data/httpd24/bin/apxs <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-config-file-path=/data/php/etc <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-config-file-scan-dir=/data/php/etc/php.d <span class="string">\</span></span><br><span class="line">--enable-maintainer-zts <span class="string">\</span></span><br><span class="line">--disable-fileinfo</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;PS:如果apache是之前yum装的，很有可能没有apxs文件，只需要<code>dnf install httpd-devel -y</code>命令安装httpd-devel包，即可生成/usr/bin/apxs工具，如果是以前编译安装的，也要改为正确apxs2对应路径。<br>&emsp;&emsp;编译安装<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> -j <span class="number">4</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;复制配置文件模版至配置文件目录<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp php.ini-production <span class="regexp">/data/</span>php<span class="regexp">/etc/</span>php.ini</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;修改apache配置文件,设置默认php页面，增加PHP模块<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> /etc/httpd/<span class="keyword">conf</span>/httpd.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&amp;ltIfModule</span> <span class="string">dir_module&amp;gt</span></span><br><span class="line">    <span class="string">DirectoryIndex</span> <span class="string">index.php</span> <span class="string">index.html</span>                <span class="comment">#增加php页面</span></span><br><span class="line"><span class="string">&amp;lt/IfModule&amp;gt</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span><span class="meta">---</span></span><br><span class="line"><span class="meta">&amp;ltIfModule</span> <span class="string">mime_module&amp;gt</span></span><br><span class="line"></span><br><span class="line">    <span class="string">AddType</span> <span class="string">application/x-compress</span> <span class="string">.Z</span></span><br><span class="line">    <span class="string">AddType</span> <span class="string">application/x-gzip</span> <span class="string">.gz</span> <span class="string">.tgz</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">AddType</span> <span class="string">application/x-httpd-php</span> <span class="string">.php</span>                <span class="comment">#增加模块</span></span><br><span class="line">    <span class="string">AddType</span> <span class="string">application/x-httpd-php-source</span> <span class="string">.phps</span>        <span class="comment">#增加模块</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&amp;lt/IfModule&amp;gt</span></span><br></pre></td></tr></table></figure><p>&emsp;&emsp;添加php测试页<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/data/</span>httpd24<span class="regexp">/htdocs/i</span>ndex.php</span><br></pre></td></tr></table></figure></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;lt?php</span><br><span class="line">phpinfo() </span><br><span class="line">?&amp;gt</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;重启apache服务<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apachectl restart</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;访问php测试页进行测试,便可看到php设置已经成功<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">curl HOSTIP</span></span><br></pre></td></tr></table></figure></p><h5 id="FCGI方式"><a href="#FCGI方式" class="headerlink" title="FCGI方式"></a>FCGI方式</h5><p>&emsp;&emsp;也要先安装依赖包<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install </span>libxml2-devel <span class="keyword">bzip2-devel </span>libmcrypt-devel</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;同样下载tar包，解压并进入编译目录<br>&emsp;&emsp;开始编译安装<br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/data/php <span class="string">\</span></span><br><span class="line">--enable-mysqlnd <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-mysqli=mysqlnd <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-pdo-mysql=mysqlnd <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-openssl <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-freetype-dir <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-jpeg-dir <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-png-dir <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-zlib <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-libxml-dir=/usr <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-config-file-path=/etc <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-config-file-scan-dir=/etc/php.d <span class="string">\</span></span><br><span class="line">--enable-mbstring <span class="string">\</span></span><br><span class="line">--enable-xml <span class="string">\</span></span><br><span class="line">--enable-sockets <span class="string">\</span></span><br><span class="line">--enable-fpm <span class="string">\</span></span><br><span class="line">--enable-maintainer-zts <span class="string">\</span></span><br><span class="line">--disable-fileinfo</span><br></pre></td></tr></table></figure></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> -j <span class="number">4</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;复制模版文件当配置文件<br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /data/php<span class="number">-7.3</span><span class="number">.10</span>/php.ini-production  /etc/php.ini</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;因为php-fpm模式相当于单独的一个服务，将服务配置文件放至/usr/lib/systemd/system/目录<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /data/php-<span class="number">7.3</span>.<span class="number">10</span>/sapi/fpm/php-fpm.service /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;生成fpm配置文件，并修改进程属主属组为apache<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /data/php/etc</span><br><span class="line">cp php-fpm<span class="selector-class">.conf</span><span class="selector-class">.default</span>  php-fpm.conf</span><br><span class="line">cd php-fpm.d/</span><br><span class="line">cp www<span class="selector-class">.conf</span><span class="selector-class">.default</span> www.conf</span><br></pre></td></tr></table></figure></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim www.conf</span><br><span class="line"></span><br><span class="line">user apache</span><br><span class="line">group apache</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;加载配置文件并启动进程<br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl <span class="keyword">enable</span> <span class="comment">--now  php-fpm.service</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;修改配置httpd.conf 支持php-fpm<br>&emsp;&emsp;取消下面两行的注释<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute"><span class="nomarkup">LoadModule</span></span> proxy_module modules/mod_proxy.so</span><br><span class="line"><span class="attribute"><span class="nomarkup">LoadModule</span></span> proxy_fcgi_module modules/mod_proxy_fcgi.so</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;修改下面行<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&amp;ltIfModule dir_module&amp;gt</span><br><span class="line">DirectoryIndex index.php index.html</span><br><span class="line">&amp;lt/IfModule&amp;gt</span><br><span class="line">加下面四行</span><br><span class="line">AddType application/x-httpd-php .php</span><br><span class="line">AddType application/x-httpd-php-source .phps</span><br><span class="line">ProxyRequests Off</span><br><span class="line">ProxyPassMatch ^/(.*\.php)$ fcgi://127.0.0.1:9000/data/httpd24/htdocs/$1</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;也可修改php监听端口9000 为socket路径，下面代理转发命令为为<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ProxyRequests Off</span><br><span class="line">ProxyPassMatch ^<span class="regexp">/(.*\.php)$ unix:/</span>var<span class="regexp">/run/</span>php-fpm<span class="regexp">/php-fpm.sock|fcgi:/</span><span class="regexp">/localhost/</span>data<span class="regexp">/httpd24/</span>htdocs<span class="regexp">/$1</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;重启apache服务<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apachectl restart</span></span><br></pre></td></tr></table></figure></p><p>至此，php页面就可以正常访问了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;企业中web业务最常见的架构就是lamp架构、lnmp架构或者lnmt架构。本文将详细讲解lamp架构的源码编译方式的部署实现。&lt;br&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="https://hewanyue.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="编译安装" scheme="https://hewanyue.com/tags/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/"/>
    
      <category term="LAMP" scheme="https://hewanyue.com/tags/LAMP/"/>
    
      <category term="总结" scheme="https://hewanyue.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>LAMP架构实现PowerDNS</title>
    <link href="https://hewanyue.com//blog/57d66c4.html"/>
    <id>https://hewanyue.com//blog/57d66c4.html</id>
    <published>2019-10-14T06:05:20.000Z</published>
    <updated>2019-12-04T05:53:24.329Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;PowerDNS 是一个跨平台的开源DNS服务组件，它是高性能的域名服务器，除了支持普通的BIND配置文件，PowerDNS还可以从MySQL,Oracle,PostgreSQL等的数据库读取数据。PowerDNS安装了Poweradmin(基于php实现)，能实现Web管理DNS记录，非常方便。<br><a id="more"></a><br>&emsp;&emsp;ps:本次过程是在centos7系统上完成。</p><h3 id="配置安装pdns"><a href="#配置安装pdns" class="headerlink" title="配置安装pdns"></a>配置安装pdns</h3><h4 id="安装pdns包"><a href="#安装pdns包" class="headerlink" title="安装pdns包"></a>安装pdns包</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y pdns pdns-backend-mysql</span><br></pre></td></tr></table></figure><h4 id="创建pdns数据库"><a href="#创建pdns数据库" class="headerlink" title="创建pdns数据库"></a>创建pdns数据库</h4><p>&emsp;&emsp;搭建好mariadb数据库了，启动数据库服务，参考官方文档创建powerdns数据库及其中的表，参看下面文档 <a href="https://doc.powerdns.com/md/authoritative/backend-generic-mysql/" rel="noopener" target="_blank">https://doc.powerdns.com/md/authoritative/backend-generic-mysql/</a><br><code>vim powerdns.sql</code><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> powerdns;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> powerdns.* <span class="keyword">TO</span> <span class="string">'powerdns'</span>@<span class="string">'127.0.0.1'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'powerdns'</span>;</span><br><span class="line"><span class="keyword">use</span> powerdns;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> domains (</span><br><span class="line">  <span class="keyword">id</span>                    <span class="built_in">INT</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="keyword">name</span>                  <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">master</span>                <span class="built_in">VARCHAR</span>(<span class="number">128</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  last_check            <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">type</span>                  <span class="built_in">VARCHAR</span>(<span class="number">6</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  notified_serial       <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">account</span>               <span class="built_in">VARCHAR</span>(<span class="number">40</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">Engine</span>=<span class="keyword">InnoDB</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> name_index <span class="keyword">ON</span> domains(<span class="keyword">name</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">records</span> (</span><br><span class="line">  <span class="keyword">id</span>                    <span class="built_in">BIGINT</span> AUTO_INCREMENT,</span><br><span class="line">  domain_id             <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">name</span>                  <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">type</span>                  <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">content</span>               <span class="built_in">VARCHAR</span>(<span class="number">64000</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  ttl                   <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  prio                  <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  change_date           <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  disabled              <span class="built_in">TINYINT</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">  ordername             <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="built_in">BINARY</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  auth                  <span class="built_in">TINYINT</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="number">1</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">Engine</span>=<span class="keyword">InnoDB</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> nametype_index <span class="keyword">ON</span> <span class="keyword">records</span>(<span class="keyword">name</span>,<span class="keyword">type</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> domain_id <span class="keyword">ON</span> <span class="keyword">records</span>(domain_id);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> recordorder <span class="keyword">ON</span> <span class="keyword">records</span> (domain_id, ordername);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> supermasters (</span><br><span class="line">  ip                    <span class="built_in">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  nameserver            <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">account</span>               <span class="built_in">VARCHAR</span>(<span class="number">40</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (ip, nameserver)</span><br><span class="line">) <span class="keyword">Engine</span>=<span class="keyword">InnoDB</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> comments (</span><br><span class="line">  <span class="keyword">id</span>                    <span class="built_in">INT</span> AUTO_INCREMENT,</span><br><span class="line">  domain_id             <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">name</span>                  <span class="built_in">VARCHAR</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">type</span>                  <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  modified_at           <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">account</span>               <span class="built_in">VARCHAR</span>(<span class="number">40</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">comment</span>               <span class="built_in">VARCHAR</span>(<span class="number">64000</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">Engine</span>=<span class="keyword">InnoDB</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> comments_domain_id_idx <span class="keyword">ON</span> comments (domain_id);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> comments_name_type_idx <span class="keyword">ON</span> comments (<span class="keyword">name</span>, <span class="keyword">type</span>);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> comments_order_idx <span class="keyword">ON</span> comments (domain_id, modified_at);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> domainmetadata (</span><br><span class="line">  <span class="keyword">id</span>                    <span class="built_in">INT</span> AUTO_INCREMENT,</span><br><span class="line">  domain_id             <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  kind                  <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">  <span class="keyword">content</span>               <span class="built_in">TEXT</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">Engine</span>=<span class="keyword">InnoDB</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> domainmetadata_idx <span class="keyword">ON</span> domainmetadata (domain_id, kind);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> cryptokeys (</span><br><span class="line">  <span class="keyword">id</span>                    <span class="built_in">INT</span> AUTO_INCREMENT,</span><br><span class="line">  domain_id             <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  flags                 <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  active                <span class="built_in">BOOL</span>,</span><br><span class="line">  <span class="keyword">content</span>               <span class="built_in">TEXT</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">Engine</span>=<span class="keyword">InnoDB</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> domainidindex <span class="keyword">ON</span> cryptokeys(domain_id);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tsigkeys (</span><br><span class="line">  <span class="keyword">id</span>                    <span class="built_in">INT</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="keyword">name</span>                  <span class="built_in">VARCHAR</span>(<span class="number">255</span>),</span><br><span class="line">  algorithm             <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">  secret                <span class="built_in">VARCHAR</span>(<span class="number">255</span>),</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">Engine</span>=<span class="keyword">InnoDB</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> namealgoindex <span class="keyword">ON</span> tsigkeys(<span class="keyword">name</span>, algorithm);</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;以上参数设置为官方文档默认值，如果参数数值大小不对，可自行修改调整。数据库名、主机名、用户名及密码自行修改。<br>&emsp;&emsp;导入SQL语句<code>mysql -uroot -ppassword &lt; power.sql</code>，此时powerdns数据库就创建好了。</p><h4 id="配置PowerDNS使用mariadb作为后台数据存储"><a href="#配置PowerDNS使用mariadb作为后台数据存储" class="headerlink" title="配置PowerDNS使用mariadb作为后台数据存储"></a>配置PowerDNS使用mariadb作为后台数据存储</h4><p>可参见官方文档的设置参数：</p><blockquote><p><strong>gmysql-host</strong><br>Host (ip address) to connect to. Mutually exclusive with gmysql-socket.<br>WARNING: When specified as a hostname a chicken/egg situation might arise where the database is needed to resolve the IP address of the database. It is best to supply an IP address of the database here.<br><strong>gmysql-port</strong><br>The port to connect to on gmysql-host. Default: 3306<br><strong>gmysql-socket</strong><br>Connect to the UNIX socket at this path. Mutually exclusive with gmysql-host.<br><strong>gmysql-dbname</strong><br>Name of the database to connect to. Default: “pdns”.<br><strong>gmysql-user</strong><br>User to connect as. Default: “powerdns”.<br><strong>gmysql-group</strong><br>Group to connect as. Default: “client”.<br><strong>gmysql-password</strong><br>The password to for gmysql-user.<br><strong>gmysql-dnssec</strong><br>Enable DNSSEC processing for this backend. Default=no.<br><strong>gmysql-innodb-read-committed</strong><br>Use the InnoDB READ-COMMITTED transaction isolation level.<br>Default=yes.<br><strong>gmysql-timeout</strong><br>The timeout in seconds for each attempt to read from, or write to the server. A value of 0 will disable the timeout. Default: 10</p></blockquote><p>&emsp;&emsp;官方文档第一条写的很清楚，gmysql-localhost那一项最好填ip，或者你的hostname为localhost也可以解析成127.0.0.1，所以虽然我是本机数据库，也选择直接使用127.0.0.1（我试了localhost，提示无法连接数据库，应该是因为我改了hostname导致没法解析成127.0.0.1了，干脆直接用ip就成功连接了）</p><p><code>vim /etc/pdns/pdns.conf</code><br>&emsp;&emsp;用/搜索到”launch=”将值修改为gmysql，并在下面添加mysql的相关信息设置：<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">launch</span>=gmysql</span><br><span class="line"><span class="attr">gmysql-host</span>=<span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">gmysql-port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">gmysql-dbname</span>=powerdns</span><br><span class="line"><span class="attr">gmysql-user</span>=powerdns</span><br><span class="line"><span class="attr">gmysql-password</span>=powerdns</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;好了pdns服务就配置好了，启动服务.<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start pdns</span><br><span class="line">systemctl enable pdns</span><br></pre></td></tr></table></figure></p><h3 id="搭建LAP架构用web界面实现pdns服务"><a href="#搭建LAP架构用web界面实现pdns服务" class="headerlink" title="搭建LAP架构用web界面实现pdns服务"></a>搭建LAP架构用web界面实现pdns服务</h3><h4 id="安装httpd和php相关包并启动httpd服务"><a href="#安装httpd和php相关包并启动httpd服务" class="headerlink" title="安装httpd和php相关包并启动httpd服务"></a>安装httpd和php相关包并启动httpd服务</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install httpd php php-devel php-gd php-mcrypt php-imap php-ldap php-mysql php-odbc php-pear php-xml php-xmlrpc php-mbstring php-mcrypt php-mhash gettext</span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl enable httpd</span><br></pre></td></tr></table></figure><h4 id="下载PowerAdmin程序，并解压缩到相应目录"><a href="#下载PowerAdmin程序，并解压缩到相应目录" class="headerlink" title="下载PowerAdmin程序，并解压缩到相应目录"></a>下载PowerAdmin程序，并解压缩到相应目录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://downloads.sourceforge.net/project/poweradmin/poweradmin-2.1.7.tgz</span><br><span class="line">tar xvf poweradmin-2.1.7.tgz -C /var/www/html</span><br><span class="line">cd /var/www/html</span><br><span class="line">mv poweradmin-2.1.7 poweradmin</span><br></pre></td></tr></table></figure><h4 id="登陆web界面安装PowerAdmin"><a href="#登陆web界面安装PowerAdmin" class="headerlink" title="登陆web界面安装PowerAdmin"></a>登陆web界面安装PowerAdmin</h4><p>&emsp;&emsp;浏览器输入<a href="http://powerdns服务器IP/poweradmin/install/" rel="noopener" target="_blank">http://powerdns服务器IP/poweradmin/install/</a> 进入安装向导界面。<br><img src="https://img-blog.csdnimg.cn/20191014132102422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;1.选择语言<br><img src="https://img-blog.csdnimg.cn/20191014132109107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;2. 确认powerdns服务已连接好数据库，如果之前已经有相关记录，本次安装将会清除之前的数据，时候确定安装。<br><img src="https://img-blog.csdnimg.cn/20191014132114800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;3.填写数据库相关信息<br><img src="https://img-blog.csdnimg.cn/20191014132120662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;4.为Poweradmin创建一个受限用户<br>&emsp;&emsp;说明：<br>&emsp;&emsp;&emsp;&emsp; Username：PowerAdmin用户名<br>&emsp;&emsp;&emsp;&emsp; Password：上述用户的密码<br>&emsp;&emsp;&emsp;&emsp; Hostmaster：当创建SOA记录指定默认主机管理员<br>&emsp;&emsp;&emsp;&emsp; Primary nameserver：主域名服务器<br>&emsp;&emsp;&emsp;&emsp; Secondary namesever:辅域名服务器<br><img src="https://img-blog.csdnimg.cn/20191014132126802.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;5.按照下面页面说明，在数据库中创建用户并授权<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">ON</span> powerdns.*</span><br><span class="line"><span class="keyword">TO</span> <span class="string">'powerdns'</span>@<span class="string">'127.0.0.1'</span></span><br><span class="line"><span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'powerdns'</span>;</span><br></pre></td></tr></table></figure></p><p><img src="https://img-blog.csdnimg.cn/20191014132137177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;6.按下面页面说明，创建config.in.php文件内容<br>&emsp;&emsp;<code>vim /var/www/html/poweradmin/inc/config.inc.php</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&amp;lt?php</span><br><span class="line"></span><br><span class="line">$db_host                = <span class="string">'127.0.0.1'</span>;</span><br><span class="line">$db_user                = <span class="string">'powerdns'</span>;</span><br><span class="line">$db_pass                = <span class="string">'powerdns'</span>;</span><br><span class="line">$db_name                = <span class="string">'powerdns'</span>;</span><br><span class="line">$db_type                = <span class="string">'mysql'</span>;</span><br><span class="line">$db_layer               = <span class="string">'PDO'</span>;</span><br><span class="line"></span><br><span class="line">$session_key            = <span class="string">'Kae&#125;LCI!&amp;^Ew6(5eyd6B~!SVHRHhu+t(svkGqb1S&#123;C0&#125;TP'</span>;</span><br><span class="line"></span><br><span class="line">$iface_lang             = <span class="string">'en_EN'</span>;</span><br><span class="line"></span><br><span class="line">$dns_hostmaster         = <span class="string">'powerdns'</span>;</span><br><span class="line">$dns_ns1                = <span class="string">'192.168.32.7'</span>;</span><br><span class="line">$dns_ns2                = <span class="string">'192.168.32.7'</span>;`</span><br></pre></td></tr></table></figure></p><p><img src="https://img-blog.csdnimg.cn/20191014135839135.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;7.设置完成，删除install目录<br>&emsp;&emsp;<code>\rm -rf install</code><br><img src="https://img-blog.csdnimg.cn/20191014132142570.png" alt="在这里插入图片描述"><br>&emsp;&emsp;如果不进行第6、7步就会报错，如上图所示。<br><img src="https://img-blog.csdnimg.cn/2019101413425982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;8.输入用户名密码登陆<br><img src="https://img-blog.csdnimg.cn/20191014134306107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pY2VQcm8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&emsp;&emsp;9.进入主页面。至此PowerDNS在web上展示就实现了~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;PowerDNS 是一个跨平台的开源DNS服务组件，它是高性能的域名服务器，除了支持普通的BIND配置文件，PowerDNS还可以从MySQL,Oracle,PostgreSQL等的数据库读取数据。PowerDNS安装了Poweradmin(基于php实现)，能实现Web管理DNS记录，非常方便。&lt;br&gt;
    
    </summary>
    
      <category term="linux进阶" scheme="https://hewanyue.com/categories/linux%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="linux" scheme="https://hewanyue.com/tags/linux/"/>
    
      <category term="LAMP" scheme="https://hewanyue.com/tags/LAMP/"/>
    
      <category term="经验分享" scheme="https://hewanyue.com/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
      <category term="PowerDNS" scheme="https://hewanyue.com/tags/PowerDNS/"/>
    
  </entry>
  
  <entry>
    <title>yum/dnf 安装mariadb10.4.8（最新版）</title>
    <link href="https://hewanyue.com//blog/72c5296a.html"/>
    <id>https://hewanyue.com//blog/72c5296a.html</id>
    <published>2019-10-12T07:44:38.000Z</published>
    <updated>2019-12-04T03:43:02.797Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>&emsp;&emsp;近期想在新出的CentOS8上安装一下最新版的mariadb10.4.8，不过又嫌源码编译太麻烦费时间。就想去找找有没有yum源可用。<br><a id="more"></a><br>&emsp;&emsp;果然官网上已经放出了yum安装的repo源了，也支持到CentOS8了——<a href="http://mirror.aarnet.edu.au/pub/MariaDB//mariadb-10.4.8/yum/centos/8/x86_64/" rel="noopener" target="_blank">http://mirror.aarnet.edu.au/pub/MariaDB//mariadb-10.4.8/yum/centos/8/x86_64/</a><br>&emsp;&emsp;那就手动加一个yum源吧。<br>&emsp;&emsp;<code>vim /etc/yum.repos.d/mariadb1048.repo</code><br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mariadb10.4.8]</span></span><br><span class="line"><span class="attr">name</span>=Mariadb10.<span class="number">4.8</span> RPM repository for  Linux <span class="variable">$releasever</span> - <span class="variable">$basearch</span></span><br><span class="line"><span class="attr">baseurl</span>=http://mirror.aarnet.edu.au/pub/MariaDB//mariadb-<span class="number">10.4</span>.<span class="number">8</span>/yum/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;加好yum源后，执行安装<code>dnf install mariadb-server -y</code><br><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">aliyun                                                                                               <span class="number">4.7</span> kB/s | <span class="number">5.3</span> kB     <span class="number">00</span>:<span class="number">01</span>    </span><br><span class="line">cdrom-AppStream                                                                                      <span class="number">4.1</span> MB/s | <span class="number">4.3</span> kB     <span class="number">00</span>:<span class="number">00</span>    </span><br><span class="line">cdrom-base                                                                                           <span class="number">3.8</span> MB/s | <span class="number">3.9</span> kB     <span class="number">00</span>:<span class="number">00</span>    </span><br><span class="line">Mariadb10<span class="number">.4</span><span class="number">.8</span> RPM repository <span class="keyword">for</span>  Linux <span class="number">8</span> - x86_64                                                   <span class="number">1.8</span> kB/s | <span class="number">2.9</span> kB     <span class="number">00</span>:<span class="number">01</span>    </span><br><span class="line">Dependencies resolved.</span><br><span class="line">=====================================================================================================================================</span><br><span class="line"> Package                          Arch             Version                                           Repository                 Size</span><br><span class="line">=====================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> mariadb-server                   x86_64           <span class="number">3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed            cdrom-AppStream            <span class="number">16</span> M</span><br><span class="line">Installing dependencies:</span><br><span class="line"> mariadb                          x86_64           <span class="number">3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed            cdrom-AppStream           <span class="number">6.2</span> M</span><br><span class="line"> mariadb-common                   x86_64           <span class="number">3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed            cdrom-AppStream            <span class="number">62</span> k</span><br><span class="line"> mariadb-connector-c              x86_64           <span class="number">3.0</span><span class="number">.7</span><span class="number">-1.</span>el8                                       cdrom-AppStream           <span class="number">148</span> k</span><br><span class="line"> mariadb-errmsg                   x86_64           <span class="number">3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed            cdrom-AppStream           <span class="number">232</span> k</span><br><span class="line"> perl-DBD-MySQL                   x86_64           <span class="number">4.046</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">72</span>+<span class="number">668237</span>d8                cdrom-AppStream           <span class="number">156</span> k</span><br><span class="line"> perl-DBI                         x86_64           <span class="number">1.641</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">66</span>+fe1eca09                cdrom-AppStream           <span class="number">740</span> k</span><br><span class="line"> perl-Digest                      noarch           <span class="number">1.17</span><span class="number">-395.</span>el8                                      cdrom-AppStream            <span class="number">27</span> k</span><br><span class="line"> perl-Digest-MD5                  x86_64           <span class="number">2.55</span><span class="number">-396.</span>el8                                      cdrom-AppStream            <span class="number">37</span> k</span><br><span class="line"> perl-Net-SSLeay                  x86_64           <span class="number">1.85</span><span class="number">-6.</span>el8                                        cdrom-AppStream           <span class="number">358</span> k</span><br><span class="line"> perl-URI                         noarch           <span class="number">1.73</span><span class="number">-3.</span>el8                                        cdrom-AppStream           <span class="number">116</span> k</span><br><span class="line"> perl-libnet                      noarch           <span class="number">3.11</span><span class="number">-3.</span>el8                                        cdrom-AppStream           <span class="number">121</span> k</span><br><span class="line"> perl-Carp                        noarch           <span class="number">1.42</span><span class="number">-396.</span>el8                                      cdrom-base                 <span class="number">30</span> k</span><br><span class="line"> perl-Data-Dumper                 x86_64           <span class="number">2.167</span><span class="number">-399.</span>el8                                     cdrom-base                 <span class="number">58</span> k</span><br><span class="line"> perl-Encode                      x86_64           <span class="number">4</span>:<span class="number">2.97</span><span class="number">-3.</span>el8                                      cdrom-base                <span class="number">1.5</span> M</span><br><span class="line"> perl-Errno                       x86_64           <span class="number">1.28</span><span class="number">-416.</span>el8                                      cdrom-base                 <span class="number">76</span> k</span><br><span class="line"> perl-Exporter                    noarch           <span class="number">5.72</span><span class="number">-396.</span>el8                                      cdrom-base                 <span class="number">34</span> k</span><br><span class="line"> perl-File-Path                   noarch           <span class="number">2.15</span><span class="number">-2.</span>el8                                        cdrom-base                 <span class="number">38</span> k</span><br><span class="line"> perl-File-Temp                   noarch           <span class="number">0.230</span><span class="number">.600</span><span class="number">-1.</span>el8                                   cdrom-base                 <span class="number">63</span> k</span><br><span class="line"> perl-Getopt-Long                 noarch           <span class="number">1</span>:<span class="number">2.50</span><span class="number">-4.</span>el8                                      cdrom-base                 <span class="number">63</span> k</span><br><span class="line"> perl-HTTP-Tiny                   noarch           <span class="number">0.074</span><span class="number">-1.</span>el8                                       cdrom-base                 <span class="number">58</span> k</span><br><span class="line"> perl-IO                          x86_64           <span class="number">1.38</span><span class="number">-416.</span>el8                                      cdrom-base                <span class="number">141</span> k</span><br><span class="line"> perl-MIME-Base64                 x86_64           <span class="number">3.15</span><span class="number">-396.</span>el8                                      cdrom-base                 <span class="number">31</span> k</span><br><span class="line"> perl-Math-BigInt                 noarch           <span class="number">1</span>:<span class="number">1.9998</span><span class="number">.11</span><span class="number">-5.</span>el8                                 cdrom-base                <span class="number">195</span> k</span><br><span class="line"> perl-Math-Complex                noarch           <span class="number">1.59</span><span class="number">-416.</span>el8                                      cdrom-base                <span class="number">108</span> k</span><br><span class="line"> perl-PathTools                   x86_64           <span class="number">3.74</span><span class="number">-1.</span>el8                                        cdrom-base                 <span class="number">90</span> k</span><br><span class="line"> perl-Pod-Escapes                 noarch           <span class="number">1</span>:<span class="number">1.07</span><span class="number">-395.</span>el8                                    cdrom-base                 <span class="number">20</span> k</span><br><span class="line"> perl-Pod-Perldoc                 noarch           <span class="number">3.28</span><span class="number">-396.</span>el8                                      cdrom-base                 <span class="number">86</span> k</span><br><span class="line"> perl-Pod-Simple                  noarch           <span class="number">1</span>:<span class="number">3.35</span><span class="number">-395.</span>el8                                    cdrom-base                <span class="number">213</span> k</span><br><span class="line"> perl-Pod-Usage                   noarch           <span class="number">4</span>:<span class="number">1.69</span><span class="number">-395.</span>el8                                    cdrom-base                 <span class="number">34</span> k</span><br><span class="line"> perl-Scalar-List-Utils           x86_64           <span class="number">3</span>:<span class="number">1.49</span><span class="number">-2.</span>el8                                      cdrom-base                 <span class="number">68</span> k</span><br><span class="line"> perl-Socket                      x86_64           <span class="number">4</span>:<span class="number">2.027</span><span class="number">-2.</span>el8                                     cdrom-base                 <span class="number">59</span> k</span><br><span class="line"> perl-Storable                    x86_64           <span class="number">1</span>:<span class="number">3.11</span><span class="number">-3.</span>el8                                      cdrom-base                 <span class="number">98</span> k</span><br><span class="line"> perl-Term-ANSIColor              noarch           <span class="number">4.06</span><span class="number">-396.</span>el8                                      cdrom-base                 <span class="number">46</span> k</span><br><span class="line"> perl-Term-Cap                    noarch           <span class="number">1.17</span><span class="number">-395.</span>el8                                      cdrom-base                 <span class="number">23</span> k</span><br><span class="line"> perl-Text-ParseWords             noarch           <span class="number">3.30</span><span class="number">-395.</span>el8                                      cdrom-base                 <span class="number">18</span> k</span><br><span class="line"> perl-Text-Tabs+Wrap              noarch           <span class="number">2013.0523</span><span class="number">-395.</span>el8                                 cdrom-base                 <span class="number">24</span> k</span><br><span class="line"> perl-Time-Local                  noarch           <span class="number">1</span>:<span class="number">1.280</span><span class="number">-1.</span>el8                                     cdrom-base                 <span class="number">34</span> k</span><br><span class="line"> perl-Unicode-Normalize           x86_64           <span class="number">1.25</span><span class="number">-396.</span>el8                                      cdrom-base                 <span class="number">82</span> k</span><br><span class="line"> perl-constant                    noarch           <span class="number">1.33</span><span class="number">-396.</span>el8                                      cdrom-base                 <span class="number">25</span> k</span><br><span class="line"> perl-<span class="built_in">int</span>erpreter                 x86_64           <span class="number">4</span>:<span class="number">5.26</span><span class="number">.3</span><span class="number">-416.</span>el8                                  cdrom-base                <span class="number">6.3</span> M</span><br><span class="line"> perl-libs                        x86_64           <span class="number">4</span>:<span class="number">5.26</span><span class="number">.3</span><span class="number">-416.</span>el8                                  cdrom-base                <span class="number">1.6</span> M</span><br><span class="line"> perl-macros                      x86_64           <span class="number">4</span>:<span class="number">5.26</span><span class="number">.3</span><span class="number">-416.</span>el8                                  cdrom-base                 <span class="number">72</span> k</span><br><span class="line"> perl-parent                      noarch           <span class="number">1</span>:<span class="number">0.237</span><span class="number">-1.</span>el8                                     cdrom-base                 <span class="number">20</span> k</span><br><span class="line"> perl-podlators                   noarch           <span class="number">4.11</span><span class="number">-1.</span>el8                                        cdrom-base                <span class="number">118</span> k</span><br><span class="line"> perl-threads                     x86_64           <span class="number">1</span>:<span class="number">2.21</span><span class="number">-2.</span>el8                                      cdrom-base                 <span class="number">61</span> k</span><br><span class="line"> perl-threads-<span class="keyword">shared</span>              x86_64           <span class="number">1.58</span><span class="number">-2.</span>el8                                        cdrom-base                 <span class="number">48</span> k</span><br><span class="line"> psmisc                           x86_64           <span class="number">23.1</span><span class="number">-3.</span>el8                                        cdrom-base                <span class="number">151</span> k</span><br><span class="line"> MariaDB-client                   x86_64           <span class="number">10.4</span><span class="number">.8</span><span class="number">-1.</span>el8                                      mariadb10<span class="number">.4</span><span class="number">.8</span>              <span class="number">12</span> M</span><br><span class="line"> MariaDB-common                   x86_64           <span class="number">10.4</span><span class="number">.8</span><span class="number">-1.</span>el8                                      mariadb10<span class="number">.4</span><span class="number">.8</span>              <span class="number">87</span> k</span><br><span class="line">Installing weak dependencies:</span><br><span class="line"> mariadb-backup                   x86_64           <span class="number">3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed            cdrom-AppStream           <span class="number">6.2</span> M</span><br><span class="line"> mariadb-gssapi-server            x86_64           <span class="number">3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed            cdrom-AppStream            <span class="number">49</span> k</span><br><span class="line"> mariadb-server-utils             x86_64           <span class="number">3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed            cdrom-AppStream           <span class="number">1.6</span> M</span><br><span class="line"> perl-IO-Socket-IP                noarch           <span class="number">0.39</span><span class="number">-5.</span>el8                                        cdrom-AppStream            <span class="number">47</span> k</span><br><span class="line"> perl-IO-Socket-SSL               noarch           <span class="number">2.060</span><span class="number">-2.</span>el8                                       cdrom-AppStream           <span class="number">289</span> k</span><br><span class="line"> perl-Mozilla-CA                  noarch           <span class="number">20160104</span><span class="number">-7.</span>el8                                    cdrom-AppStream            <span class="number">15</span> k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=====================================================================================================================================</span><br><span class="line">Install  <span class="number">56</span> Packages</span><br><span class="line"></span><br><span class="line">Total size: <span class="number">56</span> M</span><br><span class="line">Total download size: <span class="number">12</span> M</span><br><span class="line">Installed size: <span class="number">260</span> M</span><br><span class="line">Is <span class="keyword">this</span> ok [y/N]: y</span><br><span class="line">Downloading Packages:</span><br><span class="line">(<span class="number">1</span>/<span class="number">2</span>): MariaDB-common<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64.rpm                                                         <span class="number">35</span> kB/s |  <span class="number">87</span> kB     <span class="number">00</span>:<span class="number">02</span>    </span><br><span class="line">(<span class="number">2</span>/<span class="number">2</span>): MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64.rpm                                                        <span class="number">195</span> kB/s |  <span class="number">12</span> MB     <span class="number">01</span>:<span class="number">02</span>    </span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                                                                <span class="number">197</span> kB/s |  <span class="number">12</span> MB     <span class="number">01</span>:<span class="number">02</span>     </span><br><span class="line">Running transaction check</span><br><span class="line">Transaction check succeeded.</span><br><span class="line">Running transaction test</span><br><span class="line">The downloaded packages were saved <span class="keyword">in</span> cache until the next successful transaction.</span><br><span class="line">You can remove cached packages by executing <span class="string">'dnf clean packages'</span>.</span><br><span class="line">Error: Transaction check error:</span><br><span class="line">  file /usr/bin/msql2mysql conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysql conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysql_find_rows conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysql_plugin conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysql_waitpid conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysqlaccess conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysqladmin conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysqlbinlog conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysqlcheck conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysqldump conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysqlimport conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysqlshow conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/bin/mysqlslap conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/msql2mysql<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysql<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysql_find_rows<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysql_plugin<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysql_waitpid<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysqlaccess<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysqladmin<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysqlbinlog<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysqlcheck<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysqldump<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysqlimport<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysqlshow<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  file /usr/share/man/man1/mysqlslap<span class="number">.1</span>.gz conflicts between attempted installs of mariadb<span class="number">-3</span>:<span class="number">10.3</span><span class="number">.11</span><span class="number">-2.</span>module_el8<span class="number">.0</span><span class="number">.0</span>+<span class="number">35</span>+<span class="number">6f</span>2527ed.x86_64 <span class="keyword">and</span> MariaDB-client<span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line"></span><br><span class="line">Error Summary</span><br><span class="line">-------------</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;竟然报错了，说是版本冲突。仔细一看，装的是本地光盘的mariadb-sever 3:10.3.11-2.module_el8.0.0+35+6f2527ed.用的是本地yum光盘yum源，看了下mariadb官网上的软件名称叫MariaDB-server-10.4.8-1.el8.x86_64.rpm，那就重新换成大写，<code>dnf install MariaDB-server</code>.还是报错：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS8 ~]<span class="comment">#yum install MariaDB-server</span></span><br><span class="line">Last metadata expiration <span class="keyword">check</span>: <span class="number">0</span>:<span class="number">05</span>:<span class="number">33</span> ago <span class="keyword">on</span> Sat <span class="number">12</span> <span class="keyword">Oct</span> <span class="number">2019</span> <span class="number">10</span>:<span class="number">19</span>:<span class="number">15</span> AM CST.</span><br><span class="line"><span class="keyword">No</span> <span class="keyword">match</span> <span class="keyword">for</span> argument: MariaDB-<span class="keyword">server</span></span><br><span class="line">  * Maybe you meant: mariadb-<span class="keyword">server</span></span><br><span class="line"><span class="keyword">Error</span>: Unable <span class="keyword">to</span> find a <span class="keyword">match</span></span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;那没办法，把本地光盘yum源禁用掉再试试吧<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS8 ~]<span class="comment">#vim /etc/yum.repos.d/cdrom.repo </span></span><br><span class="line">[root@CentOS8 ~]<span class="comment">#yum install mariadb-server</span></span><br><span class="line">Last metadata expiration <span class="keyword">check</span>: <span class="number">0</span>:<span class="number">13</span>:<span class="number">24</span> ago <span class="keyword">on</span> Sat <span class="number">12</span> <span class="keyword">Oct</span> <span class="number">2019</span> <span class="number">10</span>:<span class="number">34</span>:<span class="number">12</span> AM CST.</span><br><span class="line"><span class="keyword">No</span> <span class="keyword">match</span> <span class="keyword">for</span> argument: mariadb-<span class="keyword">server</span></span><br><span class="line">  * Maybe you meant: MariaDB-<span class="keyword">server</span></span><br><span class="line"><span class="keyword">Error</span>: Unable <span class="keyword">to</span> find a <span class="keyword">match</span></span><br><span class="line">[root@CentOS8 ~]<span class="comment">#yum install MariaDB-server</span></span><br><span class="line"><span class="keyword">Last</span> metadata expiration <span class="keyword">check</span>: <span class="number">0</span>:<span class="number">13</span>:<span class="number">36</span> ago <span class="keyword">on</span> Sat <span class="number">12</span> <span class="keyword">Oct</span> <span class="number">2019</span> <span class="number">10</span>:<span class="number">34</span>:<span class="number">12</span> AM CST.</span><br><span class="line"><span class="keyword">Error</span>: </span><br><span class="line"> Problem: cannot <span class="keyword">install</span> the best candidate <span class="keyword">for</span> the job</span><br><span class="line">  - <span class="keyword">nothing</span> provides rsync needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(<span class="keyword">strict</span>) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides /usr/<span class="keyword">bin</span>/perl needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(vars) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(Getopt::<span class="keyword">Long</span>) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(POSIX) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(<span class="keyword">File</span>::Basename) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(<span class="keyword">File</span>::<span class="keyword">Path</span>) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(<span class="keyword">Data</span>::Dumper) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(<span class="keyword">File</span>::Temp) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(<span class="keyword">File</span>::Copy) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(DBI) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides perl(<span class="keyword">Sys</span>::Hostname) needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">  - <span class="keyword">nothing</span> provides lsof needed <span class="keyword">by</span> MariaDB-<span class="keyword">server</span><span class="number">-10.4</span><span class="number">.8</span><span class="number">-1.</span>el8.x86_64</span><br><span class="line">(try <span class="keyword">to</span> <span class="keyword">add</span> <span class="string">'--skip-broken'</span> <span class="keyword">to</span> <span class="keyword">skip</span> uninstallable packages <span class="keyword">or</span> <span class="string">'--nobest'</span> <span class="keyword">to</span> <span class="keyword">use</span> <span class="keyword">not</span> <span class="keyword">only</span> best candidate packages)</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;这次倒是不能识别小写mariadb，只能识别大写了MariaDB。不过没有了本地光盘yum源，我这是最小安装的系统，也没法安装依赖了啊。这就陷入两难问题了。如果开启本地光盘yum源，无论后跟版本号或是大写都会提示找不到匹配项，小写的话就会去装mariadb-server3XXX版本，不开启本地光盘yum源的话，就没法装所需依赖了。<br>&emsp;&emsp;<strong>突然想起可以直接用包管理工具安装rpm包来解决依赖性的问题，还可以指定要按的主程序包</strong>。那就试试直接看：<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><span class="line">[root@CentOS8 ~]#dnf install http://mirror.aarnet.edu.au/pub/MariaDB//mariadb<span class="string">-10</span>.4.8/yum/centos/8/x86_64/rpms/MariaDB-server<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64.rpm</span><br><span class="line">Last metadata expiration check: 0:00:25 ago on Sat 12 Oct 2019 10:51:11 AM CST.</span><br><span class="line">MariaDB-server<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64.rpm                                                               197 kB/s |  26 MB     02:14    </span><br><span class="line">Dependencies resolved.</span><br><span class="line">=====================================================================================================================================</span><br><span class="line"> Package                           Arch              Version                                        Repository                  Size</span><br><span class="line">=====================================================================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> MariaDB-server                    x86_64            10.4.8<span class="string">-1</span>.el8                                   @commandline                26 M</span><br><span class="line">Installing dependencies:</span><br><span class="line"> boost-program-options             x86_64            1.66.0<span class="string">-6</span>.el8                                   cdrom-AppStream            143 k</span><br><span class="line"> perl-DBI                          x86_64            1.641<span class="string">-2</span>.module_el8.0.0<span class="string">+66</span>+fe1eca09             cdrom-AppStream            740 k</span><br><span class="line"> perl-Digest                       noarch            1.17<span class="string">-395</span>.el8                                   cdrom-AppStream             27 k</span><br><span class="line"> perl-Digest-MD5                   x86_64            2.55<span class="string">-396</span>.el8                                   cdrom-AppStream             37 k</span><br><span class="line"> perl-Net-SSLeay                   x86_64            1.85<span class="string">-6</span>.el8                                     cdrom-AppStream            358 k</span><br><span class="line"> perl-URI                          noarch            1.73<span class="string">-3</span>.el8                                     cdrom-AppStream            116 k</span><br><span class="line"> perl-libnet                       noarch            3.11<span class="string">-3</span>.el8                                     cdrom-AppStream            121 k</span><br><span class="line"> lsof                              x86_64            4.91<span class="string">-2</span>.el8                                     cdrom-base                 253 k</span><br><span class="line"> perl-Carp                         noarch            1.42<span class="string">-396</span>.el8                                   cdrom-base                  30 k</span><br><span class="line"> perl-Data-Dumper                  x86_64            2.167<span class="string">-399</span>.el8                                  cdrom-base                  58 k</span><br><span class="line"> perl-Encode                       x86_64            4:2.97<span class="string">-3</span>.el8                                   cdrom-base                 1.5 M</span><br><span class="line"> perl-Errno                        x86_64            1.28<span class="string">-416</span>.el8                                   cdrom-base                  76 k</span><br><span class="line"> perl-Exporter                     noarch            5.72<span class="string">-396</span>.el8                                   cdrom-base                  34 k</span><br><span class="line"> perl-File-Path                    noarch            2.15<span class="string">-2</span>.el8                                     cdrom-base                  38 k</span><br><span class="line"> perl-File-Temp                    noarch            0.230.600<span class="string">-1</span>.el8                                cdrom-base                  63 k</span><br><span class="line"> perl-Getopt-Long                  noarch            1:2.50<span class="string">-4</span>.el8                                   cdrom-base                  63 k</span><br><span class="line"> perl-HTTP-Tiny                    noarch            0.074<span class="string">-1</span>.el8                                    cdrom-base                  58 k</span><br><span class="line"> perl-IO                           x86_64            1.38<span class="string">-416</span>.el8                                   cdrom-base                 141 k</span><br><span class="line"> perl-MIME-Base64                  x86_64            3.15<span class="string">-396</span>.el8                                   cdrom-base                  31 k</span><br><span class="line"> perl-Math-BigInt                  noarch            1:1.9998.11<span class="string">-5</span>.el8                              cdrom-base                 195 k</span><br><span class="line"> perl-Math-Complex                 noarch            1.59<span class="string">-416</span>.el8                                   cdrom-base                 108 k</span><br><span class="line"> perl-PathTools                    x86_64            3.74<span class="string">-1</span>.el8                                     cdrom-base                  90 k</span><br><span class="line"> perl-Pod-Escapes                  noarch            1:1.07<span class="string">-395</span>.el8                                 cdrom-base                  20 k</span><br><span class="line"> perl-Pod-Perldoc                  noarch            3.28<span class="string">-396</span>.el8                                   cdrom-base                  86 k</span><br><span class="line"> perl-Pod-Simple                   noarch            1:3.35<span class="string">-395</span>.el8                                 cdrom-base                 213 k</span><br><span class="line"> perl-Pod-Usage                    noarch            4:1.69<span class="string">-395</span>.el8                                 cdrom-base                  34 k</span><br><span class="line"> perl-Scalar-List-Utils            x86_64            3:1.49<span class="string">-2</span>.el8                                   cdrom-base                  68 k</span><br><span class="line"> perl-Socket                       x86_64            4:2.027<span class="string">-2</span>.el8                                  cdrom-base                  59 k</span><br><span class="line"> perl-Storable                     x86_64            1:3.11<span class="string">-3</span>.el8                                   cdrom-base                  98 k</span><br><span class="line"> perl-Term-ANSIColor               noarch            4.06<span class="string">-396</span>.el8                                   cdrom-base                  46 k</span><br><span class="line"> perl-Term-Cap                     noarch            1.17<span class="string">-395</span>.el8                                   cdrom-base                  23 k</span><br><span class="line"> perl-Text-ParseWords              noarch            3.30<span class="string">-395</span>.el8                                   cdrom-base                  18 k</span><br><span class="line"> perl-Text-Tabs+Wrap               noarch            2013.0523<span class="string">-395</span>.el8                              cdrom-base                  24 k</span><br><span class="line"> perl-Time-Local                   noarch            1:1.280<span class="string">-1</span>.el8                                  cdrom-base                  34 k</span><br><span class="line"> perl-Unicode-Normalize            x86_64            1.25<span class="string">-396</span>.el8                                   cdrom-base                  82 k</span><br><span class="line"> perl-constant                     noarch            1.33<span class="string">-396</span>.el8                                   cdrom-base                  25 k</span><br><span class="line"> perl-interpreter                  x86_64            4:5.26.3<span class="string">-416</span>.el8                               cdrom-base                 6.3 M</span><br><span class="line"> perl-libs                         x86_64            4:5.26.3<span class="string">-416</span>.el8                               cdrom-base                 1.6 M</span><br><span class="line"> perl-macros                       x86_64            4:5.26.3<span class="string">-416</span>.el8                               cdrom-base                  72 k</span><br><span class="line"> perl-parent                       noarch            1:0.237<span class="string">-1</span>.el8                                  cdrom-base                  20 k</span><br><span class="line"> perl-podlators                    noarch            4.11<span class="string">-1</span>.el8                                     cdrom-base                 118 k</span><br><span class="line"> perl-threads                      x86_64            1:2.21<span class="string">-2</span>.el8                                   cdrom-base                  61 k</span><br><span class="line"> perl-threads-shared               x86_64            1.58<span class="string">-2</span>.el8                                     cdrom-base                  48 k</span><br><span class="line"> rsync                             x86_64            3.1.3<span class="string">-4</span>.el8                                    cdrom-base                 404 k</span><br><span class="line"> MariaDB-client                    x86_64            10.4.8<span class="string">-1</span>.el8                                   mariadb10.4.8               12 M</span><br><span class="line"> MariaDB-common                    x86_64            10.4.8<span class="string">-1</span>.el8                                   mariadb10.4.8               87 k</span><br><span class="line"> galera<span class="string">-4</span>                          x86_64            26.4.2<span class="string">-1</span>.rhel8.0.el8                           mariadb10.4.8               13 M</span><br><span class="line">Installing weak dependencies:</span><br><span class="line"> perl-IO-Socket-IP                 noarch            0.39<span class="string">-5</span>.el8                                     cdrom-AppStream             47 k</span><br><span class="line"> perl-IO-Socket-SSL                noarch            2.060<span class="string">-2</span>.el8                                    cdrom-AppStream            289 k</span><br><span class="line"> perl-Mozilla-CA                   noarch            20160104<span class="string">-7</span>.el8                                 cdrom-AppStream             15 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=====================================================================================================================================</span><br><span class="line">Install  51 Packages</span><br><span class="line"></span><br><span class="line">Total size: 65 M</span><br><span class="line">Total download size: 25 M</span><br><span class="line">Installed size: 236 M</span><br><span class="line">Is this ok [y/N]: y</span><br><span class="line">Downloading Packages:</span><br><span class="line">(1/3): MariaDB-common<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64.rpm                                                         35 kB/s |  87 kB     00:02    </span><br><span class="line">(2/3): MariaDB-client<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64.rpm                                                        203 kB/s |  12 MB     00:59    </span><br><span class="line">(3/3): galera<span class="string">-4</span><span class="string">-26</span>.4.2<span class="string">-1</span>.rhel8.0.el8.x86_64.rpm                                                      198 kB/s |  13 MB     01:08    </span><br><span class="line">-------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">Total                                                                                                376 kB/s |  25 MB     01:08     </span><br><span class="line">Running transaction check</span><br><span class="line">Transaction check succeeded.</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded.</span><br><span class="line">Running transaction</span><br><span class="line">  Preparing        :                                                                                                             1/1 </span><br><span class="line">  Installing       : perl-Exporter<span class="string">-5</span>.72<span class="string">-396</span>.el8.noarch                                                                          1/51 </span><br><span class="line">  Installing       : perl-libs<span class="string">-4</span>:5.26.3<span class="string">-416</span>.el8.x86_64                                                                          2/51 </span><br><span class="line">  Installing       : perl-Carp<span class="string">-1</span>.42<span class="string">-396</span>.el8.noarch                                                                              3/51 </span><br><span class="line">  Installing       : perl-Scalar-List-Utils<span class="string">-3</span>:1.49<span class="string">-2</span>.el8.x86_64                                                                 4/51 </span><br><span class="line">  Installing       : perl-parent<span class="string">-1</span>:0.237<span class="string">-1</span>.el8.noarch                                                                           5/51 </span><br><span class="line">  Installing       : perl-Text-ParseWords<span class="string">-3</span>.30<span class="string">-395</span>.el8.noarch                                                                   6/51 </span><br><span class="line">  Running scriptlet: MariaDB-common<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                         7/51 </span><br><span class="line">  Installing       : MariaDB-common<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                         7/51 </span><br><span class="line">  Running scriptlet: MariaDB-common<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                         7/51 </span><br><span class="line">  Installing       : perl-Term-ANSIColor<span class="string">-4</span>.06<span class="string">-396</span>.el8.noarch                                                                    8/51 </span><br><span class="line">  Installing       : perl-macros<span class="string">-4</span>:5.26.3<span class="string">-416</span>.el8.x86_64                                                                        9/51 </span><br><span class="line">  Installing       : perl-Errno<span class="string">-1</span>.28<span class="string">-416</span>.el8.x86_64                                                                            10/51 </span><br><span class="line">  Installing       : perl-Socket<span class="string">-4</span>:2.027<span class="string">-2</span>.el8.x86_64                                                                          11/51 </span><br><span class="line">  Installing       : perl-Text-Tabs+Wrap<span class="string">-2013</span>.0523<span class="string">-395</span>.el8.noarch                                                              12/51 </span><br><span class="line">  Installing       : perl-Unicode-Normalize<span class="string">-1</span>.25<span class="string">-396</span>.el8.x86_64                                                                13/51 </span><br><span class="line">  Installing       : perl-File-Path<span class="string">-2</span>.15<span class="string">-2</span>.el8.noarch                                                                          14/51 </span><br><span class="line">  Installing       : perl-IO<span class="string">-1</span>.38<span class="string">-416</span>.el8.x86_64                                                                               15/51 </span><br><span class="line">  Installing       : perl-PathTools<span class="string">-3</span>.74<span class="string">-1</span>.el8.x86_64                                                                          16/51 </span><br><span class="line">  Installing       : perl-constant<span class="string">-1</span>.33<span class="string">-396</span>.el8.noarch                                                                         17/51 </span><br><span class="line">  Installing       : perl-threads<span class="string">-1</span>:2.21<span class="string">-2</span>.el8.x86_64                                                                          18/51 </span><br><span class="line">  Installing       : perl-threads-shared<span class="string">-1</span>.58<span class="string">-2</span>.el8.x86_64                                                                     19/51 </span><br><span class="line">  Installing       : perl-interpreter<span class="string">-4</span>:5.26.3<span class="string">-416</span>.el8.x86_64                                                                  20/51 </span><br><span class="line">  Installing       : perl-MIME-Base64<span class="string">-3</span>.15<span class="string">-396</span>.el8.x86_64                                                                      21/51 </span><br><span class="line">  Installing       : perl-IO-Socket-IP<span class="string">-0</span>.39<span class="string">-5</span>.el8.noarch                                                                       22/51 </span><br><span class="line">  Installing       : perl-Data-Dumper<span class="string">-2</span>.167<span class="string">-399</span>.el8.x86_64                                                                     23/51 </span><br><span class="line">  Installing       : perl-File-Temp<span class="string">-0</span>.230.600<span class="string">-1</span>.el8.noarch                                                                     24/51 </span><br><span class="line">  Installing       : perl-Storable<span class="string">-1</span>:3.11<span class="string">-3</span>.el8.x86_64                                                                         25/51 </span><br><span class="line">  Installing       : perl-Time-Local<span class="string">-1</span>:1.280<span class="string">-1</span>.el8.noarch                                                                      26/51 </span><br><span class="line">  Installing       : perl-Digest<span class="string">-1</span>.17<span class="string">-395</span>.el8.noarch                                                                           27/51 </span><br><span class="line">  Installing       : perl-Digest-MD5<span class="string">-2</span>.55<span class="string">-396</span>.el8.x86_64                                                                       28/51 </span><br><span class="line">  Installing       : perl-Net-SSLeay<span class="string">-1</span>.85<span class="string">-6</span>.el8.x86_64                                                                         29/51 </span><br><span class="line">  Installing       : perl-Math-Complex<span class="string">-1</span>.59<span class="string">-416</span>.el8.noarch                                                                     30/51 </span><br><span class="line">  Installing       : perl-Math-BigInt<span class="string">-1</span>:1.9998.11<span class="string">-5</span>.el8.noarch                                                                 31/51 </span><br><span class="line">  Installing       : perl-Pod-Escapes<span class="string">-1</span>:1.07<span class="string">-395</span>.el8.noarch                                                                    32/51 </span><br><span class="line">  Installing       : perl-Term-Cap<span class="string">-1</span>.17<span class="string">-395</span>.el8.noarch                                                                         33/51 </span><br><span class="line">  Installing       : perl-Mozilla-CA<span class="string">-20160104</span><span class="string">-7</span>.el8.noarch                                                                     34/51 </span><br><span class="line">  Installing       : perl-Encode<span class="string">-4</span>:2.97<span class="string">-3</span>.el8.x86_64                                                                           35/51 </span><br><span class="line">  Installing       : perl-Pod-Simple<span class="string">-1</span>:3.35<span class="string">-395</span>.el8.noarch                                                                     36/51 </span><br><span class="line">  Installing       : perl-Getopt-Long<span class="string">-1</span>:2.50<span class="string">-4</span>.el8.noarch                                                                      37/51 </span><br><span class="line">  Installing       : perl-podlators<span class="string">-4</span>.11<span class="string">-1</span>.el8.noarch                                                                          38/51 </span><br><span class="line">  Installing       : perl-Pod-Usage<span class="string">-4</span>:1.69<span class="string">-395</span>.el8.noarch                                                                      39/51 </span><br><span class="line">  Installing       : perl-Pod-Perldoc<span class="string">-3</span>.28<span class="string">-396</span>.el8.noarch                                                                      40/51 </span><br><span class="line">  Installing       : perl-HTTP-Tiny<span class="string">-0</span>.074<span class="string">-1</span>.el8.noarch                                                                         41/51 </span><br><span class="line">  Installing       : perl-IO-Socket-SSL<span class="string">-2</span>.060<span class="string">-2</span>.el8.noarch                                                                     42/51 </span><br><span class="line">  Installing       : perl-libnet<span class="string">-3</span>.11<span class="string">-3</span>.el8.noarch                                                                             43/51 </span><br><span class="line">  Installing       : perl-URI<span class="string">-1</span>.73<span class="string">-3</span>.el8.noarch                                                                                44/51 </span><br><span class="line">  Installing       : perl-DBI<span class="string">-1</span>.641<span class="string">-2</span>.module_el8.0.0<span class="string">+66</span>+fe1eca09.x86_64                                                        45/51 </span><br><span class="line">  Running scriptlet: MariaDB-client<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                        46/51 </span><br><span class="line">  Installing       : MariaDB-client<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                        46/51 </span><br><span class="line">  Running scriptlet: MariaDB-client<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                        46/51 </span><br><span class="line">  Installing       : rsync<span class="string">-3</span>.1.3<span class="string">-4</span>.el8.x86_64                                                                                  47/51 </span><br><span class="line">  Installing       : lsof<span class="string">-4</span>.91<span class="string">-2</span>.el8.x86_64                                                                                    48/51 </span><br><span class="line">  Installing       : boost-program-options<span class="string">-1</span>.66.0<span class="string">-6</span>.el8.x86_64                                                                 49/51 </span><br><span class="line">  Running scriptlet: boost-program-options<span class="string">-1</span>.66.0<span class="string">-6</span>.el8.x86_64                                                                 49/51 </span><br><span class="line">  Running scriptlet: galera<span class="string">-4</span><span class="string">-26</span>.4.2<span class="string">-1</span>.rhel8.0.el8.x86_64                                                                      50/51 </span><br><span class="line">  Installing       : galera<span class="string">-4</span><span class="string">-26</span>.4.2<span class="string">-1</span>.rhel8.0.el8.x86_64                                                                      50/51 </span><br><span class="line">  Running scriptlet: galera<span class="string">-4</span><span class="string">-26</span>.4.2<span class="string">-1</span>.rhel8.0.el8.x86_64                                                                      50/51 </span><br><span class="line">  Running scriptlet: MariaDB-server<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                        51/51 </span><br><span class="line">  Installing       : MariaDB-server<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                        51/51 </span><br><span class="line">  Running scriptlet: MariaDB-server<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                        51/51 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Two all-privilege accounts were created.</span><br><span class="line">One is root@localhost, it has no password, but you need to</span><br><span class="line">be system 'root' user to connect. Use, for example, sudo mysql</span><br><span class="line">The second is mysql@localhost, it has no password either, but</span><br><span class="line">you need to be the system 'mysql' user to connect.</span><br><span class="line">After connecting you can set the password, if you would need to be</span><br><span class="line">able to connect as any of these users with a password and without sudo</span><br><span class="line"></span><br><span class="line">See the MariaDB Knowledgebase at http://mariadb.com/kb or the</span><br><span class="line">MySQL manual for more instructions.</span><br><span class="line"></span><br><span class="line">Please report any problems at http://mariadb.org/jira</span><br><span class="line"></span><br><span class="line">The latest information about MariaDB is available at http://mariadb.org/.</span><br><span class="line">You can find additional information about the MySQL part at:</span><br><span class="line">http://dev.mysql.com</span><br><span class="line">Consider joining MariaDB's strong and vibrant community:</span><br><span class="line">https://mariadb.org/get-involved/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  Verifying        : boost-program-options<span class="string">-1</span>.66.0<span class="string">-6</span>.el8.x86_64                                                                  1/51 </span><br><span class="line">  Verifying        : perl-DBI<span class="string">-1</span>.641<span class="string">-2</span>.module_el8.0.0<span class="string">+66</span>+fe1eca09.x86_64                                                         2/51 </span><br><span class="line">  Verifying        : perl-Digest<span class="string">-1</span>.17<span class="string">-395</span>.el8.noarch                                                                            3/51 </span><br><span class="line">  Verifying        : perl-Digest-MD5<span class="string">-2</span>.55<span class="string">-396</span>.el8.x86_64                                                                        4/51 </span><br><span class="line">  Verifying        : perl-IO-Socket-IP<span class="string">-0</span>.39<span class="string">-5</span>.el8.noarch                                                                        5/51 </span><br><span class="line">  Verifying        : perl-IO-Socket-SSL<span class="string">-2</span>.060<span class="string">-2</span>.el8.noarch                                                                      6/51 </span><br><span class="line">  Verifying        : perl-Mozilla-CA<span class="string">-20160104</span><span class="string">-7</span>.el8.noarch                                                                      7/51 </span><br><span class="line">  Verifying        : perl-Net-SSLeay<span class="string">-1</span>.85<span class="string">-6</span>.el8.x86_64                                                                          8/51 </span><br><span class="line">  Verifying        : perl-URI<span class="string">-1</span>.73<span class="string">-3</span>.el8.noarch                                                                                 9/51 </span><br><span class="line">  Verifying        : perl-libnet<span class="string">-3</span>.11<span class="string">-3</span>.el8.noarch                                                                             10/51 </span><br><span class="line">  Verifying        : lsof<span class="string">-4</span>.91<span class="string">-2</span>.el8.x86_64                                                                                    11/51 </span><br><span class="line">  Verifying        : perl-Carp<span class="string">-1</span>.42<span class="string">-396</span>.el8.noarch                                                                             12/51 </span><br><span class="line">  Verifying        : perl-Data-Dumper<span class="string">-2</span>.167<span class="string">-399</span>.el8.x86_64                                                                     13/51 </span><br><span class="line">  Verifying        : perl-Encode<span class="string">-4</span>:2.97<span class="string">-3</span>.el8.x86_64                                                                           14/51 </span><br><span class="line">  Verifying        : perl-Errno<span class="string">-1</span>.28<span class="string">-416</span>.el8.x86_64                                                                            15/51 </span><br><span class="line">  Verifying        : perl-Exporter<span class="string">-5</span>.72<span class="string">-396</span>.el8.noarch                                                                         16/51 </span><br><span class="line">  Verifying        : perl-File-Path<span class="string">-2</span>.15<span class="string">-2</span>.el8.noarch                                                                          17/51 </span><br><span class="line">  Verifying        : perl-File-Temp<span class="string">-0</span>.230.600<span class="string">-1</span>.el8.noarch                                                                     18/51 </span><br><span class="line">  Verifying        : perl-Getopt-Long<span class="string">-1</span>:2.50<span class="string">-4</span>.el8.noarch                                                                      19/51 </span><br><span class="line">  Verifying        : perl-HTTP-Tiny<span class="string">-0</span>.074<span class="string">-1</span>.el8.noarch                                                                         20/51 </span><br><span class="line">  Verifying        : perl-IO<span class="string">-1</span>.38<span class="string">-416</span>.el8.x86_64                                                                               21/51 </span><br><span class="line">  Verifying        : perl-MIME-Base64<span class="string">-3</span>.15<span class="string">-396</span>.el8.x86_64                                                                      22/51 </span><br><span class="line">  Verifying        : perl-Math-BigInt<span class="string">-1</span>:1.9998.11<span class="string">-5</span>.el8.noarch                                                                 23/51 </span><br><span class="line">  Verifying        : perl-Math-Complex<span class="string">-1</span>.59<span class="string">-416</span>.el8.noarch                                                                     24/51 </span><br><span class="line">  Verifying        : perl-PathTools<span class="string">-3</span>.74<span class="string">-1</span>.el8.x86_64                                                                          25/51 </span><br><span class="line">  Verifying        : perl-Pod-Escapes<span class="string">-1</span>:1.07<span class="string">-395</span>.el8.noarch                                                                    26/51 </span><br><span class="line">  Verifying        : perl-Pod-Perldoc<span class="string">-3</span>.28<span class="string">-396</span>.el8.noarch                                                                      27/51 </span><br><span class="line">  Verifying        : perl-Pod-Simple<span class="string">-1</span>:3.35<span class="string">-395</span>.el8.noarch                                                                     28/51 </span><br><span class="line">  Verifying        : perl-Pod-Usage<span class="string">-4</span>:1.69<span class="string">-395</span>.el8.noarch                                                                      29/51 </span><br><span class="line">  Verifying        : perl-Scalar-List-Utils<span class="string">-3</span>:1.49<span class="string">-2</span>.el8.x86_64                                                                30/51 </span><br><span class="line">  Verifying        : perl-Socket<span class="string">-4</span>:2.027<span class="string">-2</span>.el8.x86_64                                                                          31/51 </span><br><span class="line">  Verifying        : perl-Storable<span class="string">-1</span>:3.11<span class="string">-3</span>.el8.x86_64                                                                         32/51 </span><br><span class="line">  Verifying        : perl-Term-ANSIColor<span class="string">-4</span>.06<span class="string">-396</span>.el8.noarch                                                                   33/51 </span><br><span class="line">  Verifying        : perl-Term-Cap<span class="string">-1</span>.17<span class="string">-395</span>.el8.noarch                                                                         34/51 </span><br><span class="line">  Verifying        : perl-Text-ParseWords<span class="string">-3</span>.30<span class="string">-395</span>.el8.noarch                                                                  35/51 </span><br><span class="line">  Verifying        : perl-Text-Tabs+Wrap<span class="string">-2013</span>.0523<span class="string">-395</span>.el8.noarch                                                              36/51 </span><br><span class="line">  Verifying        : perl-Time-Local<span class="string">-1</span>:1.280<span class="string">-1</span>.el8.noarch                                                                      37/51 </span><br><span class="line">  Verifying        : perl-Unicode-Normalize<span class="string">-1</span>.25<span class="string">-396</span>.el8.x86_64                                                                38/51 </span><br><span class="line">  Verifying        : perl-constant<span class="string">-1</span>.33<span class="string">-396</span>.el8.noarch                                                                         39/51 </span><br><span class="line">  Verifying        : perl-interpreter<span class="string">-4</span>:5.26.3<span class="string">-416</span>.el8.x86_64                                                                  40/51 </span><br><span class="line">  Verifying        : perl-libs<span class="string">-4</span>:5.26.3<span class="string">-416</span>.el8.x86_64                                                                         41/51 </span><br><span class="line">  Verifying        : perl-macros<span class="string">-4</span>:5.26.3<span class="string">-416</span>.el8.x86_64                                                                       42/51 </span><br><span class="line">  Verifying        : perl-parent<span class="string">-1</span>:0.237<span class="string">-1</span>.el8.noarch                                                                          43/51 </span><br><span class="line">  Verifying        : perl-podlators<span class="string">-4</span>.11<span class="string">-1</span>.el8.noarch                                                                          44/51 </span><br><span class="line">  Verifying        : perl-threads<span class="string">-1</span>:2.21<span class="string">-2</span>.el8.x86_64                                                                          45/51 </span><br><span class="line">  Verifying        : perl-threads-shared<span class="string">-1</span>.58<span class="string">-2</span>.el8.x86_64                                                                     46/51 </span><br><span class="line">  Verifying        : rsync<span class="string">-3</span>.1.3<span class="string">-4</span>.el8.x86_64                                                                                  47/51 </span><br><span class="line">  Verifying        : MariaDB-client<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                        48/51 </span><br><span class="line">  Verifying        : MariaDB-common<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                        49/51 </span><br><span class="line">  Verifying        : galera<span class="string">-4</span><span class="string">-26</span>.4.2<span class="string">-1</span>.rhel8.0.el8.x86_64                                                                      50/51 </span><br><span class="line">  Verifying        : MariaDB-server<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                                                        51/51 </span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  MariaDB-server<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                             perl-IO-Socket-IP<span class="string">-0</span>.39<span class="string">-5</span>.el8.noarch                                 </span><br><span class="line">  perl-IO-Socket-SSL<span class="string">-2</span>.060<span class="string">-2</span>.el8.noarch                          perl-Mozilla-CA<span class="string">-20160104</span><span class="string">-7</span>.el8.noarch                               </span><br><span class="line">  boost-program-options<span class="string">-1</span>.66.0<span class="string">-6</span>.el8.x86_64                      perl-DBI<span class="string">-1</span>.641<span class="string">-2</span>.module_el8.0.0<span class="string">+66</span>+fe1eca09.x86_64                  </span><br><span class="line">  perl-Digest<span class="string">-1</span>.17<span class="string">-395</span>.el8.noarch                                perl-Digest-MD5<span class="string">-2</span>.55<span class="string">-396</span>.el8.x86_64                                 </span><br><span class="line">  perl-Net-SSLeay<span class="string">-1</span>.85<span class="string">-6</span>.el8.x86_64                              perl-URI<span class="string">-1</span>.73<span class="string">-3</span>.el8.noarch                                          </span><br><span class="line">  perl-libnet<span class="string">-3</span>.11<span class="string">-3</span>.el8.noarch                                  lsof<span class="string">-4</span>.91<span class="string">-2</span>.el8.x86_64                                              </span><br><span class="line">  perl-Carp<span class="string">-1</span>.42<span class="string">-396</span>.el8.noarch                                  perl-Data-Dumper<span class="string">-2</span>.167<span class="string">-399</span>.el8.x86_64                               </span><br><span class="line">  perl-Encode<span class="string">-4</span>:2.97<span class="string">-3</span>.el8.x86_64                                perl-Errno<span class="string">-1</span>.28<span class="string">-416</span>.el8.x86_64                                      </span><br><span class="line">  perl-Exporter<span class="string">-5</span>.72<span class="string">-396</span>.el8.noarch                              perl-File-Path<span class="string">-2</span>.15<span class="string">-2</span>.el8.noarch                                    </span><br><span class="line">  perl-File-Temp<span class="string">-0</span>.230.600<span class="string">-1</span>.el8.noarch                          perl-Getopt-Long<span class="string">-1</span>:2.50<span class="string">-4</span>.el8.noarch                                </span><br><span class="line">  perl-HTTP-Tiny<span class="string">-0</span>.074<span class="string">-1</span>.el8.noarch                              perl-IO<span class="string">-1</span>.38<span class="string">-416</span>.el8.x86_64                                         </span><br><span class="line">  perl-MIME-Base64<span class="string">-3</span>.15<span class="string">-396</span>.el8.x86_64                           perl-Math-BigInt<span class="string">-1</span>:1.9998.11<span class="string">-5</span>.el8.noarch                           </span><br><span class="line">  perl-Math-Complex<span class="string">-1</span>.59<span class="string">-416</span>.el8.noarch                          perl-PathTools<span class="string">-3</span>.74<span class="string">-1</span>.el8.x86_64                                    </span><br><span class="line">  perl-Pod-Escapes<span class="string">-1</span>:1.07<span class="string">-395</span>.el8.noarch                         perl-Pod-Perldoc<span class="string">-3</span>.28<span class="string">-396</span>.el8.noarch                                </span><br><span class="line">  perl-Pod-Simple<span class="string">-1</span>:3.35<span class="string">-395</span>.el8.noarch                          perl-Pod-Usage<span class="string">-4</span>:1.69<span class="string">-395</span>.el8.noarch                                </span><br><span class="line">  perl-Scalar-List-Utils<span class="string">-3</span>:1.49<span class="string">-2</span>.el8.x86_64                     perl-Socket<span class="string">-4</span>:2.027<span class="string">-2</span>.el8.x86_64                                    </span><br><span class="line">  perl-Storable<span class="string">-1</span>:3.11<span class="string">-3</span>.el8.x86_64                              perl-Term-ANSIColor<span class="string">-4</span>.06<span class="string">-396</span>.el8.noarch                             </span><br><span class="line">  perl-Term-Cap<span class="string">-1</span>.17<span class="string">-395</span>.el8.noarch                              perl-Text-ParseWords<span class="string">-3</span>.30<span class="string">-395</span>.el8.noarch                            </span><br><span class="line">  perl-Text-Tabs+Wrap<span class="string">-2013</span>.0523<span class="string">-395</span>.el8.noarch                   perl-Time-Local<span class="string">-1</span>:1.280<span class="string">-1</span>.el8.noarch                                </span><br><span class="line">  perl-Unicode-Normalize<span class="string">-1</span>.25<span class="string">-396</span>.el8.x86_64                     perl-constant<span class="string">-1</span>.33<span class="string">-396</span>.el8.noarch                                   </span><br><span class="line">  perl-interpreter<span class="string">-4</span>:5.26.3<span class="string">-416</span>.el8.x86_64                       perl-libs<span class="string">-4</span>:5.26.3<span class="string">-416</span>.el8.x86_64                                   </span><br><span class="line">  perl-macros<span class="string">-4</span>:5.26.3<span class="string">-416</span>.el8.x86_64                            perl-parent<span class="string">-1</span>:0.237<span class="string">-1</span>.el8.noarch                                    </span><br><span class="line">  perl-podlators<span class="string">-4</span>.11<span class="string">-1</span>.el8.noarch                               perl-threads<span class="string">-1</span>:2.21<span class="string">-2</span>.el8.x86_64                                    </span><br><span class="line">  perl-threads-shared<span class="string">-1</span>.58<span class="string">-2</span>.el8.x86_64                          rsync<span class="string">-3</span>.1.3<span class="string">-4</span>.el8.x86_64                                            </span><br><span class="line">  MariaDB-client<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                             MariaDB-common<span class="string">-10</span>.4.8<span class="string">-1</span>.el8.x86_64                                  </span><br><span class="line">  galera<span class="string">-4</span><span class="string">-26</span>.4.2<span class="string">-1</span>.rhel8.0.el8.x86_64                          </span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;果然成功了。问题解决。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;emsp;&amp;emsp;近期想在新出的CentOS8上安装一下最新版的mariadb10.4.8，不过又嫌源码编译太麻烦费时间。就想去找找有没有yum源可用。&lt;br&gt;
    
    </summary>
    
      <category term="NotOnlySQL" scheme="https://hewanyue.com/categories/NotOnlySQL/"/>
    
    
      <category term="经验分享" scheme="https://hewanyue.com/tags/%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    
      <category term="mariadb" scheme="https://hewanyue.com/tags/mariadb/"/>
    
      <category term="yum源" scheme="https://hewanyue.com/tags/yum%E6%BA%90/"/>
    
  </entry>
  
</feed>
